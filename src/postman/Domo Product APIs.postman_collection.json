{
	"info": {
		"_postman_id": "c7864beb-c4f8-47f0-91f6-d8a0a49e9c33",
		"name": "Domo Product APIs",
		"description": "# Introduction\n\nThe Domo Product APIs are the APIs that drive the entire Domo platform behind the scenes. Anything you can do via the user interface in Domo can be done via the Product APIs. The official documentation for these APIs can be found here: [Domo Developer - Product APIs Overview](https://developer.domo.com/portal/8ba9aedad3679-ap-is#product-apis). Now that I am a Domo employee, I will be working with them to pull my efforts into the official documentation over time. But, we wanted to provide the community with this information ASAP, which is why this Postman collection is being shared outside of the official documentation.\n\n# Disclaimer\n\nThis Postman collection is unofficial and not provided by Domo, Inc. I have been given permission by Domo to share this Postman collection with the Domo Community. However, use of this Postman collection is at your own risk. The Product APIs are subject to change without notice. You are responsible for anything done using these APIs. It is recommended to use them in a sandbox environment first so you don't accidentally mess up something in production. And it is not recommended to ever use these APIs with system critical processes.\n\nWhile this Postman collection is extensive, it isn't 100% comprehensive. Some endpoints and possible field values are missing. Most endpoints don't have response examples yet. I plan to continue to update this collection over time. If you fork this collection, you can pull these new updates as they become available to merge into your fork. You can also explore the Product APIs yourself by using a combination of this collection and the developer tools network console in your browser while in Domo. You can learn more about the developer tools in Google Chrome [here](https://developer.chrome.com/docs/devtools/overview#network).\n\n# Setup\n\n## Authentication\n\nAuthenticating to the Product APIs is achieved with an access token. This access token must be sent with every API request as the value to the header X-DOMO-Developer-Token. You can learn more about creating and managing access tokens [here](https://domo-support.domo.com/s/article/360042934494?language=en_US). In this collection, you can update the value of the variable X-DOMO-Developer-Token to have it included properly in your requests. You can do this by adding the access token to your Postman Vault (recommended), setting the value of the variable directly under the variables tab in this collection, or by creating an environment variable.\n\n## Instance\n\nYou must also set the value of the variable instance to properly ping your environment with this collection. You can find the value of instance by visitng your Domo environment in your browser, and copying the URL part between **https://** and **.domo.com**. You can either update the variable directly under the variables tab in this collection or by creating an environment variable to overwrite it.\n\n## Fork\n\nTo use the collection, you will need to fork it so you have a version saved to your own Postman account and workspace. Forking allows you to then modify the collection as you see fit, including saving responses as examples, adding specific IDs relevant to your environment, etc. As I update this collection over time, you can pull the updates from this main collection to your fork, and merge them how you see fit with any modifications you've made.\n\n# Help\n\nI've tried my best to document each endpoint using Postman's new [types feature](https://learning.postman.com/docs/design-apis/collections/view-properties-and-documentation/) as well as some written documentation. I plan to further the documentation over time. If you have questions or need additional help, the [Domo Community Forum](https://community-forums.domo.com/main/discussions) and [Domo User Group Slack](https://domousergroup.carrd.co/) are great resources. You can also send me a DM on the Domo User Group Slack.\n\n# Format\n\nThe folders in this collection are ordered alphabetically. The folders are named according to how they are referenced in the API endpoint. Sometimes, these terms don't match what you see in Domo. In those cases, I have added parentheses following the name that contain the common term used in the Domo user interface e.g., Pages (Dashboards).\n\nWithin each folder, endpoints are ordered top to bottom by the following categories, then by relevance within those:\n\n1. Subfolders\n    \n2. list/Search\n    \n3. Get\n    \n4. Operation (e.g., Share, Run, etc.)\n    \n5. Create\n    \n6. Update\n    \n7. Delete",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5049119",
		"_collection_link": "https://domodatacrew.postman.co/workspace/Domo-Documentation~d46be0df-b02c-4c0b-b161-a1b653762a80/collection/5049119-c7864beb-c4f8-47f0-91f6-d8a0a49e9c33?action=share&source=collection_link&creator=5049119"
	},
	"item": [
		{
			"name": "Accounts",
			"item": [
				{
					"name": "list Accounts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/data/v1/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v1",
								"accounts"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/data/v1/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data",
										"v1",
										"accounts"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 123,\n        \"userId\": 12345,\n        \"name\": \"<string>\",\n        \"displayName\": \"<string>\",\n        \"type\": \"data\",\n        \"valid\": true,\n        \"dataProviderType\": \"<string>\",\n        \"credentialsType\": \"oauth\",\n        \"createdAt\": 1735689600000,\n        \"createdBy\": 12345,\n        \"modifiedAt\": 1735689600000,\n        \"modifiedBy\": 12345,\n        \"configurations\": {},\n        \"accountId\": 123,\n        \"accountTemplateAuthorizationId\": null,\n        \"accountTemplateId\": null\n    }\n]"
						}
					]
				},
				{
					"name": "Search Accounts",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"count\": 100,\r\n    \"offset\": 0,\r\n    \"combineResults\": false,\r\n    \"query\": \"**\",\r\n    \"filters\": [],\r\n    \"facetValuesToInclude\": [\r\n        \"DATAPROVIDERNAME\",\r\n        \"OWNED_BY_ID\",\r\n        \"VALID\",\r\n        \"USED\",\r\n        \"LAST_MODIFIED_DATE\"\r\n    ],\r\n    \"queryProfile\": \"GLOBAL\",\r\n    \"entityList\": [\r\n        [\r\n            \"account\"\r\n        ]\r\n    ],\r\n    \"sort\": {\r\n        \"fieldSorts\": [\r\n            {\r\n                \"field\": \"display_name_sort\",\r\n                \"sortOrder\": \"ASC\"\r\n            }\r\n        ]\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/search/v1/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"v1",
								"query"
							]
						}
					},
					"response": []
				},
				{
					"name": "list OAuth Configurations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/data/v1/accounts/templates/user/extended",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v1",
								"accounts",
								"templates",
								"user",
								"extended"
							]
						}
					},
					"response": []
				},
				{
					"name": "list Providers with Accounts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/data/v2/datasources/providers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v2",
								"datasources",
								"providers"
							]
						}
					},
					"response": []
				},
				{
					"name": "list Providers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/data/v1/providers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v1",
								"providers"
							],
							"query": [
								{
									"key": "fields",
									"value": "id,key,name,authenticationScheme,connectorValidatorPresent,defaultConnectorId",
									"disabled": true
								},
								{
									"key": "filter",
									"value": "withAccounts",
									"disabled": true
								},
								{
									"key": "includeFederated",
									"value": "false",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Accounts for Provider",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/data/v1/accounts/provider/:provider",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v1",
								"accounts",
								"provider",
								":provider"
							],
							"variable": [
								{
									"key": "provider",
									"value": "json5",
									"description": "Provider Key"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Account",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/data/v1/accounts/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v1",
								"accounts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Account ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Account Credentials",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/data/v1/providers/:provider/account/:id?unmask=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v1",
								"providers",
								":provider",
								"account",
								":id"
							],
							"query": [
								{
									"key": "unmask",
									"value": "true"
								}
							],
							"variable": [
								{
									"key": "provider",
									"value": "json5",
									"description": "Provider Key"
								},
								{
									"key": "id",
									"value": "",
									"description": "Account ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Provider",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/data/v1/providers/:provider?fields=all&country=US&language=en",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v1",
								"providers",
								":provider"
							],
							"query": [
								{
									"key": "fields",
									"value": "all"
								},
								{
									"key": "country",
									"value": "US"
								},
								{
									"key": "language",
									"value": "en"
								}
							],
							"variable": [
								{
									"key": "provider",
									"value": "json5",
									"description": "Provider Key"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Provider Image",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/data/v1/providers/:provider/images/96.png",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"data",
								"v1",
								"providers",
								":provider",
								"images",
								"96.png"
							],
							"variable": [
								{
									"key": "provider",
									"value": "json5",
									"description": "Provider Key"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Appstore Connector",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/connectors/appstore/v2/details/connector/:connector?fields=all&country=US&language=en",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"connectors",
								"appstore",
								"v2",
								"details",
								"connector",
								":connector"
							],
							"query": [
								{
									"key": "fields",
									"value": "all"
								},
								{
									"key": "country",
									"value": "US"
								},
								{
									"key": "language",
									"value": "en"
								}
							],
							"variable": [
								{
									"key": "connector",
									"value": "json5",
									"description": "Provider Key"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DataSets Used by Account",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/data/v2/datasources/account/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v2",
								"datasources",
								"account",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Account ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DataSets Used by Accounts (Bulk)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    123,\r\n    234\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/data/v2/datasources/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v2",
								"datasources",
								"accounts"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    123,\r\n    234\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/data/v2/datasources/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data",
										"v2",
										"datasources",
										"accounts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"123\": [\n        {\n            \"dataSourceId\": \"00000000-0000-0000-0000-000000000000\",\n            \"dataSourceName\": \"<string>\",\n            \"dataSourceType\": null,\n            \"dataSourceDescription\": null,\n            \"updateFrequency\": null,\n            \"lastTouched\": null,\n            \"lastUpdated\": null,\n            \"dataLastUpdated\": null,\n            \"externalDataLastUpdated\": null,\n            \"responsibleUserId\": \"12345\",\n            \"created\": null,\n            \"createdDate\": null,\n            \"lastIndexedDataVersionId\": null,\n            \"dataProviderType\": null,\n            \"connectorId\": null,\n            \"connectorVersion\": null,\n            \"userDefinedType\": null,\n            \"properties\": {\n                \"formulas\": {\n                    \"formulas\": {}\n                }\n            },\n            \"cardCount\": null,\n            \"hidden\": false,\n            \"tags\": null,\n            \"lastModified\": null,\n            \"cloudId\": null,\n            \"cloudStorageLocation\": null,\n            \"displayType\": null\n        }\n    ],\n    \"234\": [\n        {\n            \"dataSourceId\": \"00000000-0000-0000-0000-000000000000\",\n            \"dataSourceName\": \"<string>\",\n            \"dataSourceType\": null,\n            \"dataSourceDescription\": null,\n            \"updateFrequency\": null,\n            \"lastTouched\": null,\n            \"lastUpdated\": null,\n            \"dataLastUpdated\": null,\n            \"externalDataLastUpdated\": null,\n            \"responsibleUserId\": \"12345\",\n            \"created\": null,\n            \"createdDate\": null,\n            \"lastIndexedDataVersionId\": null,\n            \"dataProviderType\": null,\n            \"connectorId\": null,\n            \"connectorVersion\": null,\n            \"userDefinedType\": null,\n            \"properties\": {\n                \"formulas\": {\n                    \"formulas\": {}\n                }\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Validate Account Credentials",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dataProviderKey\": \"json5\",\r\n    \"credentials\": {\r\n        \"authentication\": \"apiKey\",\r\n        \"apiType\": \"header\",\r\n        \"name\": \"<string>\",\r\n        \"apiKey\": \"<string>\"\r\n    },\r\n    \"accountId\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/data/v1/accounts/validators",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v1",
								"accounts",
								"validators"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Account",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"<string>\",\r\n    \"displayName\": \"<string>\",\r\n    \"dataProviderType\": \"json5\",\r\n    \"configurations\": {\r\n        \"authentication\": \"apiKey\",\r\n        \"apiType\": \"header\",\r\n        \"name\": \"<string>\",\r\n        \"apiKey\": \"<string>\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/data/v1/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v1",
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Account Name",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "Raw text name",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/data/v1/accounts/:id/name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"data",
								"v1",
								"accounts",
								":id",
								"name"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Account ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Account Credentials",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"<property>\": \"<value>\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/data/v1/providers/:providerId/account/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v1",
								"providers",
								":providerId",
								"account",
								":id"
							],
							"variable": [
								{
									"key": "providerId",
									"value": "json5",
									"description": "Provider Key"
								},
								{
									"key": "id",
									"value": "",
									"description": "Account ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Account Access",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"GROUP\", //USER or GROUP\r\n    \"id\": 12345, \r\n    \"accessLevel\": \"OWNER\" //CAN_VIEW, CAN_SHARE, CAN_EDIT, or OWNER\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/data/v2/accounts/share/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v2",
								"accounts",
								"share",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Account ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Account",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/data/v1/accounts/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v1",
								"accounts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Account ID"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Accounts store authorization and connection details for DataSet connectors. You can access the **Accounts** interface from inside the Data Center. In the Domo navigation, select **Data**. Then select **Accounts** (key icon) in the left sidebar.\n\n[Accounts Official Documentation](https://domo-support.domo.com/s/article/360042926054?language=en_US)"
		},
		{
			"name": "Achievements",
			"item": [
				{
					"name": "list Achievements",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/achievements/bulk?limit=500&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"achievements",
								"bulk"
							],
							"query": [
								{
									"key": "limit",
									"value": "500"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/content/v1/achievements/bulk?limit=500&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content",
										"v1",
										"achievements",
										"bulk"
									],
									"query": [
										{
											"key": "limit",
											"value": "500"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"_metadata\": {\n        \"limit\": 500,\n        \"offset\": 0\n    },\n    \"achievements\": [\n        {\n            \"id\": 1,\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"createdBy\": 1234,\n            \"created\": 1735689600000,\n            \"updated\": 1735689600000,\n            \"administrators\": [\n                {\n                    \"id\": 1,\n                    \"userId\": 1234,\n                    \"achievementId\": 1,\n                    \"issueExpiration\": 1735689600000\n                },\n                {\n                    \"id\": 2,\n                    \"userId\": 1234,\n                    \"achievementId\": 1,\n                    \"issueExpiration\": 1735689600000\n                }\n            ]\n        },\n        {\n            \"id\": 2,\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"createdBy\": 2345,\n            \"created\": 1735689600000,\n            \"updated\": 1735689600000,\n            \"administrators\": [\n                {\n                    \"id\": 3,\n                    \"userId\": 2345,\n                    \"achievementId\": 2,\n                    \"issueExpiration\": 1735689600000\n                }\n            ]\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get Achievement",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/achievements/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"achievements",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Achievement ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/content/v1/achievements/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content",
										"v1",
										"achievements",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "Achievement ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"createdBy\": 1234,\n    \"created\": 1735689600000,\n    \"updated\": 1735689600000,\n    \"image\": \"<base64>\",\n    \"administrators\": [\n        {\n            \"id\": 1,\n            \"userId\": 1234,\n            \"achievementId\": 1,\n            \"issueExpiration\": 1735689600000\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get Achievement Admins",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/achievements/:id/admins",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"achievements",
								":id",
								"admins"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Achievement ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/content/v1/achievements/:id/admins",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content",
										"v1",
										"achievements",
										":id",
										"admins"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "Achievement ID"
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"admins\": [\n        {\n            \"id\": 1,\n            \"userId\": 1234,\n            \"achievementId\": 1,\n            \"issueExpiration\": 1735689600000\n        },\n        {\n            \"id\": 2,\n            \"userId\": 1234,\n            \"achievementId\": 1,\n            \"issueExpiration\": 1735689600000\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Create Achievement",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"image\": \"<base64>\",\n    \"administrators\": [\n        {\n            \"userId\": 1234\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v1/achievements",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"achievements"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"image\": \"<base64>\",\n    \"administrators\": [\n        {\n            \"userId\": 1234\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/content/v1/achievements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content",
										"v1",
										"achievements"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"createdBy\": 1234,\n    \"created\": 1735689600000,\n    \"updated\": 1735689600000,\n    \"image\": \"<base64>\",\n    \"administrators\": [\n        {\n            \"id\": 1,\n            \"userId\": 1234,\n            \"achievementId\": 1,\n            \"issueExpiration\": 1735689600000\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Create Achievement Admin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": 1234\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v1/achievements/:achievementId/admins",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"achievements",
								":achievementId",
								"admins"
							],
							"variable": [
								{
									"key": "achievementId",
									"value": "",
									"description": "Achievement ID"
								}
							]
						},
						"description": "Response will return an array of the remaining admins, or an empty array if there was only one."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": 1234\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/content/v1/achievements/:achievementId/admins",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content",
										"v1",
										"achievements",
										":achievementId",
										"admins"
									],
									"variable": [
										{
											"key": "achievementId",
											"value": "1",
											"description": "Achievement ID"
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"userId\": 1234,\n    \"achievementId\": 1,\n    \"issueExpiration\": 1735689600000\n}"
						}
					]
				},
				{
					"name": "Update Achievement",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"image\": \"<base64>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v1/achievements/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"achievements",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Achievement ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"image\": \"<base64>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/content/v1/achievements/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content",
										"v1",
										"achievements",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "Achievement ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"createdBy\": 1234,\n    \"created\": 1735689600000,\n    \"updated\": 1735689600000,\n    \"image\": \"<base64>\",\n    \"administrators\": [\n        {\n            \"id\": 1,\n            \"userId\": 1234,\n            \"achievementId\": 1,\n            \"issueExpiration\": 1735689600000\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Delete Achievement",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/achievements/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"achievements",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Achievement ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/content/v1/achievements/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content",
										"v1",
										"achievements",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"description": "Achievement ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Delete Achievement Admin",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/achievements/:achievementId/admins/:adminId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"achievements",
								":achievementId",
								"admins",
								":adminId"
							],
							"variable": [
								{
									"key": "achievementId",
									"value": ""
								},
								{
									"key": "adminId",
									"value": ""
								}
							]
						},
						"description": "Response will return an array of the remaining admins, or an empty array if there was only one."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/content/v1/achievements/:achievementId/admins/:adminId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content",
										"v1",
										"achievements",
										":achievementId",
										"admins",
										":adminId"
									],
									"variable": [
										{
											"key": "achievementId",
											"value": ""
										},
										{
											"key": "adminId",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"userId\": 1234,\n        \"achievementId\": 1,\n        \"issueExpiration\": 1735689600000\n    },\n    {\n        \"id\": 2,\n        \"userId\": 1234,\n        \"achievementId\": 1,\n        \"issueExpiration\": 1735689600000\n    }\n]"
						}
					]
				}
			]
		},
		{
			"name": "Activity Log",
			"item": [
				{
					"name": "list Object Types",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/audit/v1/user-audits/objectTypes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"audit",
								"v1",
								"user-audits",
								"objectTypes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activity Log",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/audit/v1/user-audits?start=1700000000000&end=1800000000000&offset=0&limit=100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"audit",
								"v1",
								"user-audits"
							],
							"query": [
								{
									"key": "start",
									"value": "1700000000000",
									"description": "Epoch timestamp in miliseconds"
								},
								{
									"key": "end",
									"value": "1800000000000",
									"description": "Epoch timestamp in miliseconds"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "The Activity Log is a record of all actions taken in your Domo instance. This includes actions taken via the user interface, Product APIs, OAuth APIs, etc. You can access the Activity log from the Admin Settings (**More** > **Admin**). Under **Governance**, select **Activity log**.\n\n[Activity Log Official Documentation](https://domo-support.domo.com/s/article/360042934574?language=en_US)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "Authentication",
					"item": [
						{
							"name": "Update OTP Elevation Setting",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"false\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/customer/v1/properties/authentication.otp_elevation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customer",
										"v1",
										"properties",
										"authentication.otp_elevation"
									]
								}
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"false\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/customer/v1/properties/authentication.otp_elevation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"customer",
												"v1",
												"properties",
												"authentication.otp_elevation"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "AI/Data Science",
			"item": [
				{
					"name": "AutoML",
					"item": [
						{
							"name": "list Models on DataSet",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/dataprocessing/v1/ml/:datasetId/automl/job?includeDetails=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dataprocessing",
										"v1",
										"ml",
										":datasetId",
										"automl",
										"job"
									],
									"query": [
										{
											"key": "includeDetails",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "datasetId",
											"value": "",
											"description": "DataSet UUID"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Model",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/dataprocessing/v1/ml/:datasetId/automl/job/:modelId?includeCandidates=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dataprocessing",
										"v1",
										"ml",
										":datasetId",
										"automl",
										"job",
										":modelId"
									],
									"query": [
										{
											"key": "includeCandidates",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "datasetId",
											"value": "",
											"description": "DataSet UUID"
										},
										{
											"key": "modelId",
											"value": "",
											"description": "Model ID"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Model Schema",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/dataprocessing/v1/ml/automl/job/:modelId/schema",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dataprocessing",
										"v1",
										"ml",
										"automl",
										"job",
										":modelId",
										"schema"
									],
									"variable": [
										{
											"key": "modelId",
											"value": "",
											"description": "Model ID"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Explain Model",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/dataprocessing/v1/ml/automl/job/:modelId/explain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dataprocessing",
										"v1",
										"ml",
										"automl",
										"job",
										":modelId",
										"explain"
									],
									"variable": [
										{
											"key": "modelId",
											"value": "",
											"description": "Model ID"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "[AutoML Official Documentation](https://domo-support.domo.com/s/article/360048127854?language=en_US)"
				},
				{
					"name": "AI Models and Projects (User Generated)",
					"item": [
						{
							"name": "Models",
							"item": [
								{
									"name": "Get Model",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/datascience/ml/v1/models/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datascience",
												"ml",
												"v1",
												"models",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "Model UUID"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Model",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"if (pm.request.url.variables.get('id') !== JSON.parse(pm.request.body.raw).id) {\r",
													"    throw new Error('The URL parameter and body property for \"id\" don\\'t match. Adjust them to match each other and try again.')\r",
													"}"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"type\": \"AUTOML\",\r\n    \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"projectIds\": [\r\n        \"00000000-0000-0000-0000-000000000000\"\r\n    ],\r\n    \"name\": \"<string>\",\r\n    \"description\": \"<string>\",\r\n    \"owner\": \"123456\",\r\n    \"tasks\": [\r\n        {\r\n            \"task\": \"REGRESSION\",\r\n            \"input\": {\r\n                \"schema\": {\r\n                    \"dataSourceId\": \"<dataset_id>\",\r\n                    \"dataSourceName\": \"schema\",\r\n                    \"columns\": [\r\n                        {\r\n                            \"name\": \"Date Column\",\r\n                            \"type\": \"DATE\"\r\n                        },\r\n                        {\r\n                            \"name\": \"String Column\",\r\n                            \"type\": \"STRING\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"type\": \"CSV\",\r\n                \"mediaType\": \"text/csv\"\r\n            },\r\n            \"output\": {\r\n                \"schema\": {\r\n                    \"dataSourceId\": \"<dataset_id>\",\r\n                    \"dataSourceName\": \"<string>\",\r\n                    \"columns\": [\r\n                        {\r\n                            \"name\": \"predicted_label\",\r\n                            \"type\": \"DOUBLE\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"type\": \"CSV\",\r\n                \"mediaType\": \"text/csv\"\r\n            }\r\n        }\r\n    ],\r\n    \"executionTypes\": [\r\n        \"DATAFLOW\",\r\n        \"ENDPOINT\"\r\n    ],\r\n    \"training\": {\r\n        \"metrics\": {\r\n            \"train:mae\": {\r\n                \"name\": \"train:mae\",\r\n                \"value\": 123,\r\n                \"standardDeviation\": null,\r\n                \"timestamp\": \"2025-02-05T00:59:05Z\"\r\n            },\r\n            \"train:mse\": {\r\n                \"name\": \"train:mse\",\r\n                \"value\": 123,\r\n                \"standardDeviation\": null,\r\n                \"timestamp\": \"2025-02-05T00:59:05Z\"\r\n            },\r\n            \"train:rmse\": {\r\n                \"name\": \"train:rmse\",\r\n                \"value\": 123,\r\n                \"standardDeviation\": null,\r\n                \"timestamp\": \"2025-02-05T00:59:05Z\"\r\n            },\r\n            \"validation:r2\": {\r\n                \"name\": \"validation:r2\",\r\n                \"value\": 123,\r\n                \"standardDeviation\": null,\r\n                \"timestamp\": \"2025-02-05T00:59:05Z\"\r\n            },\r\n            \"validation:mae\": {\r\n                \"name\": \"validation:mae\",\r\n                \"value\": 123,\r\n                \"standardDeviation\": null,\r\n                \"timestamp\": \"2025-02-05T00:59:05Z\"\r\n            },\r\n            \"validation:mse\": {\r\n                \"name\": \"validation:mse\",\r\n                \"value\": 123,\r\n                \"standardDeviation\": null,\r\n                \"timestamp\": \"2025-02-05T00:59:05Z\"\r\n            },\r\n            \"ObjectiveMetric\": {\r\n                \"name\": \"ObjectiveMetric\",\r\n                \"value\": 123,\r\n                \"standardDeviation\": null,\r\n                \"timestamp\": \"2025-02-05T00:59:05Z\"\r\n            },\r\n            \"validation:rmse\": {\r\n                \"name\": \"validation:rmse\",\r\n                \"value\": 123,\r\n                \"standardDeviation\": null,\r\n                \"timestamp\": \"2025-02-05T00:59:05Z\"\r\n            }\r\n        },\r\n        \"hyperparameters\": {\r\n            \"eta\": \"<decimal>\",\r\n            \"alpha\": \"<decimal>\",\r\n            \"gamma\": \"<decimal>\",\r\n            \"lambda\": \"<decimal>\",\r\n            \"max_depth\": \"<integer>\",\r\n            \"num_round\": \"<integer>\",\r\n            \"objective\": \"reg:squarederror\",\r\n            \"subsample\": \"1.0\",\r\n            \"eval_metric\": \"mse,mae,rmse,r2\",\r\n            \"colsample_bytree\": \"<decimal>\",\r\n            \"min_child_weight\": \"<decimal>\",\r\n            \"_tuning_objective_metric\": \"validation:mse\",\r\n            \"save_model_on_termination\": \"true\"\r\n        },\r\n        \"algorithm\": \"XGBoost\"\r\n    },\r\n    \"created\": \"2025-02-05T20:13:32.776643Z\",\r\n    \"updated\": \"2025-02-05T20:13:32.776643Z\",\r\n    \"autoMLModelContext\": {\r\n        \"dataSourceId\": \"<dataset_id>\",\r\n        \"autoMLJobId\": 123,\r\n        \"automlModelId\": 123,\r\n        \"targetColumn\": \"<column_name>\"\r\n    },\r\n    \"endpointStatus\": \"UNKNOWN\",\r\n    \"permissionLevel\": \"ADMIN\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/datascience/ml/v1/models/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datascience",
												"ml",
												"v1",
												"models",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "Model UUID"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Model",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/datascience/ml/v1/models/:modelId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datascience",
												"ml",
												"v1",
												"models",
												":modelId"
											],
											"variable": [
												{
													"key": "modelId",
													"value": "",
													"description": "Model GUID"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Projects",
							"item": [
								{
									"name": "list Projects",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"limit\": 50,\r\n    \"sortFieldMap\": {\r\n        \"CREATED\": \"DESC\"\r\n    },\r\n    \"searchFieldMap\": {\r\n        \"NAME\": \"\"\r\n    },\r\n    \"filters\": [],\r\n    \"dateFilters\": {}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/datascience/ml/v1/search/projects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datascience",
												"ml",
												"v1",
												"search",
												"projects"
											]
										}
									},
									"response": []
								},
								{
									"name": "list Associated AutoML Models",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"limit\": 50,\r\n    \"sortFieldMap\": {\r\n        \"CREATED\": \"DESC\"\r\n    },\r\n    \"searchFieldMap\": {\r\n        \"NAME\": \"\"\r\n    },\r\n    \"filters\": [\r\n        {\r\n            \"type\": \"ML_PROJECT_ID\",\r\n            \"values\": [\r\n                \"00000000-0000-0000-0000-000000000000\"\r\n            ]\r\n        }\r\n    ],\r\n    \"metricFilters\": {},\r\n    \"dateFilters\": {},\r\n    \"sortMetricMap\": {}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/datascience/ml/v1/search/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datascience",
												"ml",
												"v1",
												"search",
												"models"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/datascience/ml/v1/projects/:projectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"datascience",
												"ml",
												"v1",
												"projects",
												":projectId"
											],
											"variable": [
												{
													"key": "projectId",
													"value": "",
													"description": "Project UUID"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"description": "[AI Models Official Documentation](https://domo-support.domo.com/s/article/000005502?language=en_US)"
				},
				{
					"name": "AI Service Layer",
					"item": [
						{
							"name": "Text to SQL",
							"item": [
								{
									"name": "list Models",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ai/v1/settings/services/sql/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ai",
												"v1",
												"settings",
												"services",
												"sql",
												"models"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Default Model",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ai/v1/settings/services/sql/models/default",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ai",
												"v1",
												"settings",
												"services",
												"sql",
												"models",
												"default"
											]
										}
									},
									"response": []
								},
								{
									"name": "Run Model",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"input\": \"<query>\",\r\n    \"system\": \"You are a SQL database expert that generates SQL queries for data visualization purposes. Your goal is to provide the most accurate and efficient solution to the problem at hand.\\n\\nPlease adhere to the following guidelines and restrictions:\\n\\n1. Always use column aliases <if var=\\\"locale\\\">(in ${locale})</if> for aggregations, calculations, and functions.<if var=\\\"disallowsList\\\">\\n\\n2. The following types of statements are not allowed: </if><if var=\\\"disallowCommonTableExpressions\\\">\\n - Common Table Expressions, also known as WITH queries.</if><if var=\\\"disallowJoins\\\">\\n - Joins</if><if var=\\\"disallowSubqueries\\\"> (except for Calendar() joins)\\n - Subqueries</if><if var=\\\"disallowUnions\\\">\\n - Unions</if><if var=\\\"disallowCorrelatedSubqueries\\\">\\n\\n3. Never use a correlated subquery, as this can negatively impact SQL query performance. Use an alternative method to achieve the solution, like using joins or window functions.</if>\\n\\n4. Include only the columns necessary to clearly answer your question, keeping the chart visually appealing by avoiding excessive series or data elements.\\n\\n<if var=\\\"max_columns\\\">5. It is critical that the number of select items in the provided sql query is between ${min_columns} and ${max_columns}. Do not use any more columns than absolutely necessary to answer the question.</if>\\nDo not add any labels, comments, or brackets to the SQL query.\\nOutput the answer in <SQL></SQL> XML tags. Skip any preamble.\\n<if var=\\\"fiscalYear\\\">${fiscalYear}</if>\\n<if var=\\\"locale\\\">The user's locale is ${locale}. Query aliases should be in ${locale}.</if>\\n\",\r\n    \"promptTemplate\": {\r\n        \"template\": \"<if var=\\\"today\\\">\\n  <current_date>Today's date is: ${today}</current_date>\\n  Use today's date for calculating relative time frames such as \\\"the past thirty days\\\" or \\\"last year,\\\" if specified.\\n  Otherwise, do not make assumptions about dates unless additional date-related instructions are given.\\n</if>\\n<if var=\\\"sql_examples\\\">\\n  <examples>\\n  ${sql_examples}\\n  </examples>\\n</if>\\n${commentToken} ${dialect}\\n${dataSourceSchemas}\\n${commentToken} Generate a query to answer the following:\\n${commentToken} ${input}\\n\"\r\n    },\r\n    \"model\": \"domo.domo_ai.domogpt-sql-v1.1:anthropic\",\r\n    \"dataSourceSchemas\": [\r\n        {\r\n            \"dataSourceName\": \"<string>\",\r\n            \"columns\": [\r\n                {\r\n                    \"name\": \"Date Column\",\r\n                    \"type\": \"DATE\"\r\n                },\r\n                {\r\n                    \"name\": \"String Column\",\r\n                    \"type\": \"STRING\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ai/v1/text/sql",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ai",
												"v1",
												"text",
												"sql"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Text Generation",
							"item": [
								{
									"name": "list Models",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ai/v1/settings/services/generation/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ai",
												"v1",
												"settings",
												"services",
												"generation",
												"models"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Default Model",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ai/v1/settings/services/generation/models/default",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ai",
												"v1",
												"settings",
												"services",
												"generation",
												"models",
												"default"
											]
										}
									},
									"response": []
								},
								{
									"name": "Run Model",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"input\": \"<query>\",\r\n    \"promptTemplate\": {\r\n        \"template\": \"${input}\"\r\n    },\r\n    \"model\": \"domo.domo_ai.domogpt-chat-medium-v1.1:anthropic\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ai/v1/text/generation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ai",
												"v1",
												"text",
												"generation"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Text to Beast Mode",
							"item": [
								{
									"name": "list Models",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ai/v1/settings/services/beastmode/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ai",
												"v1",
												"settings",
												"services",
												"beastmode",
												"models"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Default Model",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ai/v1/settings/services/beastmode/models/default",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ai",
												"v1",
												"settings",
												"services",
												"beastmode",
												"models",
												"default"
											]
										}
									},
									"response": []
								},
								{
									"name": "Run Model",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"input\": \"<query>\",\r\n    \"system\": \"You are a SQL database expert that generates SQL queries. Your goal is to create a SQL statement that includes a calculation to address the request.\\nYou should follow the guidelines below:\\n\\nThese are only partial queries, meant to be used in a situation with existing context about the table and available columns. As such, do not include a SELECT keywork or a FROM clause. Also, do not us AS to rename the calculation.\\n\\nInstead of filtering data using a WHERE clause, use a CASE statement.\\n\\nDon't worry about processing any NULL values.\\n\\nIf asked for something \\\"fixed\\\", follow the documentation found here: https://domo-support.domo.com/s/article/4408174643607?language=en_US\\n\\nOutput the answer in <SQL></SQL> XML tags. Skip any preamble.\\n\",\r\n    \"promptTemplate\": {\r\n        \"template\": \"# SQL\\n# ${dataSourceSchema}\\n# Generate a query to answer the following:\\n# ${input}\"\r\n    },\r\n    \"model\": \"domo.domo_ai.domogpt-sql-v1.1:anthropic\",\r\n    \"dataSourceSchema\": {\r\n        \"dataSourceName\": \"<string>\",\r\n        \"columns\": [\r\n            {\r\n                \"name\": \"Date Column\",\r\n                \"type\": \"DATE\"\r\n            },\r\n            {\r\n                \"name\": \"String Column\",\r\n                \"type\": \"STRING\"\r\n            }\r\n        ]\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ai/v1/text/beastmode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ai",
												"v1",
												"text",
												"beastmode"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Text Summarization",
							"item": [
								{
									"name": "list Models",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ai/v1/settings/services/summarization/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ai",
												"v1",
												"settings",
												"services",
												"summarization",
												"models"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Default Model",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ai/v1/settings/services/summarization/models/default",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ai",
												"v1",
												"settings",
												"services",
												"summarization",
												"models",
												"default"
											]
										}
									},
									"response": []
								},
								{
									"name": "Run Model",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"input\": \"The old lighthouse keeper, Silas, squinted at the churning sea.  The storm, which had begun as a mere grumble on the horizon, had escalated into a furious beast, whipping the waves into a frenzy and clawing at the rocky cliffs.  He'd seen countless storms in his seventy years, more than half of which had been spent tending this lonely beacon, but this one felt different.  There was a malevolence in the wind, a raw, untamed power that made the hairs on his neck stand on end.\\n\\nHe adjusted the wick of the lamp, the flame flickering nervously in the draft that whistled through the tower's narrow windows.  The rhythmic pulse of the light, a constant reassurance to ships navigating the treacherous coastline, was his responsibility, his sacred duty.  He knew that somewhere out there, sailors were relying on that beam, trusting it to guide them through the tempest's dark embrace.\\n\\nSilas remembered his grandfather, a seasoned sailor himself, telling him stories of ships lost at sea, swallowed by the unforgiving waves.  He'd recounted tales of heroic rescues and heartbreaking tragedies, of the sea's capricious nature, capable of both breathtaking beauty and devastating cruelty.  These stories had instilled in Silas a deep respect for the ocean, a healthy fear mingled with an undeniable fascination.\\n\\nHe climbed the winding stairs to the lantern room, the wind howling like a banshee outside.  The glass panes rattled in their frames, threatened by the relentless onslaught of the storm.  He checked the lens, a magnificent Fresnel lens, painstakingly crafted to amplify the light's intensity, ensuring its visibility for miles across the turbulent waters.  It was a marvel of engineering, a testament to human ingenuity in the face of nature's might.\\n\\nLooking out at the tempestuous sea, Silas felt a pang of loneliness.  His wife, Martha, had passed away five years ago, leaving him with only the company of the gulls and the relentless rhythm of the waves.  He missed her dearly, her warm smile and gentle voice a distant memory, a comforting echo in the silence of the lighthouse.\\n\\nHe thought of the young couple he'd seen earlier that day, picnicking on the beach below, oblivious to the approaching storm.  They were so full of life, so carefree, their laughter carried on the wind.  He hoped they'd found shelter, that they were safe from the storm's fury.\\n\\nAs the night deepened, the storm intensified.  The waves crashed against the rocks with renewed vigor, sending plumes of spray high into the air, drenching the lighthouse in a salty mist.  Silas remained vigilant, his eyes fixed on the sea, his ears attuned to the sounds of the storm.  He knew that his duty was to keep the light burning, to be a beacon of hope in the darkness.\\n\\nHe brewed a pot of strong tea, the warmth spreading through his chilled bones.  He sipped it slowly, savoring the familiar taste, a small comfort in the midst of the chaos.  He thought about Martha, about her love for the sea, her understanding of his devotion to the lighthouse.  He imagined her beside him, her hand resting on his shoulder, offering silent support.\\n\\nThe storm raged on, its fury unabated.  But Silas remained steadfast, his resolve unwavering.  He was the keeper of the light, the guardian of the coast, and he would not abandon his post, not even in the face of the most fearsome storm.  He knew that the lives of sailors depended on him, on the unwavering beam of light that pierced the darkness, guiding them safely through the treacherous waters.  And as long as he had breath in his body, he would keep that light burning, a symbol of hope in the heart of the storm.  The lighthouse, a solitary sentinel against the raging sea, stood firm, its light a beacon of hope in the vast, dark expanse.\\n\",\r\n    \"system\": \"You are a helpful assistant that writes concise summaries.\\n\",\r\n    \"promptTemplate\": {\r\n        \"template\": \"Write a ${outputWordLength} summary of the following text ${outputStyle}. ```${input}``` CONCISE SUMMARY:\"\r\n    },\r\n    \"model\": \"domo.domo_ai.domogpt-summarize-v1:anthropic\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ai/v1/text/summarize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ai",
												"v1",
												"text",
												"summarize"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Forecasting",
							"item": [
								{
									"name": "list Models",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ai/v1/settings/services/forecasting/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ai",
												"v1",
												"settings",
												"services",
												"forecasting",
												"models"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Default Model",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ai/v1/settings/services/forecasting/models/default",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ai",
												"v1",
												"settings",
												"services",
												"forecasting",
												"models",
												"default"
											]
										}
									},
									"response": []
								},
								{
									"name": "Run Model",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"sql\": \"SELECT DATE_FORMAT(`Date` ,'%Y-%m')  as \\\"Date\\\", Sum(`Column`) as \\\"Alias\\\" FROM `<dataset_id>` group by DATE_FORMAT(`Date` ,'%Y-%m')  order by `Date` ASC\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/query/v1/execute/:datasetId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												"v1",
												"execute",
												":datasetId"
											],
											"variable": [
												{
													"key": "datasetId",
													"value": "",
													"description": "DataSet ID"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Image to Text",
							"item": [
								{
									"name": "list Models",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ai/v1/settings/services/image/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ai",
												"v1",
												"settings",
												"services",
												"image",
												"models"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Default Model",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/ai/v1/settings/services/image/models/default",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ai",
												"v1",
												"settings",
												"services",
												"image",
												"models",
												"default"
											]
										}
									},
									"response": []
								},
								{
									"name": "Run Model",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"input\": \"<instructions>\",\r\n    \"system\": \"You are an AI assistant tasked with performing Optical Character Recognition (OCR) on an image. Your goal is to accurately identify and transcribe any text present in the image by analyzing the image carefully and extract all visible text.\\n\\nFollow these steps to perform OCR on the image\\n\\n1. Examine the entire image thoroughly, paying attention to all areas where text might be present.\\n2. Identify any visible text, including numbers, letters, symbols, and punctuation marks.\\n3. Transcribe the text exactly as it appears in the image, maintaining the original spelling, capitalization, and punctuation.\\n4. If the text is arranged in multiple lines or paragraphs, preserve this structure in your transcription.\\n\\nRemember, your task is to transcribe the text as accurately as possible without interpreting or summarizing its content. Focus solely on the text visible in the image.\\n\\nBefore responding think about your response step by step. Provide your final transcription within <answer> tags. For example\\n<example>\\n<answer>\\nHello World\\n</answer>\\n</example>\\n\",\r\n    \"promptTemplate\": {\r\n        \"template\": \"${input}\"\r\n    },\r\n    \"model\": \"domo.domo_ai.domogpt-chat-medium-v1.1:anthropic\",\r\n    \"image\": {\r\n        \"mediaType\": \"image/png\",\r\n        \"type\": \"base64\",\r\n        \"data\": \"<base64>\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ai/v1/image/text",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ai",
												"v1",
												"image",
												"text"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Get Settings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ai/v1/settings/general",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ai",
										"v1",
										"settings",
										"general"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Session",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ai/v1/sessions/:sessionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ai",
										"v1",
										"sessions",
										":sessionId"
									],
									"variable": [
										{
											"key": "sessionId",
											"value": "",
											"description": "Session UUID"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Session Context",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ai/v1/sessions/:sessionId/context",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ai",
										"v1",
										"sessions",
										":sessionId",
										"context"
									],
									"variable": [
										{
											"key": "sessionId",
											"value": "",
											"description": "Session UUID"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Ask Chat",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"input\": \"<query>\",\r\n    \"sessionId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"aiAssistantContext\": {\r\n        \"dataSourceIds\": [\r\n            \"<dataset_id>\"\r\n        ],\r\n        \"cardIds\": [],\r\n        \"pageIds\": [],\r\n        \"filters\": [],\r\n        \"ignorableDataSourceIds\": []\r\n    },\r\n    \"agentType\": \"REACT\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ai/v1/assistant/toolkits/DOMO_BASIC_ASSISTANT/execute/streaming",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ai",
										"v1",
										"assistant",
										"toolkits",
										"DOMO_BASIC_ASSISTANT",
										"execute",
										"streaming"
									]
								}
							},
							"response": []
						}
					],
					"description": "[AI Playground Official Documentation](https://domo-support.domo.com/s/article/000005236?language=en_US)"
				},
				{
					"name": "Jupyter Workspaces",
					"item": [
						{
							"name": "File Shares",
							"item": [
								{
									"name": "list File Shares",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/fileshare/v1/shares",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fileshare",
												"v1",
												"shares"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get File Share Permissions",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/fileshare/v1/shares/:id/permissions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fileshare",
												"v1",
												"shares",
												":id",
												"permissions"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "File Share UUID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/fileshare/v1/shares/:id/permissions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"fileshare",
														"v1",
														"shares",
														":id",
														"permissions"
													],
													"variable": [
														{
															"key": "id",
															"value": "00000000-0000-0000-0000-000000000000",
															"description": "File Share UUID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"domain": "",
													"path": ""
												}
											],
											"body": "{\r\n    \"fileshareUsersWithPermission\": [\r\n        {\r\n            \"entityId\": \"466826668\",\r\n            \"permissionLevel\": \"ADMIN\"\r\n        }\r\n    ]\r\n}"
										}
									]
								},
								{
									"name": "Create File Share",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"<string>\",\r\n    \"description\": \"<string>\",\r\n    \"defaultMountPoint\": \"<string>\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/fileshare/v1/shares",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fileshare",
												"v1",
												"shares"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"<string>\",\r\n    \"description\": \"<string>\",\r\n    \"defaultMountPoint\": \"<string>\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/fileshare/v1/shares",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"fileshare",
														"v1",
														"shares"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"name\": \"<string>\",\r\n    \"description\": \"<string>\",\r\n    \"defaultMountPoint\": \"<string>\",\r\n    \"fileshareType\": \"SHARED\",\r\n    \"lifecycleOwner\": \"1234\",\r\n    \"lifecycleOwnerType\": \"USER\",\r\n    \"created\": 1735689600000,\r\n    \"updated\": 1735689600000,\r\n    \"deleted\": null,\r\n    \"permissionLevel\": null\r\n}"
										}
									]
								},
								{
									"name": "Update File Share",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"<string>\",\r\n    \"description\": \"<string>\",\r\n    \"defaultMountPoint\": \"<string>\",\r\n    \"fileshareType\": \"SHARED\",\r\n    \"lifecycleOwner\": \"1234\",\r\n    \"lifecycleOwnerType\": \"USER\",\r\n    \"permissionLevel\": null\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/fileshare/v1/shares/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fileshare",
												"v1",
												"shares",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "File Share UUID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"<string>\",\r\n    \"description\": \"<string>\",\r\n    \"defaultMountPoint\": \"<string>\",\r\n    \"fileshareType\": \"SHARED\",\r\n    \"lifecycleOwner\": \"1234\",\r\n    \"lifecycleOwnerType\": \"USER\",\r\n    \"permissionLevel\": null\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/fileshare/v1/shares/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"fileshare",
														"v1",
														"shares",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "00000000-0000-0000-0000-000000000000",
															"description": "File Share UUID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [
												{
													"expires": "Invalid Date",
													"domain": "",
													"path": ""
												}
											],
											"body": "{\n    \"id\": \"00000000-0000-0000-0000-000000000000\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"defaultMountPoint\": \"<string>\",\n    \"fileshareType\": \"SHARED\",\n    \"lifecycleOwner\": \"1234\",\n    \"lifecycleOwnerType\": \"USER\",\n    \"created\": 1735689600000,\n    \"updated\": 1735689600000,\n    \"deleted\": null,\n    \"permissionLevel\": null\n}"
										}
									]
								},
								{
									"name": "Update File Share Permissions",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"share\": [\r\n        {\r\n            \"entityId\": 1234,\r\n            \"permissionLevel\": \"ADMIN\",\r\n            \"entityType\": \"USER\"\r\n        }\r\n    ],\r\n    \"unshare\": [\r\n        {\r\n            \"entityId\": 2345,\r\n            \"entityType\": \"USER\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/fileshare/v1/shares/:id/permissions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fileshare",
												"v1",
												"shares",
												":id",
												"permissions"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "File Share UUID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"share\": [\r\n        {\r\n            \"entityId\": 1234,\r\n            \"permissionLevel\": \"ADMIN\",\r\n            \"entityType\": \"USER\"\r\n        }\r\n    ],\r\n    \"unshare\": [\r\n        {\r\n            \"entityId\": 2345,\r\n            \"entityType\": \"USER\"\r\n        }\r\n    ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/fileshare/v1/shares/:id/permissions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"fileshare",
														"v1",
														"shares",
														":id",
														"permissions"
													],
													"variable": [
														{
															"key": "id",
															"value": "00000000-0000-0000-0000-000000000000",
															"description": "File Share UUID"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [
												{
													"expires": "Invalid Date"
												}
											],
											"body": ""
										}
									]
								},
								{
									"name": "Delete File Share",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/fileshare/v1/shares/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"fileshare",
												"v1",
												"shares",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "File Share UUID"
												}
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/fileshare/v1/shares/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"fileshare",
														"v1",
														"shares",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "00000000-0000-0000-0000-000000000000",
															"description": "File Share UUID"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [
												{
													"expires": "Invalid Date"
												}
											],
											"body": ""
										}
									]
								}
							],
							"description": "[File Shares Official Documentation](https://domo-support.domo.com/s/article/36004740075?language=en_US#file_sharing)"
						},
						{
							"name": "list Jupyter Workspaces",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"limit\": 50,\r\n    \"offset\": 0,\r\n    \"sortFieldMap\": {\r\n        \"LAST_RUN\": \"DESC\"\r\n    },\r\n    \"searchFieldMap\": {}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/datascience/v1/search/workspaces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datascience",
										"v1",
										"search",
										"workspaces"
									]
								}
							},
							"response": []
						},
						{
							"name": "list User AI Models",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"limit\": 50,\r\n    \"sortFieldMap\": {\r\n        \"METRIC\": \"DESC\"\r\n    },\r\n    \"searchFieldMap\": {\r\n        \"NAME\": \"\"\r\n    },\r\n    \"filters\": [\r\n        {\r\n            \"type\": \"METRIC\",\r\n            \"values\": []\r\n        }\r\n    ],\r\n    \"metricFilters\": {},\r\n    \"dateFilters\": {},\r\n    \"sortMetricMap\": {\r\n        \"ObjectiveMetric\": \"DESC\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/datascience/ml/v1/search/models",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datascience",
										"ml",
										"v1",
										"search",
										"models"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Jupyter Workspace",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/datascience/v1/workspaces/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"datascience",
										"v1",
										"workspaces",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "Workspace UUID"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "[Jupyter Workspaces Official Documentation](https://domo-support.domo.com/s/article/36004740075?language=en_US)"
				}
			]
		},
		{
			"name": "Alerts",
			"item": [
				{
					"name": "list Alerts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/social/v4/alerts?all=true&fields=all&limit=50&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v4",
								"alerts"
							],
							"query": [
								{
									"key": "all",
									"value": "true"
								},
								{
									"key": "fields",
									"value": "all"
								},
								{
									"key": "limit",
									"value": "50"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "list Immediate Alerts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/messaging/v3/subscriptions/schedule/primary/immediate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"messaging",
								"v3",
								"subscriptions",
								"schedule",
								"primary",
								"immediate"
							]
						}
					},
					"response": []
				},
				{
					"name": "list Alert Triggered Preferences",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/messaging/v3/preferences/immediate/user/current/alert_triggered",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"messaging",
								"v3",
								"preferences",
								"immediate",
								"user",
								"current",
								"alert_triggered"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Alerts",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"count\": 1000,\r\n    \"offset\": 0,\r\n    \"combineResults\": false,\r\n    \"query\": \"*\",\r\n    \"filters\": [],\r\n    \"sort\": {\r\n        \"fieldSorts\": [\r\n            {\r\n                \"enum\": \"CREATED_DESCENDING\",\r\n                \"field\": \"createDate\",\r\n                \"sortOrder\": \"DESC\",\r\n                \"label\": \"Created (Newest)\",\r\n                \"order\": 1\r\n            }\r\n        ]\r\n    },\r\n    \"facetValuesToInclude\": [\r\n        \"TYPE\"\r\n    ],\r\n    \"facetValueLimit\": 0,\r\n    \"facetValueOffset\": 0,\r\n    \"includePhonetic\": true,\r\n    \"queryProfile\": \"GLOBAL\",\r\n    \"state\": \"list\",\r\n    \"topic\": null,\r\n    \"savedSearchId\": null,\r\n    \"entityList\": [\r\n        [\r\n            \"alert\"\r\n        ]\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/search/v1/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"v1",
								"query"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Alerts",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    \"123\",\r\n    \"123\"\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/social/v4/alerts/ids?all=true&fields=all&limit=50&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v4",
								"alerts",
								"ids"
							],
							"query": [
								{
									"key": "all",
									"value": "true",
									"description": "Used mutually exlusively with parameter subscriberId."
								},
								{
									"key": "subscriberId",
									"value": "",
									"description": "Used mutually exlusively with parameter all. User ID to filter on.",
									"disabled": true
								},
								{
									"key": "fields",
									"value": "all"
								},
								{
									"key": "limit",
									"value": "50"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Alert",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/social/v4/alerts/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v4",
								"alerts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "785",
									"description": "Alert ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Alert Action",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/social/v4/alerts/:alertId/actions/:actionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v4",
								"alerts",
								":alertId",
								"actions",
								":actionId"
							],
							"variable": [
								{
									"key": "alertId",
									"value": "",
									"description": "Alert ID"
								},
								{
									"key": "actionId",
									"value": "",
									"description": "Alert Action ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Evaluations for Alert",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/social/v4/alerts/:id/evaluations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v4",
								"alerts",
								":id",
								"evaluations"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Alert ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Alert",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"<string>\",\r\n    \"type\": \"SUMMARY_NUMBER\",\r\n    \"owner\": 123456,\r\n    \"active\": true,\r\n    \"enabled\": true,\r\n    \"resourceType\": \"CARD\",\r\n    \"resourceId\": \"<resource_id>\",\r\n    \"resourceName\": \"<string>\",\r\n    \"triggered\": false,\r\n    \"triggerFrequency\": \"Rarely\",\r\n    \"configurations\": [\r\n        {\r\n            \"name\": \"OPERATION\",\r\n            \"value\": \"CHANGES_BY\"\r\n        },\r\n        {\r\n            \"name\": \"VALUE\",\r\n            \"value\": \"100000\"\r\n        },\r\n        {\r\n            \"name\": \"NOTIFY_TRIGGER\",\r\n            \"value\": \"true\"\r\n        }\r\n    ],\r\n    \"filterGroups\": [\r\n        {\r\n            \"name\": \"All Rows\",\r\n            \"filterGroupId\": 12345, //<pdp_policy_id>\r\n            \"dataSourceId\": \"00000000-0000-0000-0000-000000000000\",\r\n            \"type\": \"open\",\r\n            \"dataSourcePermissions\": false,\r\n            \"order\": 0\r\n        },\r\n        {\r\n            \"name\": \"<string>\",\r\n            \"filterGroupId\": 23456,\r\n            \"dataSourceId\": \"00000000-0000-0000-0000-000000000000\",\r\n            \"type\": \"user\",\r\n            \"dataSourcePermissions\": false,\r\n            \"parameters\": [\r\n                {\r\n                    \"name\": \"dynamicPlaceholder\",\r\n                    \"value\": \"domo.policy.managed_employee_id\",\r\n                    \"values\": [\r\n                        \"domo.policy.managed_employee_id\"\r\n                    ],\r\n                    \"type\": \"DYNAMIC\",\r\n                    \"operator\": \"EQUALS\",\r\n                    \"not\": false,\r\n                    \"ignoreCase\": false\r\n                }\r\n            ],\r\n            \"order\": 0\r\n        }\r\n    ],\r\n    \"contextual\": false,\r\n    \"filters\": [\r\n        {\r\n            \"column\": \"Column 1\",\r\n            \"operand\": \"IN\",\r\n            \"values\": [\r\n                \"<value>\"\r\n            ],\r\n            \"dataSourceId\": \"00000000-0000-0000-0000-000000000000\",\r\n            \"dataType\": \"string\",\r\n            \"label\": \"Column 1 Label\"\r\n        }\r\n    ],\r\n    \"subscriptions\": [\r\n        {\r\n            \"id\": 123,\r\n            \"subscriberId\": \"1234\",\r\n            \"type\": \"USER\",\r\n            \"subscribedBy\": 1234\r\n        },\r\n        {\r\n            \"id\": 817,\r\n            \"subscriberId\": \"1907294812\",\r\n            \"type\": \"GROUP\",\r\n            \"subscribedBy\": 466826668,\r\n            \"mutedSubscriberIds\": [\r\n                466826668\r\n            ],\r\n            \"currentUserMember\": false\r\n        }\r\n    ],\r\n    \"createdAt\": \"2022-10-12 17:56:52\",\r\n    \"createdBy\": 123456,\r\n    \"modifiedAt\": \"2024-02-09 21:11:40\",\r\n    \"modifiedBy\": 123456,\r\n    \"rule\": \"<string>\",\r\n    \"filterRules\": [\r\n        \"<string>\"\r\n    ],\r\n    \"category\": \"DATA\",\r\n    \"currentUserSubscribed\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/social/v4/alerts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v4",
								"alerts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Share Alert",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userMessage\": \"<string>\",\r\n    \"alertSubscriptions\": [\r\n        {\r\n            \"subscriberId\": 123456,\r\n            \"type\": \"USER\"\r\n        }\r\n    ],\r\n    \"sendEmail\": true,\r\n    \"metaData\": {}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/social/v4/alerts/:id/share",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v4",
								"alerts",
								":id",
								"share"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Alert ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Alert",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (parseInt(pm.request.url.variables.get('id')) !== JSON.parse(pm.request.body.raw).id) {\r",
									"    throw new Error('The URL parameter and body property for \"id\" don\\'t match. Adjust them to match each other and try again.')\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 123,\r\n    \"owner\": 123456\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/social/v4/alerts/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v4",
								"alerts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Alert ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Alert Rules",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"configurations\": [\r\n    {\r\n      \"name\": \"ANY_ROW_PRIMARY_KEYS\",\r\n      \"value\": \"Column 1,Column 2,Column 3\"\r\n    },\r\n    {\r\n      \"name\": \"OPERATION\",\r\n      \"value\": \"ROWS_ADDED\"\r\n    },\r\n    {\r\n      \"name\": \"COLUMN_ID\",\r\n      \"value\": \"Column 2\",\r\n      \"order\": 0\r\n    },\r\n    {\r\n      \"name\": \"OPERATION\",\r\n      \"value\": \"IN\",\r\n      \"order\": 0\r\n    },\r\n    {\r\n      \"name\": \"VALUE\",\r\n      \"value\": \"<string>\",\r\n      \"order\": 0\r\n    },\r\n    {\r\n      \"name\": \"NOTIFY_REPEATABLE_TRIGGER\",\r\n      \"value\": true\r\n    },\r\n    {\r\n      \"name\": \"NOTIFY_TRIGGER\",\r\n      \"value\": true\r\n    }\r\n  ],\r\n  \"type\": \"ANY_ROW\",\r\n  \"name\": \"<string>\",\r\n  \"resourceType\": \"DATASET\",\r\n  \"resourceId\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"filterGroups\": [\r\n    {\r\n      \"filterGroupId\": 123456\r\n    }\r\n  ],\r\n  \"owner\": 123456\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/social/v4/alerts/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v4",
								"alerts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Alert ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Alert Message",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\": \"<p><span class=\\\"INAF rule\\\"></span>blah blah<span class=\\\"INAF cardName\\\">blah blah</span>blah blah<span class=\\\"INAF previousValue\\\">[Previous alert value]</span>blah blah<span class=\\\"INAF currentValue\\\">[Current alert value]</span>.</p>\",\r\n    \"footer\": \"\",\r\n    \"header\": \"\",\r\n    \"formulas\": {}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/social/v4/alerts/:id/message-template",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v4",
								"alerts",
								":id",
								"message-template"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Alert ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Alert",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/social/v4/alerts/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v4",
								"alerts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Alert ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Unshare Alert",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/social/v4/alerts/:id/subscriptions?subscriberId=123456&type=USER",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v4",
								"alerts",
								":id",
								"subscriptions"
							],
							"query": [
								{
									"key": "subscriberId",
									"value": "123456",
									"description": "User ID"
								},
								{
									"key": "type",
									"value": "USER",
									"description": "USER or GROUP"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Alert ID"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "[Alerts Official Documentation](https://domo-support.domo.com/s/topic/0TO5w000000ZanxGAC/alerts?language=en_US)"
		},
		{
			"name": "AppDB",
			"item": [
				{
					"name": "list Datastores",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/datastores/v1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datastores",
								"v1"
							]
						}
					},
					"response": []
				},
				{
					"name": "list Collections",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/datastores/v1/collections",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datastores",
								"v1",
								"collections"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Datastore",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/datastores/v1/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datastores",
								"v1",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Datastore UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Datastore Collections",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/datastores/v1/:id/collections",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datastores",
								"v1",
								":id",
								"collections"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Datastore UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Collection",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/datastores/v1/collections/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datastores",
								"v1",
								"collections",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "31bcef38-4f06-4347-8a7f-d702dd8dc056",
									"description": "Collection UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Collection Documents",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/datastores/v1/collections/:collectionId/documents",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datastores",
								"v1",
								"collections",
								":collectionId",
								"documents"
							],
							"variable": [
								{
									"key": "collectionId",
									"value": "31bcef38-4f06-4347-8a7f-d702dd8dc056",
									"description": "Collection UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Collection Permissions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/datastores/v1/collections/:id/permission",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datastores",
								"v1",
								"collections",
								":id",
								"permission"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Collection UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Datastore Cards",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    \"00000000-0000-0000-0000-000000000000\"\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{instanceUrl}}/domoapps/apps/v2/card",
							"host": [
								"{{instanceUrl}}"
							],
							"path": [
								"domoapps",
								"apps",
								"v2",
								"card"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Collections",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"collectionFilteringList\": [\r\n        {\r\n            \"filterType\": \"nameof\",\r\n            \"typedValue\": \"%%\"\r\n        }\r\n    ],\r\n    \"sortBy\": \"createdOn\",\r\n    \"direction\": \"desc\",\r\n    \"pageSize\": 100,\r\n    \"pageNumber\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/datastores/v1/collections/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datastores",
								"v1",
								"collections",
								"query"
							]
						}
					},
					"response": []
				},
				{
					"name": "Query Collection Documents",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"$or\": [\r\n        {\r\n            \"content.comments\": {\r\n                \"$regex\": \"happy\"\r\n            }\r\n        },\r\n        {\r\n            \"content.username\": {\r\n                \"$ne\": \"Eeyore\"\r\n            }\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/datastores/v2/collections/:id/documents/query?limit=100&offset=0&count=documentCount&avg=content.clicks avgClicks, content.impressions avgImps&sum=content.clicks sumClicks, content.impressions sumImps&max=content.clicks maxClicks, content.impressions maxImps&min=content.clicks minClicks, content.impressions minImps&orderby=sumClicks descending&groupby=content.campaignName, content.month",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datastores",
								"v2",
								"collections",
								":id",
								"documents",
								"query"
							],
							"query": [
								{
									"key": "limit",
									"value": "100"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "count",
									"value": "documentCount"
								},
								{
									"key": "avg",
									"value": "content.clicks avgClicks, content.impressions avgImps"
								},
								{
									"key": "sum",
									"value": "content.clicks sumClicks, content.impressions sumImps"
								},
								{
									"key": "max",
									"value": "content.clicks maxClicks, content.impressions maxImps"
								},
								{
									"key": "min",
									"value": "content.clicks minClicks, content.impressions minImps"
								},
								{
									"key": "orderby",
									"value": "sumClicks descending"
								},
								{
									"key": "groupby",
									"value": "content.campaignName, content.month"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Collection UUID"
								}
							]
						},
						"description": "[Domo Developer Documentation - Query Documents](https://developer.domo.com/portal/1l1fm2g0sfm69-app-db-api#query-documents)\n\n[Domo Developer Documentation - Query Documents with Aggregations](https://developer.domo.com/portal/1l1fm2g0sfm69-app-db-api#query-documents-with-aggregations)\n\n| collectionName | String | Required | The name given to the collection in the manifest |  \n| query | Object | Required | The JSON object that represents a Mongo query |  \n| groupby | String | Optional | The comma-separated list of properties you wish to group by |  \n| count | String | Optional | The name you wish to alias a count aggregation property |  \n| avg | String | Optional | The comma-separated list of properties in which you wish to perform an average aggregation followed by the name you wish to alias the result |  \n| min | String | Optional | The comma-separated list of properties in which you wish to perform a minimum aggregation followed by the name you wish to alias the result |  \n| max | String | Optional | The comma-separated list of properties in which you wish to perform a maximum aggregation followed by the name you wish to alias the result |  \n| sum | String | Optional | The comma-separated list of properties in which you wish to perform a sum aggregation followed by the name you wish to alias the result |  \n| unwind | String | Optional | The comma-separated list of properties that you wish to unwind (the unwind operator flattens nested arrays - see MongoDB documentation for additional information) |  \n| orderby | String | Optional | Alias of the aggregation you wish to order by (ascending or descending) |  \n| limit | Integer | Optional | The number of documents in which to limit the number of return objects, default is 10,000 |  \n| offset | Integer | Optional | The number of documents in which to skip before returning documents, default is 0 |"
					},
					"response": []
				},
				{
					"name": "Create Datastore",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"<string>\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/datastores/v1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datastores",
								"v1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Collection in Datastore",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"<string>\",\r\n  \"schema\": {\r\n    \"columns\": [\r\n      { \"name\": \"Column 1\", \"type\": \"STRING\" },\r\n      { \"name\": \"Column 2\", \"type\": \"STRING\" }\r\n    ]\r\n  },\r\n  \"syncEnabled\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/datastores/v1/:datastoreId/collections/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datastores",
								"v1",
								":datastoreId",
								"collections",
								""
							],
							"variable": [
								{
									"key": "datastoreId",
									"value": "",
									"description": "Datastore UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Collection and Datastore",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"<string>\",\r\n  \"schema\": {\r\n    \"columns\": [\r\n      { \"name\": \"Column 1\", \"type\": \"STRING\" },\r\n      { \"name\": \"Column 2\", \"type\": \"STRING\" }\r\n    ]\r\n  },\r\n  \"syncEnabled\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/datastores/v1/collections",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datastores",
								"v1",
								"collections"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Document",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\": {\r\n        \"column1\": \"<string>\",\r\n        \"column2\": \"<timestamp>\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/datastores/v1/collections/:collectionId/documents",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datastores",
								"v1",
								"collections",
								":collectionId",
								"documents"
							],
							"variable": [
								{
									"key": "collectionId",
									"value": "",
									"description": "Collection UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Documents",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"content\": {\r\n            \"column1\": \"<string>\",\r\n            \"column2\": \"<timestamp>\"\r\n        }\r\n    },\r\n    {\r\n        \"content\": {\r\n            \"column1\": \"<string>\",\r\n            \"column2\": \"<timestamp>\"\r\n        }\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/datastores/v1/collections/:collectionId/documents/bulk",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datastores",
								"v1",
								"collections",
								":collectionId",
								"documents",
								"bulk"
							],
							"variable": [
								{
									"key": "collectionId",
									"value": "",
									"description": "Collection UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Disable Sync to DataSet",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (parseInt(pm.request.url.variables.get('id')) !== JSON.parse(pm.request.body.raw).id) {\r",
									"    throw new Error('The URL parameter and body property for \"id\" don\\'t match. Adjust them to match each other and try again.')\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"syncEnabled\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/datastores/v1/collections/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datastores",
								"v1",
								"collections",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Collection UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Collection Schema",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"schema\": {\r\n        \"columns\": [\r\n            {\r\n                \"name\": \"Column 1\",\r\n                \"type\": \"STRING\"\r\n            }\r\n        ]\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/datastores/v1/collections/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datastores",
								"v1",
								"collections",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Collection UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Collection Permissions",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/datastores/v1/collections/:collectionId/permission/:entityType/:entityId?overwrite=true&permissions=ADMIN,SHARE,DELETE,WRITE,READ,READ_CONTENT,CREATE_CONTENT,UPDATE_CONTENT,DELETE_CONTENT",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datastores",
								"v1",
								"collections",
								":collectionId",
								"permission",
								":entityType",
								":entityId"
							],
							"query": [
								{
									"key": "overwrite",
									"value": "true"
								},
								{
									"key": "permissions",
									"value": "ADMIN,SHARE,DELETE,WRITE,READ,READ_CONTENT,CREATE_CONTENT,UPDATE_CONTENT,DELETE_CONTENT"
								}
							],
							"variable": [
								{
									"key": "collectionId",
									"value": "",
									"description": "Collection UUID"
								},
								{
									"key": "entityType",
									"value": "GROUP",
									"description": "GROUP or USER"
								},
								{
									"key": "entityId",
									"value": "",
									"description": "ID of the group or user to add"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Document",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\": {\r\n        \"column1\": \"<string>\",\r\n        \"column2\": \"<timestamp>\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/datastores/v2/collections/:collectionId/documents/:documentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datastores",
								"v2",
								"collections",
								":collectionId",
								"documents",
								":documentId"
							],
							"variable": [
								{
									"key": "collectionId",
									"value": "",
									"description": "Collection UUID"
								},
								{
									"key": "documentId",
									"value": "",
									"description": "Document UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upsert Documents",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"content\": {\r\n        \"column1\": \"<string>\",\r\n        \"column2\": \"<timestamp>\"\r\n    }\r\n  },\r\n  {\r\n    \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"content\": {\r\n        \"column1\": \"<string>\",\r\n        \"column2\": \"<timestamp>\"\r\n    }\r\n  },\r\n  {\r\n    //documents without a matching id will be created\r\n    \"content\": {\r\n        \"column1\": \"<string>\",\r\n        \"column2\": \"<timestamp>\"\r\n    }\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/datastores/v2/collections/:collectionId/documents/bulk",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datastores",
								"v2",
								"collections",
								":collectionId",
								"documents",
								"bulk"
							],
							"variable": [
								{
									"key": "collectionId",
									"value": "",
									"description": "Collection UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Datastore",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/datastores/v1/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datastores",
								"v1",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Datastore UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Collection",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/datastores/v1/collections/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datastores",
								"v1",
								"collections",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Collection UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Collection Access",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/datastores/v1/collections/:collectionId/permission/:entityType/:entityId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datastores",
								"v1",
								"collections",
								":collectionId",
								"permission",
								":entityType",
								":entityId"
							],
							"variable": [
								{
									"key": "collectionId",
									"value": "",
									"description": "Collection UUID"
								},
								{
									"key": "entityType",
									"value": "GROUP",
									"description": "GROUP or USER"
								},
								{
									"key": "entityId",
									"value": "",
									"description": "The ID of the group or user you want to remove"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Document",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/datastores/v2/collections/:collectionId/documents/:documentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datastores",
								"v2",
								"collections",
								":collectionId",
								"documents",
								":documentId"
							],
							"variable": [
								{
									"key": "collectionId",
									"value": "",
									"description": "Collection UUID"
								},
								{
									"key": "documentId",
									"value": "",
									"description": "Document UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Documents",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/datastores/v2/collections/:collectionId/documents/bulk?ids=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datastores",
								"v2",
								"collections",
								":collectionId",
								"documents",
								"bulk"
							],
							"query": [
								{
									"key": "ids",
									"value": "",
									"description": "Comma separated list of Document UUIDs"
								}
							],
							"variable": [
								{
									"key": "collectionId",
									"value": "",
									"description": "Collection UUID"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "[AppDB Official Documentation](https://domo-support.domo.com/s/article/9221297758615?language=en_US)"
		},
		{
			"name": "App Studio",
			"item": [
				{
					"name": "list Apps",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/dataapps",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"dataapps"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get App Access",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/dataapps/:appId/access",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"dataapps",
								":appId",
								"access"
							],
							"variable": [
								{
									"key": "appId",
									"value": "",
									"description": "App ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Share App",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"message\": \"I thought you might find this app interesting.\",\r\n    \"dataAppIds\": [\r\n        \"12345\"\r\n    ],\r\n    \"recipients\": [\r\n        {\r\n            \"id\": 123456,\r\n            \"type\": \"user\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v1/dataapps/share?sendEmail=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"dataapps",
								"share"
							],
							"query": [
								{
									"key": "sendEmail",
									"value": "false"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete App",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/dataapps/:appId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"dataapps",
								":appId"
							],
							"variable": [
								{
									"key": "appId",
									"value": "",
									"description": "App ID"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "[App Studio Official Documentation](https://domo-support.domo.com/s/topic/0TOVq0000000iU5OAI/app-studio?language=en_US)"
		},
		{
			"name": "Brand Kit",
			"item": [
				{
					"name": "list Color Palettes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/brandkit/v1/chartColorPalettes/all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"brandkit",
								"v1",
								"chartColorPalettes",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "list Email Configurations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/messaging/v1/email/configurations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"messaging",
								"v1",
								"email",
								"configurations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Login Settings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/login-settings/v1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"login-settings",
								"v1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Email Template",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/messaging/v1/email/configurations/template",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"messaging",
								"v1",
								"email",
								"configurations",
								"template"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Hot URL",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/messaging/v1/email/configurations/backlink",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"messaging",
								"v1",
								"email",
								"configurations",
								"backlink"
							]
						}
					},
					"response": []
				}
			],
			"description": "[Brand Kit Official Documentation](https://domo-support.domo.com/s/article/5428851518999?language=en_US)"
		},
		{
			"name": "Bricks and Pro-Code Apps",
			"item": [
				{
					"name": "list App Designs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/apps/v1/designs?checkAdminAuthority=false&deleted=false&order=updated&direction=desc&limit=2&offset=0&withPermission=ADMIN&parts=owners,creator,thumbnail,versions,cards,instances,mapping",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps",
								"v1",
								"designs"
							],
							"query": [
								{
									"key": "checkAdminAuthority",
									"value": "false"
								},
								{
									"key": "creator",
									"value": "false",
									"disabled": true
								},
								{
									"key": "deleted",
									"value": "false"
								},
								{
									"key": "order",
									"value": "updated",
									"description": "Column to sort by"
								},
								{
									"key": "direction",
									"value": "desc",
									"description": "Direction of sort"
								},
								{
									"key": "limit",
									"value": "2"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "search",
									"value": "",
									"description": "Optional search query",
									"disabled": true
								},
								{
									"key": "withPermission",
									"value": "ADMIN"
								},
								{
									"key": "parts",
									"value": "owners,creator,thumbnail,versions,cards,instances,mapping",
									"description": "Possible values: owners,creator,thumbnail,versions,cards,instances,mapping"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get App",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{instanceUrl}}/domoapps/apps/v2/:id",
							"host": [
								"{{instanceUrl}}"
							],
							"path": [
								"domoapps",
								"apps",
								"v2",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "App ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get App Design",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/apps/v1/designs/:id?parts=owners,cards,versions,creator",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps",
								"v1",
								"designs",
								":id"
							],
							"query": [
								{
									"key": "parts",
									"value": "owners,cards,versions,creator",
									"description": "Possible values: owners,creator,thumbnail,versions,cards,instances,mapping"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "App Design ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get App Manifest (Context)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{instanceUrl}}/domoapps/apps/v2/contexts/:contextId",
							"host": [
								"{{instanceUrl}}"
							],
							"path": [
								"domoapps",
								"apps",
								"v2",
								"contexts",
								":contextId"
							],
							"variable": [
								{
									"key": "contextId",
									"value": "",
									"description": "Context ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Count App Designs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/apps/v1/designs/count?checkAdminAuthority=false&deleted=false&withPermission=ADMIN",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps",
								"v1",
								"designs",
								"count"
							],
							"query": [
								{
									"key": "checkAdminAuthority",
									"value": "false"
								},
								{
									"key": "creator",
									"value": "false",
									"description": "Filter to App Designs created by token owner/signed-in user",
									"disabled": true
								},
								{
									"key": "deleted",
									"value": "false"
								},
								{
									"key": "search",
									"value": "",
									"description": "Optional search query",
									"disabled": true
								},
								{
									"key": "withPermission",
									"value": "ADMIN"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Share App Design",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    \"1234\",\r\n    \"2345\"\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/apps/v1/designs/:id/permissions/:permissions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps",
								"v1",
								"designs",
								":id",
								"permissions",
								":permissions"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "App Design ID"
								},
								{
									"key": "permissions",
									"value": "ADMIN"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Release App Design Version",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{instanceUrl}}/domoapps/designs/:id/release?version=0.0.1",
							"host": [
								"{{instanceUrl}}"
							],
							"path": [
								"domoapps",
								"designs",
								":id",
								"release"
							],
							"query": [
								{
									"key": "version",
									"value": "0.0.1"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "App Design ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update App Manifest (Context)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (parseInt(pm.request.url.variables.get('id')) !== JSON.parse(pm.request.body.raw).id) {\r",
									"    throw new Error('The URL parameter and body property for \"id\" don\\'t match. Adjust them to match each other and try again.')\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"1234\",\r\n    \"designId\": \"2345\",\r\n    \"designVersion\": \"0.0.1\",\r\n    \"mapping\": [],\r\n    \"collections\": [],\r\n    \"accountMapping\": [],\r\n    \"actionMapping\": [],\r\n    \"workflowMapping\": [],\r\n    \"packageMapping\": [],\r\n    \"isDisabled\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{instanceUrl}}/domoapps/apps/v2/contexts/:id",
							"host": [
								"{{instanceUrl}}"
							],
							"path": [
								"domoapps",
								"apps",
								"v2",
								"contexts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Context ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete App Design",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{instanceUrl}}/domoapps/designs/:id",
							"host": [
								"{{instanceUrl}}"
							],
							"path": [
								"domoapps",
								"designs",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "App Design ID"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "[Bricks Official Documentation ](https://domo-support.domo.com/s/article/4423762260375?language=en_US) | [Bricks Official Developer Documentation](https://developer.domo.com/portal/0037739ab3747-domo-bricks-overview)\n\n[Pro-Code Editor Official Documentation ](https://domo-support.domo.com/s/article/000005500?language=en_US) | [App Framework Official Developer Documentation](https://developer.domo.com/portal/d54m2ohkacza0-welcome)"
		},
		{
			"name": "Cards",
			"item": [
				{
					"name": "Problems (Issues)",
					"item": [
						{
							"name": "Get Card Problems",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/content/v1/cards?urns=1728631684&parts=problems",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content",
										"v1",
										"cards"
									],
									"query": [
										{
											"key": "urns",
											"value": "1728631684",
											"description": "Card ID"
										},
										{
											"key": "parts",
											"value": "problems"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Problem",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "raw message text"
								},
								"url": {
									"raw": "{{baseUrl}}/content/v1/badges/:cardId/problems",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content",
										"v1",
										"badges",
										":cardId",
										"problems"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "",
											"description": "Card ID"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Resolve Problem",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"state\": \"RESOLVED\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/content/v1/badges/:cardId/problems/:problemId/states",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content",
										"v1",
										"badges",
										":cardId",
										"problems",
										":problemId",
										"states"
									],
									"variable": [
										{
											"key": "cardId",
											"value": "",
											"description": "Card ID"
										},
										{
											"key": "problemId",
											"value": "",
											"description": "Problem ID"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "[Issues Offical Documentation](https://domo-support.domo.com/s/article/360042923834?language=en_US)"
				},
				{
					"name": "list/Search Cards",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"count\": 10000,\r\n    \"offset\": 0,\r\n    \"combineResults\": false,\r\n    \"query\": \"*\",\r\n    \"filters\": [\r\n        {\r\n            \"name\": \"OWNED_BY_ID\",\r\n            \"field\": \"owned_by_id\",\r\n            \"facetType\": \"user\",\r\n            \"value\": \"<user_id>:USER\",\r\n            \"filterType\": \"term\",\r\n            \"count\": 123,\r\n            \"displayValue\": \"<user_name>\",\r\n            \"translatedDisplayValue\": \"Owned by: <user_name>\",\r\n            \"translatedPlaceHolderText\": \"Search people\"\r\n        }\r\n    ],\r\n    \"sort\": {\r\n        \"fieldSorts\": [\r\n            {\r\n                \"enum\": \"CREATED_DESCENDING\",\r\n                \"field\": \"createDate\",\r\n                \"sortOrder\": \"DESC\",\r\n                \"label\": \"Created (Newest)\",\r\n                \"order\": 1\r\n            }\r\n        ]\r\n    },\r\n    \"facetValuesToInclude\": [],\r\n    \"facetValueLimit\": 0,\r\n    \"facetValueOffset\": 0,\r\n    \"includePhonetic\": true,\r\n    \"queryProfile\": \"GLOBAL\",\r\n    \"state\": \"list\",\r\n    \"topic\": null,\r\n    \"savedSearchId\": null,\r\n    \"entityList\": [\r\n        [\r\n            \"card\"\r\n        ]\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/search/v1/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"v1",
								"query"
							]
						}
					},
					"response": []
				},
				{
					"name": "list Cards Admin Summary",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ascending\": true,\r\n    \"orderBy\": \"cardTitle\",\r\n    \"includeCardTypeClause\": true,\r\n    \"cardTypes\": [\r\n        \"kpi\",\r\n        \"badge\"\r\n    ],\r\n    \"includeCardOwnerClause\": true,\r\n    \"addCardWithNoOwner\": true,\r\n    \"cardOwners\": [\r\n        {\r\n            \"id\": 123456,\r\n            \"type\": \"USER\"\r\n        }\r\n    ],\r\n    \"includeCardTitleClause\": true,\r\n    \"cardTitleSearchText\": \"test\",\r\n    \"includePageTitleClause\": true,\r\n    \"notOnPage\": false,\r\n    \"pageIds\": [\r\n        123456\r\n    ],\r\n    \"includeLastModifiedDateClause\": true,\r\n    \"lastModifiedDateOperand\": \"BETWEEN\",\r\n    \"lastModifiedStartDate\": \"2025-04-01\",\r\n    \"lastModifiedEndDate\": \"2025-04-02\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v2/cards/adminsummary?limit=100&skip=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v2",
								"cards",
								"adminsummary"
							],
							"query": [
								{
									"key": "limit",
									"value": "100"
								},
								{
									"key": "skip",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Cards",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/cards?urns=&parts=domoapp,drillPath,masonData,problems,properties,certification,datasources,dateInfo,drillPathURNs,library,metadata,metadataOverrides,owners,slicers,subscriptions&includeFiltered=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"cards"
							],
							"query": [
								{
									"key": "urns",
									"value": "",
									"description": "Card IDs. Can be a list separated by commas. Use format dr:<drill_id>:<card_id> to get a drill's details."
								},
								{
									"key": "parts",
									"value": "domoapp,drillPath,masonData,problems,properties,certification,datasources,dateInfo,drillPathURNs,library,metadata,metadataOverrides,owners,slicers,subscriptions",
									"description": "Properties to return"
								},
								{
									"key": "includeFiltered",
									"value": "false",
									"description": "Return property \"access\" that indicates if the token owner/signed-in user has access to the card"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Notebook Card",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/cards/notebook/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"cards",
								"notebook",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Card ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Linked Cards",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/cards/:id/link",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"cards",
								":id",
								"link"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Card ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Views",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"urns\": [\r\n        12345\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v1/analytics/views/cards/counts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"analytics",
								"views",
								"cards",
								"counts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Access",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/share/accesslist/badge/:id?expandUsers=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"share",
								"accesslist",
								"badge",
								":id"
							],
							"query": [
								{
									"key": "expandUsers",
									"value": "false",
									"description": "Include list of users in a group"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Card ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Card DataSet Schema",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/cards/:id/details",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"cards",
								":id",
								"details"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Card ID. Use format dr:<drill_id>:<card_id> to get a drill's details."
								}
							]
						},
						"description": "Returns all DataSet columns and controls (filters) used."
					},
					"response": []
				},
				{
					"name": "Get Cards for DataSet",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/datasources/:id/cards?drill=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"datasources",
								":id",
								"cards"
							],
							"query": [
								{
									"key": "drill",
									"value": "true",
									"description": "Include cards that only have drills using that DataSet."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "DataSet UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Cards Min/Max Dates",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/cards/minmaxdates?urns=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"cards",
								"minmaxdates"
							],
							"query": [
								{
									"key": "urns",
									"value": "",
									"description": "Card ID list separated by commas. Use format dr:<drill_id>:<card_id> to get a drills details."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Cards a User has Access To",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/access/users/:id/cards?limit=100&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"access",
								"users",
								":id",
								"cards"
							],
							"query": [
								{
									"key": "limit",
									"value": "100"
								},
								{
									"key": "offset",
									"value": "0"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "User ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Chart Type Settings (General)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/cards/kpi/:chartType/options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"cards",
								"kpi",
								":chartType",
								"options"
							],
							"variable": [
								{
									"key": "chartType",
									"value": "badge_symbol_stackedbar"
								}
							]
						},
						"description": "Available chartTypes:  \nbadge_vert_stackedbar  \nbadge_vert_multibar  \nbadge_horiz_stackedbar  \nbadge_vert_nestedbar  \nbadge_two_trendline  \nbadge_line_stackedbar  \nbadge_pie  \nbadge_donut  \nbadge_basic_table  \nbadge_heatmap  \nbadge_singlevalue  \nbadge_filledgauge  \nbadge_world_map  \nbadge_map  \nbadge_xybubble  \nbadge_textbox  \nbadge_checkbox_selector  \nbadge_slicer  \nbadge_vert_stackedbar  \nbadge_vert_multibar  \nbadge_vert_100pct  \nbadge_vert_nestedbar  \nbadge_vert_bullet  \nbadge_line_bar  \nbadge_line_stackedbar  \nbadge_symbol_bar  \nbadge_symbol_stackedbar  \nbadge_pareto  \nbadge_vert_percentbar  \nbadge_vert_waterfall  \nbadge_line_clusterbar  \nbadge_vert_dual_stackedbar  \nbadge_vert_rtbar  \nbadge_vert_rtmultibar  \nbadge_vert_rtstackedbar  \nbadge_vert_histogram  \nbadge_vert_marimekko  \nbadge_curved_line_bar  \nbadge_curved_line_stackedbar  \nbadge_vert_bar_line  \nbadge_vert_nested_linebar  \nbadge_vert_100pct_linebar  \nbadge_vert_bar_overlay  \nbadge_vert_facetedbar  \nbadge_horiz_stackedbar  \nbadge_horiz_multibar  \nbadge_horiz_100pct  \nbadge_horiz_nestedbar  \nbadge_bullet  \nbadge_horiz_percentbar  \nbadge_horiz_waterfall  \nbadge_horiz_dual_stackedbar  \nbadge_gantt  \nbadge_gantt_percent  \nbadge_gantt_dep  \nbadge_horiz_histogram  \nbadge_horiz_marimekko  \nbadge_horiz_line_bar  \nbadge_horiz_line_clusterbar  \nbadge_horiz_line_stackedbar  \nbadge_horiz_nested_linebar  \nbadge_horiz_symbol_bar  \nbadge_horiz_symbol_stackedbar  \nbadge_horiz_bar_line  \nbadge_horiz_rtbar  \nbadge_horiz_rtstackedbar  \nbadge_horiz_rtmultibar  \nbadge_horiz_100pct_linebar  \nbadge_horiz_bar_overlay  \nbadge_horiz_facetedbar  \nbadge_trendline  \nbadge_two_trendline  \nbadge_curvedline  \nbadge_stepline  \nbadge_symbolline  \nbadge_curved_symbolline  \nbadge_rttrendline  \nbadge_horiz_trendline  \nbadge_horiz_curvedline  \nbadge_horiz_stepline  \nbadge_horiz_symbolline  \nbadge_horiz_curved_symbolline  \nbadge_bump  \nbadge_slope  \nbadge_variance_line  \nbadge_vert_multi_dotplot  \nbadge_vert_stacked_dotplot  \nbadge_vert_line_multi_dotplot  \nbadge_vert_line_stacked_dotplot  \nbadge_vert_dotplot_overlay  \nbadge_horiz_multi_dotplot  \nbadge_horiz_stacked_dotplot  \nbadge_horiz_line_multi_dotplot  \nbadge_horiz_line_stacked_dotplot  \nbadge_horiz_dotplot_overlay  \nbadge_stackedtrend  \nbadge_vert_100pct_area  \nbadge_vert_area_overlay  \nbadge_vert_curved_stacked_area  \nbadge_vert_curved_100pct_area  \nbadge_vert_curved_area_overlay  \nbadge_vert_step_stacked_area  \nbadge_vert_step_100pct_area  \nbadge_vert_step_area_overlay  \nbadge_stream  \nbadge_horiz_stackedtrend  \nbadge_horiz_100pct_area  \nbadge_horiz_area_overlay  \nbadge_horiz_curved_stacked_area  \nbadge_horiz_curved_100pct_area  \nbadge_horiz_curved_area_overlay  \nbadge_horiz_step_stacked_area  \nbadge_horiz_step_100pct_area  \nbadge_horiz_step_area_overlay  \nbadge_xybubble  \nbadge_bubble  \nbadge_xyscatterplot_basic  \nbadge_xyscatterplot  \nbadge_horiz_boxplot  \nbadge_vert_boxplot  \nbadge_xy_line  \nbadge_ds_pred_modeling  \nbadge_ds_forecasting  \nbadge_ds_outliers  \nbadge_ds_spc  \nbadge_correlation_matrix  \nbadge_confusion_matrix  \nbadge_pie  \nbadge_donut  \nbadge_treemap  \nbadge_funnel  \nbadge_funnel_swing  \nbadge_funnel_bars  \nbadge_nautilus  \nbadge_nautilus_donut  \nbadge_nightingale_rose  \nbadge_stream_funnel  \nbadge_world_map  \nbadge_map  \nbadge_map_africa  \nbadge_map_asia  \nbadge_map_australia  \nbadge_map_europe  \nbadge_map_north_america  \nbadge_map_south_america  \nbadge_map_middle_east  \nbadge_map_austria  \nbadge_map_brazil  \nbadge_map_canada  \nbadge_map_chile  \nbadge_map_china  \nbadge_map_france2016  \nbadge_map_france_dept  \nbadge_map_france  \nbadge_map_germany  \nbadge_map_ghana  \nbadge_map_india  \nbadge_map_indonesia  \nbadge_map_italy  \nbadge_map_japan  \nbadge_map_malaysia  \nbadge_map_mexico  \nbadge_map_new_zealand  \nbadge_map_nigeria  \nbadge_map_panama  \nbadge_map_peru  \nbadge_map_philippines  \nbadge_map_portugal  \nbadge_map_south_korea  \nbadge_map_spain  \nbadge_map_switzerland  \nbadge_map_uae  \nbadge_map_united_kingdom  \nbadge_map_uk_area  \nbadge_map_uk_postal  \nbadge_map_latlong  \nbadge_map_latlong_route  \nbadge_map_us_county  \nbadge_map_us_state  \nbadge_gauge  \nbadge_filledgauge  \nbadge_facegauge  \nbadge_shapegauge  \nbadge_multi_value  \nbadge_multi_value_cols  \nbadge_singlevalue  \nbadge_progressbar  \nbadge_compgauge  \nbadge_compfillgauge_basic  \nbadge_compfillgauge_adv  \nbadge_radial_progress  \nbadge_multi_radial_progress  \nbadge_waffle  \nbadge_in_range_gauge  \nbadge_imagegauge  \nbadge_basic_table  \nbadge_pivot_table  \nbadge_heatmap_table  \nbadge_flex_table  \nbadge_textbox  \nbadge_dynamic_textbox  \nbadge_table  \nbadge_slicer  \nbadge_date_selector  \nbadge_checkbox_selector  \nbadge_radio_selector  \nbadge_range_selector  \nbadge_dropdown_selector  \nbadge_buttons  \nbadge_word_cloud  \nbadge_horiz_symbol_overlay  \nbadge_vert_symbol_overlay  \nbadge_heatmap  \nbadge_stock_candlestick  \nbadge_horiz_symbol  \nbadge_category_scatter  \nbadge_calendar  \nbadge_category_calendar  \nbadge_highlow  \nbadge_horiz_highlow  \nbadge_vert_symbol  \nbadge_radar  \nbadge_spark_line  \nbadge_spark_bar  \nbadge_sunburst  \nbadge_sankey  \nbadge_sankey_circular  \nbadge_sankey_path  \nbadge_risk_heatmap  \nbadge_packed_bubble  \nbadge_symbol_matrix"
					},
					"response": []
				},
				{
					"name": "Get Color Palette (General)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/cards/kpi/palette",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"cards",
								"kpi",
								"palette"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate Move to New DataSet",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/cards/kpi/:cardId/comparemove/:datasetId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"cards",
								"kpi",
								":cardId",
								"comparemove",
								":datasetId"
							],
							"variable": [
								{
									"key": "cardId",
									"value": "",
									"description": "Card ID"
								},
								{
									"key": "datasetId",
									"value": "",
									"description": "DataSet UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Card Details for Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dynamicText\": true,\r\n    \"variables\": true,\r\n    \"urn\": \"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v3/cards/kpi/definition",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v3",
								"cards",
								"kpi",
								"definition"
							]
						}
					},
					"response": []
				},
				{
					"name": "Render Card (Data)",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"queryOverrides\": {\r\n        \"filters\": [],\r\n        \"overrideSlicers\": false,\r\n        \"segments\": [],\r\n        \"functionOverrides\": {},\r\n        \"overrideDateRange\": false\r\n    },\r\n    \"width\": 960,\r\n    \"height\": 400,\r\n    \"scale\": 1,\r\n    \"treatLongsAsStrings\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v1/cards/kpi/:id/render?parts=data",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"cards",
								"kpi",
								":id",
								"render"
							],
							"query": [
								{
									"key": "parts",
									"value": "data"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Card ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Card",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"definition\": {\r\n        \"subscriptions\": {\r\n            \"big_number\": {\r\n                \"name\": \"big_number\",\r\n                \"columns\": [\r\n                    {\r\n                        \"formulaId\": \"calculation_00000000-0000-0000-0000-000000000000\",\r\n                        \"alias\": \"<string>\",\r\n                        \"format\": {\r\n                            \"type\": \"number\",\r\n                            \"format\": \"###,##0\",\r\n                            \"percentMultiplied\": false\r\n                        }\r\n                    }\r\n                ],\r\n                \"filters\": [],\r\n                \"orderBy\": [],\r\n                \"groupBy\": [],\r\n                \"fiscal\": false,\r\n                \"projection\": false,\r\n                \"distinct\": false,\r\n                \"limit\": 1\r\n            },\r\n            \"main\": {\r\n                \"name\": \"main\",\r\n                \"columns\": [\r\n                    {\r\n                        \"column\": \"Column 1\",\r\n                        \"mapping\": \"VALUE\"\r\n                    },\r\n                    {\r\n                        \"formulaId\": \"calculation_00000000-0000-0000-0000-000000000000\",\r\n                        \"mapping\": \"VALUE\",\r\n                        \"format\": {\r\n                            \"tableColumn\": {\r\n                                \"hideTotal\": true\r\n                            }\r\n                        }\r\n                    }\r\n                ],\r\n                \"filters\": [\r\n                    {\r\n                        \"column\": \"Column 1\",\r\n                        \"values\": [],\r\n                        \"filterType\": \"LEGACY\",\r\n                        \"operand\": \"IN\",\r\n                        \"dataType\": \"string\"\r\n                    }\r\n                ],\r\n                \"orderBy\": [\r\n                    {\r\n                        \"formulaId\": \"calculation_00000000-0000-0000-0000-000000000000\",\r\n                        \"order\": \"DESCENDING\"\r\n                    }\r\n                ],\r\n                \"groupBy\": [\r\n                    {\r\n                        \"column\": \"Column 1\"\r\n                    },\r\n                    {\r\n                        \"formulaId\": \"calculation_00000000-0000-0000-0000-000000000000\"\r\n                    }\r\n                ],\r\n                \"fiscal\": false,\r\n                \"projection\": false,\r\n                \"distinct\": false\r\n            }\r\n        },\r\n        \"formulas\": {\r\n            \"dsUpdated\": [],\r\n            \"dsDeleted\": [],\r\n            \"card\": []\r\n        },\r\n        \"annotations\": {\r\n            \"new\": [],\r\n            \"modified\": [],\r\n            \"deleted\": []\r\n        },\r\n        \"conditionalFormats\": {\r\n            \"card\": [\r\n                {\r\n                    \"condition\": {\r\n                        \"column\": \"calculation_00000000-0000-0000-0000-000000000000\",\r\n                        \"values\": [],\r\n                        \"dataSourceId\": \"50a665ab-abfb-4721-a1e7-03fe13d36f8e\",\r\n                        \"filterType\": \"LEGACY\",\r\n                        \"operand\": \"IN\"\r\n                    },\r\n                    \"format\": {\r\n                        \"color\": \"#80C25DFF\",\r\n                        \"textColor\": \"#ffffff\",\r\n                        \"textStyle\": \"PLAIN\",\r\n                        \"applyToRow\": false\r\n                    }\r\n                }\r\n            ],\r\n            \"datasource\": []\r\n        },\r\n        \"dynamicTitle\": {\r\n            \"text\": [\r\n                {\r\n                    \"text\": \"<string>\",\r\n                    \"type\": \"TEXT\"\r\n                },\r\n                {\r\n                    \"columns\": [\r\n                        \"calculation_<legacy_function_id>\"\r\n                    ],\r\n                    \"type\": \"FILTER\"\r\n                },\r\n                {\r\n                    \"text\": \" \",\r\n                    \"type\": \"TEXT\"\r\n                },\r\n                {\r\n                    \"columns\": [\r\n                        \"Column 1\",\r\n                        \"calculation_<legacy_function_id>\"\r\n                    ],\r\n                    \"type\": \"FILTER\"\r\n                },\r\n                {\r\n                    \"text\": \" \",\r\n                    \"type\": \"TEXT\"\r\n                },\r\n                {\r\n                    \"defaultText\": \"<string>\",\r\n                    \"columns\": [\r\n                        \"Column 2\"\r\n                    ],\r\n                    \"type\": \"FILTER\"\r\n                },\r\n                {\r\n                    \"text\": \" <string> \",\r\n                    \"type\": \"TEXT\"\r\n                },\r\n                {\r\n                    \"type\": \"DATE_RANGE_FILTER_DATE_TIME_RANGE\"\r\n                }\r\n            ]\r\n        },\r\n        \"dynamicDescription\": {\r\n            \"text\": [\r\n                {\r\n                    \"text\": \" \\n \",\r\n                    \"type\": \"TEXT\"\r\n                },\r\n                {\r\n                    \"prefix\": \"<string>\",\r\n                    \"suffix\": \"<string>\",\r\n                    \"variables\": [\r\n                        12345\r\n                    ],\r\n                    \"type\": \"VARIABLE_VALUE\"\r\n                }\r\n            ],\r\n            \"displayOnCardDetails\": true\r\n        },\r\n        \"charts\": {\r\n            \"main\": {\r\n                \"component\": \"main\",\r\n                \"chartType\": \"badge_basic_table\",\r\n                \"overrides\": {\r\n                    \"padding\": \"Medium\",\r\n                    \"header_row_fill_color\": \"<hex>\",\r\n                    \"total_row\": \"true\",\r\n                    \"hide_columns\": \"2,3\",\r\n                    \"total_row_fill_color\": \"<hex>\",\r\n                    \"total_row_position\": \"Before\",\r\n                    \"hide_alternate_row_colors\": \"false\",\r\n                    \"attr_header_row\": \"Bold\",\r\n                    \"header_row\": \"Left\",\r\n                    \"attr_total_row\": \"Bold\"\r\n                },\r\n                \"goal\": null\r\n            }\r\n        },\r\n        \"allowTableDrill\": false,\r\n        \"segments\": {\r\n            \"active\": [],\r\n            \"definitions\": []\r\n        },\r\n        \"controls\": [\r\n            {\r\n                \"id\": 123,\r\n                \"function\": {\r\n                    \"id\": 123\r\n                },\r\n                \"entityType\": \"CARD\",\r\n                \"entityId\": \"1234\",\r\n                \"type\": \"RADIOS\",\r\n                \"dataType\": \"STRING\",\r\n                \"values\": [\r\n                    {\r\n                        \"expression\": {\r\n                            \"exprType\": \"STRING_VALUE\",\r\n                            \"value\": \"Yes\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"expression\": {\r\n                            \"exprType\": \"STRING_VALUE\",\r\n                            \"value\": \"No\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"format\": {\r\n                    \"type\": \"default\"\r\n                },\r\n                \"name\": \"<string>\",\r\n                \"description\": \"<string>\",\r\n                \"controlType\": \"VARIABLE\"\r\n            },\r\n            {\r\n                \"type\": \"string\",\r\n                \"displayType\": \"multiple_select\",\r\n                \"name\": \"<string>\",\r\n                \"column\": \"Column 1\",\r\n                \"operator\": \"IN\",\r\n                \"values\": [],\r\n                \"collapsed\": false,\r\n                \"controlType\": \"SLICER\"\r\n            },\r\n            {\r\n                \"dataSourceId\": \"00000000-0000-0000-0000-000000000000\",\r\n                \"column\": \"calculation_00000000-0000-0000-0000-000000000000\",\r\n                \"name\": \"Beast Mode 1\",\r\n                \"columnDisplayName\": \"<string>\",\r\n                \"operator\": \"IN\",\r\n                \"values\": [],\r\n                \"type\": \"string\",\r\n                \"collapsed\": false,\r\n                \"displayType\": \"multiple_select\",\r\n                \"controlType\": \"SLICER\"\r\n            }\r\n        ]\r\n    },\r\n    \"dataProvider\": {\r\n        \"dataSourceId\": \"00000000-0000-0000-0000-000000000000\"\r\n    },\r\n    \"variables\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v3/cards/kpi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v3",
								"cards",
								"kpi"
							],
							"query": [
								{
									"key": "pageId",
									"value": "-100000",
									"description": "Optional Page ID",
									"disabled": true
								},
								{
									"key": "parentUrn",
									"value": "",
									"description": "Parent Card ID, for creating a Drill Path",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Share Access",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"resources\": [\r\n    {\r\n      \"type\": \"badge\",\r\n      \"id\": \"12345\"\r\n    },\r\n    {\r\n      \"type\": \"badge\",\r\n      \"id\": \"23456\"\r\n    }\r\n  ],\r\n  \"recipients\": [\r\n    {\r\n      \"type\": \"user\",\r\n      \"id\": \"12345\"\r\n    }\r\n  ],\r\n  \"message\": \"<string>\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v1/share?sendEmail=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"share"
							],
							"query": [
								{
									"key": "sendEmail",
									"value": "false"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Card Change in History",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"changes\": {\r\n        \"kpi\": {\r\n            \"title\": true,\r\n            \"description\": true,\r\n            \"aggregationChanged\": true,\r\n            \"dimensionsChanged\": true,\r\n            \"orderingChanged\": true,\r\n            \"filtersChanged\": true\r\n        },\r\n        \"data\": {},\r\n        \"initial\": true\r\n    },\r\n    \"comment\": \"<string>\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{instanceUrl}}/kpis/:id/history",
							"host": [
								"{{instanceUrl}}"
							],
							"path": [
								"kpis",
								":id",
								"history"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Card ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Card",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"definition\": {\r\n        \"subscriptions\": {\r\n            \"big_number\": {\r\n                \"name\": \"big_number\",\r\n                \"columns\": [\r\n                    {\r\n                        \"formulaId\": \"calculation_00000000-0000-0000-0000-000000000000\",\r\n                        \"alias\": \"<string>\",\r\n                        \"format\": {\r\n                            \"type\": \"number\",\r\n                            \"format\": \"###,##0\",\r\n                            \"percentMultiplied\": false\r\n                        }\r\n                    }\r\n                ],\r\n                \"filters\": [],\r\n                \"orderBy\": [],\r\n                \"groupBy\": [],\r\n                \"fiscal\": false,\r\n                \"projection\": false,\r\n                \"distinct\": false,\r\n                \"limit\": 1\r\n            },\r\n            \"main\": {\r\n                \"name\": \"main\",\r\n                \"columns\": [\r\n                    {\r\n                        \"column\": \"Column 1\",\r\n                        \"mapping\": \"VALUE\"\r\n                    },\r\n                    {\r\n                        \"formulaId\": \"calculation_00000000-0000-0000-0000-000000000000\",\r\n                        \"mapping\": \"VALUE\",\r\n                        \"format\": {\r\n                            \"tableColumn\": {\r\n                                \"hideTotal\": true\r\n                            }\r\n                        }\r\n                    }\r\n                ],\r\n                \"filters\": [\r\n                    {\r\n                        \"column\": \"Column 1\",\r\n                        \"values\": [\r\n                            \"<string>\"\r\n                        ],\r\n                        \"filterType\": \"LEGACY\",\r\n                        \"operand\": \"IN\",\r\n                        \"dataType\": \"string\"\r\n                    }\r\n                ],\r\n                \"orderBy\": [\r\n                    {\r\n                        \"formulaId\": \"calculation_00000000-0000-0000-0000-000000000000\",\r\n                        \"order\": \"DESCENDING\"\r\n                    }\r\n                ],\r\n                \"groupBy\": [\r\n                    {\r\n                        \"column\": \"Column 1\"\r\n                    },\r\n                    {\r\n                        \"formulaId\": \"calculation_00000000-0000-0000-0000-000000000000\"\r\n                    }\r\n                ],\r\n                \"fiscal\": false,\r\n                \"projection\": false,\r\n                \"distinct\": false\r\n            }\r\n        },\r\n        \"formulas\": {\r\n            \"dsUpdated\": [],\r\n            \"dsDeleted\": [],\r\n            \"card\": []\r\n        },\r\n        \"annotations\": {\r\n            \"new\": [],\r\n            \"modified\": [],\r\n            \"deleted\": []\r\n        },\r\n        \"conditionalFormats\": {\r\n            \"card\": [],\r\n            \"datasource\": []\r\n        },\r\n        \"dynamicTitle\": {\r\n            \"text\": [\r\n                {\r\n                    \"text\": \"<string>\",\r\n                    \"type\": \"TEXT\"\r\n                },\r\n                {\r\n                    \"columns\": [\r\n                        \"calculation_<legacy_function_id>\"\r\n                    ],\r\n                    \"type\": \"FILTER\"\r\n                },\r\n                {\r\n                    \"text\": \" \",\r\n                    \"type\": \"TEXT\"\r\n                },\r\n                {\r\n                    \"columns\": [\r\n                        \"Column 1\",\r\n                        \"calculation_00000000-0000-0000-0000-000000000000\"\r\n                    ],\r\n                    \"type\": \"FILTER\"\r\n                },\r\n                {\r\n                    \"text\": \" \",\r\n                    \"type\": \"TEXT\"\r\n                },\r\n                {\r\n                    \"defaultText\": \"<string>\",\r\n                    \"columns\": [\r\n                        \"Column 2\"\r\n                    ],\r\n                    \"type\": \"FILTER\"\r\n                },\r\n                {\r\n                    \"text\": \" <string> \",\r\n                    \"type\": \"TEXT\"\r\n                },\r\n                {\r\n                    \"type\": \"DATE_RANGE_FILTER_DATE_TIME_RANGE\"\r\n                }\r\n            ]\r\n        },\r\n        \"dynamicDescription\": {\r\n            \"text\": [\r\n                {\r\n                    \"text\": \" \\n \",\r\n                    \"type\": \"TEXT\"\r\n                },\r\n                {\r\n                    \"prefix\": \"<string>\",\r\n                    \"suffix\": \"<string>\",\r\n                    \"variables\": [\r\n                        12345\r\n                    ],\r\n                    \"type\": \"VARIABLE_VALUE\"\r\n                }\r\n            ],\r\n            \"displayOnCardDetails\": true\r\n        },\r\n        \"charts\": {\r\n            \"main\": {\r\n                \"component\": \"main\",\r\n                \"chartType\": \"badge_basic_table\",\r\n                \"overrides\": {},\r\n                \"goal\": null\r\n            }\r\n        },\r\n        \"allowTableDrill\": false,\r\n        \"segments\": {\r\n            \"active\": [],\r\n            \"definitions\": []\r\n        },\r\n        \"modified\": 1738968629000,\r\n        \"controls\": [\r\n            {\r\n                \"id\": 123,\r\n                \"function\": {\r\n                    \"id\": 1234\r\n                },\r\n                \"entityType\": \"CARD\",\r\n                \"entityId\": \"<card_id>\",\r\n                \"type\": \"RADIOS\",\r\n                \"dataType\": \"STRING\",\r\n                \"values\": [\r\n                    {\r\n                        \"expression\": {\r\n                            \"exprType\": \"STRING_VALUE\",\r\n                            \"value\": \"Yes\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"expression\": {\r\n                            \"exprType\": \"STRING_VALUE\",\r\n                            \"value\": \"No\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"format\": {\r\n                    \"type\": \"default\"\r\n                },\r\n                \"name\": \"<string>\",\r\n                \"description\": \"<string>\",\r\n                \"controlType\": \"VARIABLE\"\r\n            },\r\n            {\r\n                \"type\": \"string\",\r\n                \"displayType\": \"multiple_select\",\r\n                \"name\": \"<string>\",\r\n                \"column\": \"Column 1\",\r\n                \"operator\": \"IN\",\r\n                \"values\": [],\r\n                \"collapsed\": false,\r\n                \"controlType\": \"SLICER\"\r\n            }\r\n        ]\r\n    },\r\n    \"dataProvider\": {\r\n        \"dataSourceId\": \"00000000-0000-0000-0000-000000000000\"\r\n    },\r\n    \"variables\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v3/cards/kpi/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v3",
								"cards",
								"kpi",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Card ID. Use format dr:<drill_id>:<card_id> to update a drill."
								}
							]
						},
						"description": "Use this format for changing or not changing formulas and annotations:\n\n``` json\n\"formulas\": {\n    \"dsUpdated\": [],\n    \"dsDeleted\": [],\n     \"card\": []\n},\n\"annotations\": {\n    \"new\": [],\n    \"modified\": [],\n     \"deleted\": []\n},\n\n ```\n\nFor conditionalFormats, change the array to an object and separate out DataSet vs. Card rules:\n\n``` json\n\"conditionalFormats\": {\n    \"card\": [],\n     \"datasource\": []\n},\n\n ```\n\nRemove everything on the top-level except definition. Then add dataProvider and variables:\n\n``` json\n{\n    \"definition\": {\n...},\n    \"dataProvider\": {\n        \"dataSourceId\": \"1dbaba48-da44-4e13-a3e6-53432cf1ae7c\"\n    },\n    \"variables\": true\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "Lock/Unlock Card",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"locked\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v1/cards/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"cards",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Card ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Bulk Add Cards to Pages (Does Not Remove)",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cardIds\": [\r\n        \"123\",\r\n        \"234\"\r\n    ],\r\n    \"destinationPageIds\": [\r\n        123456\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v1/cards/bulk/pages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"cards",
								"bulk",
								"pages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Move Card (Update Pages)",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    123456,\r\n    234567\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v1/cards/:id/pages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"cards",
								":id",
								"pages"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Card ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Increment Views",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"urns\": [\r\n        \"1234\",\r\n        \"2345\"\r\n    ],\r\n    \"context\": \"AUTHENTICATED\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v1/analytics/views/cards/increment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"analytics",
								"views",
								"cards",
								"increment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Owners",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cardIds\": [\r\n        123456\r\n    ],\r\n    \"cardOwners\": [\r\n        {\r\n            \"id\": \"1234\",\r\n            \"type\": \"USER\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v1/cards/owners/:action",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"cards",
								"owners",
								":action"
							],
							"variable": [
								{
									"key": "action",
									"value": "",
									"description": "add or remove"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Card from Page",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{instanceUrl}}/kpis/:id/remove?pageid=",
							"host": [
								"{{instanceUrl}}"
							],
							"path": [
								"kpis",
								":id",
								"remove"
							],
							"query": [
								{
									"key": "pageid",
									"value": "",
									"description": "Page ID"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Card ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Access to Cards",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/share/bulk/badge/:type/:id?resourceIds=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"share",
								"bulk",
								"badge",
								":type",
								":id"
							],
							"query": [
								{
									"key": "resourceIds",
									"value": "",
									"description": "Comma separated list of Card IDs"
								}
							],
							"variable": [
								{
									"key": "type",
									"value": "user",
									"description": "user or group"
								},
								{
									"key": "id",
									"value": "",
									"description": "User or Group ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Cards",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/cards/bulk?cardIds=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"cards",
								"bulk"
							],
							"query": [
								{
									"key": "cardIds",
									"value": "",
									"description": "Comma separated list of Card IDs"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Drill Path",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{instanceUrl}}/kpis/:cardId/drillPath/:drillNumber/drillView/:drillPathId",
							"host": [
								"{{instanceUrl}}"
							],
							"path": [
								"kpis",
								":cardId",
								"drillPath",
								":drillNumber",
								"drillView",
								":drillPathId"
							],
							"variable": [
								{
									"key": "cardId",
									"value": "",
									"description": "Card ID"
								},
								{
									"key": "drillNumber",
									"value": "1",
									"description": "Drill Number"
								},
								{
									"key": "drillPathId",
									"value": "",
									"description": "Drill Path ID"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "[Cards Official Documentation](https://domo-support.domo.com/s/topic/0TO5w000000ZaoNGAS/analyzer-and-visualization-cards?language=en_US)"
		},
		{
			"name": "Certification",
			"item": [
				{
					"name": "list Certifications",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"operationName\": \"getWorkflowConnection\",\r\n        \"variables\": {\r\n            \"type\": \"CC\",\r\n            \"view\": \"WAITING\", //WAITING or SUBMITTED\r\n            \"timePeriod\": \"ACTIVE\", //PAST or ACTIVE\r\n            \"first\": 30,\r\n            \"after\": null,\r\n            \"orderBy\": \"DATE\",\r\n            \"reverseSort\": false,\r\n            \"searchTerm\": \"\",\r\n            \"templateId\": null\r\n        },\r\n        \"query\": \"query getWorkflowConnection($type: String!, $after: ID, $view: View, $timePeriod: TimePeriod, $orderBy: OrderBy, $reverseSort: Boolean, $searchTerm: String, $first: Int, $templateId: ID) {\\n  workflowConnection(type: $type, after: $after, view: $view, timePeriod: $timePeriod, orderBy: $orderBy, reverseSort: $reverseSort, searchTerm: $searchTerm, first: $first, templateId: $templateId) {\\n    edges {\\n      cursor\\n      node {\\n        certificationRequest {\\n          id\\n          type\\n          status\\n          entityType\\n          entityId\\n          entityTitle\\n          previousActor {\\n            id\\n            type\\n            displayName\\n            ... on User {\\n              title\\n              avatarKey\\n              isCurrentUser\\n              __typename\\n            }\\n            ... on Group {\\n              currentUserIsMember\\n              userCount\\n              isDeleted\\n              __typename\\n            }\\n            __typename\\n          }\\n          entityOwnerEx {\\n            id\\n            type\\n            displayName\\n            ... on User {\\n              title\\n              avatarKey\\n              isCurrentUser\\n              __typename\\n            }\\n            ... on Group {\\n              currentUserIsMember\\n              userCount\\n              isDeleted\\n              __typename\\n            }\\n            __typename\\n          }\\n          entityOwners {\\n            id\\n            type\\n            displayName\\n            ... on User {\\n              title\\n              avatarKey\\n              isCurrentUser\\n              __typename\\n            }\\n            ... on Group {\\n              currentUserIsMember\\n              userCount\\n              isDeleted\\n              __typename\\n            }\\n            __typename\\n          }\\n          requestor {\\n            id\\n            displayName\\n            title\\n            isCurrentUser\\n            __typename\\n          }\\n          modifiedTime\\n          createdTime\\n          __typename\\n        }\\n        approval {\\n          newActivity\\n          observers {\\n            id\\n            type\\n            displayName\\n            title\\n            ... on Group {\\n              memberCount: userCount\\n              __typename\\n            }\\n            __typename\\n          }\\n          lastViewed\\n          newActivity\\n          newMessage {\\n            created\\n            createdByType\\n            createdBy {\\n              id\\n              displayName\\n              __typename\\n            }\\n            content {\\n              text\\n              __typename\\n            }\\n            __typename\\n          }\\n          lastAction\\n          version\\n          templateInstructions\\n          submittedTime\\n          id\\n          title\\n          status\\n          providerName\\n          templateTitle\\n          buzzChannelId\\n          buzzGeneralThreadId\\n          templateInstructions\\n          templateDescription\\n          type\\n          total {\\n            value\\n            currency\\n            __typename\\n          }\\n          modifiedTime\\n          previousApprover: previousApproverEx {\\n            id\\n            type\\n            displayName\\n            ... on User {\\n              title\\n              avatarKey\\n              isCurrentUser\\n              __typename\\n            }\\n            ... on Group {\\n              currentUserIsMember\\n              userCount\\n              isDeleted\\n              actor {\\n                displayName\\n                id\\n                __typename\\n              }\\n              __typename\\n            }\\n            __typename\\n          }\\n          pendingApprover: pendingApproverEx {\\n            id\\n            type\\n            displayName\\n            ... on User {\\n              title\\n              avatarKey\\n              isCurrentUser\\n              __typename\\n            }\\n            ... on Group {\\n              currentUserIsMember\\n              userCount\\n              isDeleted\\n              __typename\\n            }\\n            __typename\\n          }\\n          submitter {\\n            id\\n            displayName\\n            title\\n            avatarKey\\n            isCurrentUser\\n            __typename\\n          }\\n          approvalChainIdx\\n          chain {\\n            actor {\\n              displayName\\n              __typename\\n            }\\n            approver {\\n              id\\n              type\\n              displayName\\n              ... on User {\\n                title\\n                avatarKey\\n                isCurrentUser\\n                __typename\\n              }\\n              ... on Group {\\n                userCount\\n                isDeleted\\n                __typename\\n              }\\n              __typename\\n            }\\n            status\\n            time\\n            type\\n            key\\n            __typename\\n          }\\n          fields {\\n            type\\n            name\\n            data\\n            key\\n            ... on NumberField {\\n              value\\n              __typename\\n            }\\n            ... on CurrencyField {\\n              number: value\\n              currency\\n              __typename\\n            }\\n            ... on DateField {\\n              date: value\\n              __typename\\n            }\\n            ... on DataSetAttachmentField {\\n              dataSet: value {\\n                id\\n                name\\n                description\\n                owner {\\n                  id\\n                  displayName\\n                  __typename\\n                }\\n                provider\\n                cardCount\\n                __typename\\n              }\\n              __typename\\n            }\\n            __typename\\n          }\\n          history {\\n            actor {\\n              type\\n              id\\n              displayName\\n              ... on User {\\n                avatarKey\\n                __typename\\n              }\\n              __typename\\n            }\\n            status\\n            time\\n            __typename\\n          }\\n          __typename\\n        }\\n        __typename\\n      }\\n      __typename\\n    }\\n    pageInfo {\\n      hasNextPage\\n      hasPreviousPage\\n      startCursor\\n      endCursor\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/synapse/approval/graphql",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"synapse",
								"approval",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "list Certification Templates",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"operationName\": \"getCertifiedTemplates\",\r\n        \"variables\": {\r\n            \"type\": \"CC:CARD\", //CC:CARD or CC:DSET\r\n            \"includeUnpublished\": false\r\n        },\r\n        \"query\": \"query getCertifiedTemplates($type: String, $includeUnpublished: Boolean) {\\n  templates(type: $type, includeUnpublished: $includeUnpublished) {\\n    type\\n    id\\n    title\\n    description\\n    isPublic\\n    isPublished\\n    providerName\\n    owner {\\n      id\\n      displayName\\n      avatarKey\\n      isCurrentUser\\n      title\\n      __typename\\n    }\\n    fieldCount\\n    useCount\\n    __typename\\n  }\\n}\\n\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/synapse/approval/graphql",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"synapse",
								"approval",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "list Certified Entities",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"operationName\": \"getCertifiedEntities\",\r\n    \"variables\": {\r\n        \"type\": \"CC:CARD\", //CC:CARD or CC:DSET\r\n        \"first\": 100,\r\n        \"after\": null,\r\n        \"searchTerm\": \"\",\r\n        \"stateFilter\": \"EXPIRED\" //null, PENDING, EXPIRED, CERTIFIED, or REQUESTED\r\n    },\r\n    \"query\": \"\\nquery getCertifiedEntities(\\n  $type: String!\\n  $first: Int\\n  $after: ID\\n  $searchTerm: String\\n  $stateFilter: CertifyState\\n) {\\n  certifyEntitiesConnection(\\n    type: $type\\n    first: $first\\n    after: $after\\n    searchTerm: $searchTerm\\n    stateFilter: $stateFilter\\n  ) {\\n    edges {\\n      cursor\\n      node {\\n        id\\n        title\\n        entityType\\n        description\\n        processType\\n        previousActor {\\n          id\\n          type\\n          displayName\\n          ... on User {\\n            title\\n            avatarKey\\n            isCurrentUser\\n          }\\n          ... on Group {\\n            currentUserIsMember\\n            userCount\\n            isDeleted\\n          }\\n        }\\n        ownerEx {\\n          id\\n          type\\n          displayName\\n          ... on User {\\n            title\\n            avatarKey\\n            isCurrentUser\\n          }\\n          ... on Group {\\n            currentUserIsMember\\n            userCount\\n            isDeleted\\n          }\\n        }\\n        owners {\\n          id\\n          type\\n          displayName\\n          ... on User {\\n            title\\n            avatarKey\\n            isCurrentUser\\n          }\\n          ... on Group {\\n            currentUserIsMember\\n            userCount\\n            isDeleted\\n          }\\n        }\\n        lastUpdated\\n        views\\n        dateCertified\\n        certifyState\\n        certifyApprovalId\\n        provider\\n      }\\n    }\\n    pageInfo {\\n      hasNextPage\\n      endCursor\\n      startCursor\\n    }\\n  }\\n}\\n\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/synapse/approval/graphql",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"synapse",
								"approval",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Certification",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"operationName\": \"getCertificationDetails\",\r\n        \"variables\": {\r\n            \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n        },\r\n        \"query\": \"query getCertificationDetails($id: ID!) {\\n  certification(id: $id) {\\n    id\\n    request {\\n      id\\n      type\\n      status\\n      entityType\\n      entityId\\n      entityTitle\\n      entityOwnerEx {\\n        id\\n        type\\n        displayName\\n        ... on User {\\n          title\\n          avatarKey\\n          isCurrentUser\\n          __typename\\n        }\\n        ... on Group {\\n          currentUserIsMember\\n          userCount\\n          isDeleted\\n          __typename\\n        }\\n        __typename\\n      }\\n      entityOwners {\\n        id\\n        type\\n        displayName\\n        ... on User {\\n          title\\n          avatarKey\\n          isCurrentUser\\n          __typename\\n        }\\n        ... on Group {\\n          currentUserIsMember\\n          userCount\\n          isDeleted\\n          __typename\\n        }\\n        __typename\\n      }\\n      requestor {\\n        id\\n        displayName\\n        title\\n        avatarKey\\n        isCurrentUser\\n        isDeleted\\n        __typename\\n      }\\n      modifiedTime\\n      createdTime\\n      __typename\\n    }\\n    approval {\\n      id\\n      version\\n      type\\n      title\\n      status\\n      providerName\\n      templateTitle\\n      buzzChannelId\\n      buzzGeneralThreadId\\n      templateInstructions\\n      templateDescription\\n      total {\\n        value\\n        currency\\n        __typename\\n      }\\n      modifiedTime\\n      previousApprover: previousApproverEx {\\n        id\\n        type\\n        displayName\\n        ... on User {\\n          title\\n          avatarKey\\n          isCurrentUser\\n          __typename\\n        }\\n        ... on Group {\\n          currentUserIsMember\\n          userCount\\n          isDeleted\\n          actor {\\n            displayName\\n            id\\n            __typename\\n          }\\n          __typename\\n        }\\n        __typename\\n      }\\n      pendingApprover: pendingApproverEx {\\n        id\\n        type\\n        displayName\\n        ... on User {\\n          title\\n          avatarKey\\n          isCurrentUser\\n          __typename\\n        }\\n        ... on Group {\\n          userCount\\n          isDeleted\\n          currentUserIsMember\\n          __typename\\n        }\\n        __typename\\n      }\\n      submitter {\\n        id\\n        displayName\\n        title\\n        avatarKey\\n        isCurrentUser\\n        __typename\\n      }\\n      approvalChainIdx\\n      chain {\\n        actor {\\n          displayName\\n          __typename\\n        }\\n        approver {\\n          id\\n          type\\n          displayName\\n          ... on User {\\n            title\\n            avatarKey\\n            isCurrentUser\\n            __typename\\n          }\\n          ... on Group {\\n            userCount\\n            isDeleted\\n            __typename\\n          }\\n          __typename\\n        }\\n        status\\n        time\\n        type\\n        key\\n        __typename\\n      }\\n      observers {\\n        id\\n        type\\n        displayName\\n        avatarKey\\n        title\\n        ... on Group {\\n          userCount\\n          __typename\\n        }\\n        __typename\\n      }\\n      fields {\\n        type\\n        name\\n        data\\n        key\\n        ... on NumberField {\\n          value\\n          __typename\\n        }\\n        ... on CurrencyField {\\n          number: value\\n          currency\\n          __typename\\n        }\\n        ... on DateField {\\n          date: value\\n          __typename\\n        }\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/synapse/approval/graphql",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"synapse",
								"approval",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Certification Template",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"operationName\": \"getCertifiedTemplate\",\r\n        \"variables\": {\r\n            \"type\": \"CARD\", //CARD or DATASET\r\n            \"templateId\": \"00000000-0000-0000-0000-000000000000\",\r\n            \"id\": 123456,\r\n            \"title\": \"<string>\"\r\n        },\r\n        \"query\": \"query getCertifiedTemplate($templateId: ID, $type: CertifyType!, $id: ID, $title: String) {\\n  companyName\\n  template: certifyTemplate(templateId: $templateId, type: $type, id: $id, title: $title) {\\n    id\\n    type\\n    title\\n    titleName\\n    titleData\\n    titlePlaceholder\\n    instructions\\n    description\\n    providerName\\n    isPublic\\n    chainIsLocked\\n    owner {\\n      id\\n      displayName\\n      avatarKey\\n      __typename\\n    }\\n    fields {\\n      key\\n      type\\n      name\\n      data\\n      placeholder\\n      required\\n      disabled\\n      __typename\\n    }\\n    approvers {\\n      type\\n      originalType: type\\n      key\\n      ... on ApproverPerson {\\n        id: approverId\\n        approverId\\n        userDetails {\\n          id\\n          displayName\\n          title\\n          avatarKey\\n          __typename\\n        }\\n        __typename\\n      }\\n      ... on ApproverGroup {\\n        id: approverId\\n        approverId\\n        groupDetails {\\n          id\\n          displayName\\n          userCount\\n          isDeleted\\n          __typename\\n        }\\n        __typename\\n      }\\n      ... on ApproverPlaceholder {\\n        placeholderText\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/synapse/approval/graphql",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"synapse",
								"approval",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Certification ID from Approval ID",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"operationName\": \"getCertificationIdFromApprovalId\",\r\n        \"variables\": {\r\n            \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n        },\r\n        \"query\": \"query getCertificationIdFromApprovalId($id: ID!) {\\n  certificationId: certificationByApprovalId(id: $id) {\\n    id\\n    __typename\\n  }\\n}\\n\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/synapse/approval/graphql",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"synapse",
								"approval",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Entity Access",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"operationName\": \"checkEntityAccess\",\r\n        \"variables\": {\r\n            \"entityType\": \"CARD\", //CARD or DATASET\r\n            \"entityId\": 123456, //Card or DataSet ID\r\n            \"approvers\": [\r\n                {\r\n                    \"type\": \"GROUP\",\r\n                    \"originalType\": \"GROUP\",\r\n                    \"key\": \"00000000-0000-0000-0000-000000000000\",\r\n                    \"id\": \"12345\",\r\n                    \"approverId\": \"12345\",\r\n                    \"groupDetails\": {\r\n                        \"id\": \"12345\",\r\n                        \"displayName\": \"<string>\",\r\n                        \"userCount\": 11, //For GROUP\r\n                        \"isDeleted\": false,\r\n                        \"__typename\": \"Group\" //Group or User\r\n                    },\r\n                    \"__typename\": \"ApproverGroup\"\r\n                }\r\n            ]\r\n        },\r\n        \"query\": \"query checkEntityAccess($entityId: ID!, $entityType: CertifyType!, $approvers: [ApproverInput!]!) {\\n  isEntityAccessGranted(entityId: $entityId, entityType: $entityType, approvers: $approvers) {\\n    deniedUsers {\\n      type\\n      id\\n      displayName\\n      ... on User {\\n        title\\n        avatarKey\\n        isCurrentUser\\n        __typename\\n      }\\n      __typename\\n    }\\n    deniedGroups {\\n      id\\n      type\\n      displayName\\n      ... on Group {\\n        userCount\\n        isDeleted\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/synapse/approval/graphql",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"synapse",
								"approval",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Waiting on Me Count",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"operationName\": \"getWaitingOnMeCount\",\r\n        \"variables\": {\r\n            \"type\": \"CC\"\r\n        },\r\n        \"query\": \"query getWaitingOnMeCount($type: String = \\\"CC\\\") {\\n  count: waitingOnMeCount(type: $type)\\n}\\n\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/synapse/approval/graphql",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"synapse",
								"approval",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Certification Expire on Edit",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/customer/v1/properties/:type",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customer",
								"v1",
								"properties",
								":type"
							],
							"variable": [
								{
									"key": "type",
									"value": "content.certification.card.expire.on.edit",
									"description": "content.certification.<card or dataset>.expire.on.edit"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Certification",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"operationName\": \"newApproval\",\r\n        \"variables\": {\r\n            \"request\": {\r\n                \"templateId\": \"00000000-0000-0000-0000-000000000000\",\r\n                \"title\": \"<card_or_dataset_name>\",\r\n                \"fields\": [\r\n                    {\r\n                        \"key\": \"00000000-0000-0000-0000-000000000000\",\r\n                        \"type\": \"ATTACHMENT\",\r\n                        \"name\": \"Card to certify\",\r\n                        \"data\": \"CARD:1234\",\r\n                        \"placeholder\": null,\r\n                        \"required\": true,\r\n                        \"disabled\": false,\r\n                        \"attachmentName\": \"<string>\", \r\n                        \"__typename\": \"CardAttachmentField\"\r\n                    }\r\n                ],\r\n                \"approvers\": [\r\n                    {\r\n                        \"approverId\": 123456, \r\n                        \"id\": 123456, \r\n                        \"originalType\": \"PERSON\",\r\n                        \"type\": \"PERSON\",\r\n                        \"userDetails\": {\r\n                            \"displayName\": \"<string>\",\r\n                            \"id\": 123456\r\n                        }\r\n                    }\r\n                ],\r\n                \"attachments\": []\r\n            },\r\n            \"adminCertified\": true\r\n        },\r\n        \"query\": \"mutation newApproval($request: ApprovalRequest!, $adminCertified: Boolean) {\\n  approval: submitRequest(request: $request, adminCertified: $adminCertified) {\\n    id\\n    type\\n    submittedTime\\n    modifiedTime\\n    status\\n    title\\n    providerName\\n    templateTitle\\n    amount\\n    version\\n    attachmentsCount\\n    submitter {\\n      id\\n      displayName\\n      __typename\\n    }\\n    observers {\\n      id\\n      type\\n      displayName\\n      __typename\\n    }\\n    history {\\n      actor {\\n        type\\n        id\\n        displayName\\n        ... on User {\\n          avatarKey\\n          __typename\\n        }\\n        __typename\\n      }\\n      status\\n      time\\n      __typename\\n    }\\n    fields {\\n      data\\n      name\\n      type\\n      key\\n      ... on HeaderField {\\n        fields {\\n          data\\n          name\\n          type\\n          key\\n          ... on HeaderField {\\n            fields {\\n              data\\n              name\\n              type\\n              key\\n              __typename\\n            }\\n            __typename\\n          }\\n          __typename\\n        }\\n        __typename\\n      }\\n      ... on ItemListField {\\n        fields {\\n          data\\n          name\\n          type\\n          key\\n          ... on HeaderField {\\n            fields {\\n              data\\n              name\\n              type\\n              key\\n              ... on HeaderField {\\n                fields {\\n                  data\\n                  name\\n                  type\\n                  key\\n                  __typename\\n                }\\n                __typename\\n              }\\n              __typename\\n            }\\n            __typename\\n          }\\n          __typename\\n        }\\n        __typename\\n      }\\n      ... on NumberField {\\n        value\\n        __typename\\n      }\\n      ... on CurrencyField {\\n        number: value\\n        currency\\n        __typename\\n      }\\n      ... on DateField {\\n        date: value\\n        __typename\\n      }\\n      ... on DataSetAttachmentField {\\n        dataSet: value {\\n          id\\n          name\\n          description\\n          owner {\\n            id\\n            displayName\\n            __typename\\n          }\\n          provider\\n          cardCount\\n          __typename\\n        }\\n        __typename\\n      }\\n      __typename\\n    }\\n    pendingApprover: pendingApproverEx {\\n      id\\n      type\\n      displayName\\n      ... on User {\\n        title\\n        avatarKey\\n        isCurrentUser\\n        __typename\\n      }\\n      ... on Group {\\n        userCount\\n        isDeleted\\n        currentUserIsMember\\n        __typename\\n      }\\n      __typename\\n    }\\n    chain {\\n      actor {\\n        displayName\\n        __typename\\n      }\\n      approver {\\n        id\\n        type\\n        displayName\\n        ... on User {\\n          title\\n          avatarKey\\n          isCurrentUser\\n          __typename\\n        }\\n        ... on Group {\\n          userCount\\n          isDeleted\\n          __typename\\n        }\\n        __typename\\n      }\\n      status\\n      time\\n      type\\n      key\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/synapse/approval/graphql",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"synapse",
								"approval",
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Certification",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"operationName\": \"remove\",\r\n        \"variables\": {\r\n            \"type\": \"CARD\", //CARD or DATASET\r\n            \"id\": \"12345\"\r\n        },\r\n        \"query\": \"mutation remove($type: CertifyType!, $id: ID!) {\\n  removeCertification(type: $type, id: $id)\\n}\\n\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/synapse/approval/graphql",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"synapse",
								"approval",
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"description": "[Certification Official Documentation](https://domo-support.domo.com/s/article/360043430613?language=en_US)"
		},
		{
			"name": "Code Engine",
			"item": [
				{
					"name": "list Packages",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"query\": \"*\",\r\n    \"entityList\": [\r\n        [\r\n            \"package\"\r\n        ]\r\n    ],\r\n    \"count\": 10000,\r\n    \"offset\": 0,\r\n    \"sort\": {\r\n        \"isRelevance\": true,\r\n        \"fieldSorts\": [\r\n            {\r\n                \"field\": \"lastModified\",\r\n                \"sortOrder\": \"DESC\"\r\n            }\r\n        ]\r\n    },\r\n    \"filters\": [],\r\n    \"useEntities\": true,\r\n    \"combineResults\": true,\r\n    \"facetValueLimit\": 1000,\r\n    \"hideSearchObjects\": false,\r\n    \"state\": \"facet\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/search/v1/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"v1",
								"query"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Package",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/codeengine/v2/packages/:id/versions/:version?parts=functions,code",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"codeengine",
								"v2",
								"packages",
								":id",
								"versions",
								":version"
							],
							"query": [
								{
									"key": "parts",
									"value": "functions,code"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Code Engine Package UUID"
								},
								{
									"key": "version",
									"value": "1.0.0",
									"description": "Version Number"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Run Function",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"inputVariables\": {\r\n        \"<variable1>\": \"<input>\"\r\n    },\r\n    \"settings\": {\r\n        \"getLogs\": true\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/codeengine/v2/packages/:id/versions/:version/functions/:function",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"codeengine",
								"v2",
								"packages",
								":id",
								"versions",
								":version",
								"functions",
								":function"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Code Engine Package UUID"
								},
								{
									"key": "version",
									"value": "1.0.0",
									"description": "Version Number"
								},
								{
									"key": "function",
									"value": "main",
									"description": "Function Name"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Release (Deploy)",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/codeengine/v2/packages/:id/versions/:version/release",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"codeengine",
								"v2",
								"packages",
								":id",
								"versions",
								":version",
								"release"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Code Engine Package UUID"
								},
								{
									"key": "version",
									"value": "1.0.0",
									"description": "Version Number"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Package",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"<string>\",\r\n    \"version\": \"1.0.0\",\r\n    \"code\": \"<javascript_or_python_code>\",\r\n    \"environment\": \"LAMBDA\",\r\n    \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"language\": \"JAVASCRIPT\",\r\n    \"manifest\": {\r\n        \"functions\": [\r\n            {\r\n                \"editorStartIndex\": 1234,\r\n                \"displayName\": \"<function_name>\",\r\n                \"output\": null,\r\n                \"name\": \"<function_name>\",\r\n                \"variables\": [],\r\n                \"description\": \"\",\r\n                \"inputs\": [\r\n                    {\r\n                        \"defaultValues\": null,\r\n                        \"isList\": false,\r\n                        \"name\": \"<input_name>\",\r\n                        \"type\": \"text\",\r\n                        \"value\": null,\r\n                        \"displayName\": \"<input_name>\",\r\n                        \"nullable\": true,\r\n                        \"children\": []\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"configuration\": {\r\n            \"accountsMapping\": [\r\n                {\r\n                    \"accountId\": 123,\r\n                    \"alias\": \"123\"\r\n                },\r\n                {\r\n                    \"accountId\": 234,\r\n                    \"alias\": \"234\"\r\n                }\r\n            ]\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/codeengine/v2/packages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"codeengine",
								"v2",
								"packages"
							]
						}
					},
					"response": []
				}
			],
			"description": "[Code Engine Official Documentation](https://domo-support.domo.com/s/article/000005173?language=en_US)"
		},
		{
			"name": "Company",
			"item": [
				{
					"name": "list Customer Stats",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/query/v1/datasources/customer-stats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query",
								"v1",
								"datasources",
								"customer-stats"
							]
						}
					},
					"response": []
				},
				{
					"name": "list Time Zones",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/dataprocessing/v1/dataflows/timezones",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dataprocessing",
								"v1",
								"dataflows",
								"timezones"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Settings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{instanceUrl}}/companysettings",
							"host": [
								"{{instanceUrl}}"
							],
							"path": [
								"companysettings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Locale",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/customer-states/locale?ignoreCache=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"customer-states",
								"locale"
							],
							"query": [
								{
									"key": "ignoreCache",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Customer State",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/customer-states/:customerState?ignoreCache=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"customer-states",
								":customerState"
							],
							"query": [
								{
									"key": "ignoreCache",
									"value": "true"
								}
							],
							"variable": [
								{
									"key": "customerState",
									"value": "domo.globalization.defaultTimeZone",
									"description": "Possible values found so far: domo.globalization.defaultTimeZone, card.beastModeCalculationOnDataSet.default"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Property",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/customer/v1/properties/:property",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customer",
								"v1",
								"properties",
								":property"
							],
							"variable": [
								{
									"key": "property",
									"value": "card.hide_share_email_ui"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Licenses",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/licenses/total/current",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"licenses",
								"total",
								"current"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Jupyter Settings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/datascience/v1/settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"datascience",
								"v1",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Credits",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/metrics/v1/usage/credits/contract/current/summary",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metrics",
								"v1",
								"usage",
								"credits",
								"contract",
								"current",
								"summary"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Property",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"keyspace\": \"domo\",\r\n    \"issuer\": \"DEFAULT_VALUE\",\r\n    \"entityId\": \"{{instance}}\",\r\n    \"key\": \"card.hide_share_email_ui\",\r\n    \"value\": \"true\",\r\n    \"values\": [\r\n        \"true\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/customer/v1/properties/:property",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customer",
								"v1",
								"properties",
								":property"
							],
							"variable": [
								{
									"key": "property",
									"value": "card.hide_share_email_ui"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "[Consumption Official Terms](https://www.domo.com/consumption-terms)\n\n[Credits Official Documentation](https://domo-support.domo.com/s/topic/0TOVq0000008ehpOAA/consumption-agreements?language=en_US)"
		},
		{
			"name": "Credits",
			"item": [
				{
					"name": "Get Credit Usage Report by Month",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/metrics/v1/usage/credits/reports/usage?startDate=&endDate=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metrics",
								"v1",
								"usage",
								"credits",
								"reports",
								"usage"
							],
							"query": [
								{
									"key": "startDate",
									"value": "",
									"description": "YYYY-MM-dd"
								},
								{
									"key": "endDate",
									"value": "",
									"description": "YYYY-MM-dd"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Subscription Page/Contract Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/metrics/v1/usage/credits/reports/subscription",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metrics",
								"v1",
								"usage",
								"credits",
								"reports",
								"subscription"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Credit Balance/Statements",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/metrics/v1/usage/credits/reports/balance",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metrics",
								"v1",
								"usage",
								"credits",
								"reports",
								"balance"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DataFlows",
			"item": [
				{
					"name": "list DataFlows",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/dataprocessing/v2/dataflows",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dataprocessing",
								"v2",
								"dataflows"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search DataFlows",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"entities\": [\r\n        \"DATAFLOW\"\r\n    ],\r\n    \"filters\": [\r\n        {\r\n            \"field\": \"name_sort\",\r\n            \"filterType\": \"wildcard\",\r\n            \"query\": \"*<query>*\"\r\n        }\r\n    ],\r\n    \"combineResults\": true,\r\n    \"query\": \"*\",\r\n    \"count\": 100,\r\n    \"offset\": 0,\r\n    \"sort\": {\r\n        \"isRelevance\": false,\r\n        \"fieldSorts\": [\r\n            {\r\n                \"field\": \"create_date\",\r\n                \"sortOrder\": \"DESC\"\r\n            }\r\n        ]\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/search/v1/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"v1",
								"query"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DataFlow",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/dataprocessing/v2/dataflows/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dataprocessing",
								"v2",
								"dataflows",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "DataFlow ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "list DataFlow Versions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/dataprocessing/v1/dataflows/:id/versions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dataprocessing",
								"v1",
								"dataflows",
								":id",
								"versions"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "DataFlow ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DataFlow Version",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/dataprocessing/v2/dataflows/:dataflowId/versions/:versionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dataprocessing",
								"v2",
								"dataflows",
								":dataflowId",
								"versions",
								":versionId"
							],
							"variable": [
								{
									"key": "dataflowId",
									"value": "",
									"description": "DataFlow ID"
								},
								{
									"key": "versionId",
									"value": "",
									"description": "Version ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DataFlow Executions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/dataprocessing/v1/dataflows/:id/executions?limit=100&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dataprocessing",
								"v1",
								"dataflows",
								":id",
								"executions"
							],
							"query": [
								{
									"key": "limit",
									"value": "100"
								},
								{
									"key": "offset",
									"value": "0"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "DataFlow ID"
								}
							]
						},
						"description": "Can't get history for DataFlows that have been deleted. DomoStats can for some reason."
					},
					"response": []
				},
				{
					"name": "Get Saved Datacenter Filters",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/search/v1/saved?queryProfile=datacenter",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"v1",
								"saved"
							],
							"query": [
								{
									"key": "queryProfile",
									"value": "datacenter"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Timezones",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/dataprocessing/v1/dataflows/timezones",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dataprocessing",
								"v1",
								"dataflows",
								"timezones"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SQL Functions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/dataprocessing/v1/expression-docs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dataprocessing",
								"v1",
								"expression-docs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Count DataFlows by Type",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/dataprocessing/v2/dataflows/filters/dataflowType",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dataprocessing",
								"v2",
								"dataflows",
								"filters",
								"dataflowType"
							]
						}
					},
					"response": []
				},
				{
					"name": "Run DataFlow",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/dataprocessing/v1/dataflows/:id/executions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dataprocessing",
								"v1",
								"dataflows",
								":id",
								"executions"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "DataFlow ID"
								}
							]
						},
						"description": "Uses DataFlow ID in the URL, cannot be DAP DataFlow ID (a.k.a. GUID)."
					},
					"response": []
				},
				{
					"name": "Run Preview",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"databaseType\": \"MAGIC\",\r\n    \"engineProperties\": {\r\n        \"kettle.mode\": \"STRICT\"\r\n    },\r\n    \"actions\": [],\r\n    \"settings\": {\r\n        \"zoneId\": \"UTC\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dataprocessing/v1/dataflows/previews/run",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dataprocessing",
								"v1",
								"dataflows",
								"previews",
								"run"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create DataFlow",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"<string>\",\r\n    \"actions\": [\r\n        {\r\n            \"type\": \"LoadFromVault\",\r\n            \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n            \"name\": \"<string>\",\r\n            \"settings\": {},\r\n            \"gui\": {\r\n                \"x\": 123,\r\n                \"y\": 123,\r\n                \"color\": 3238043,\r\n                \"colorSource\": null,\r\n                \"sampleJson\": null\r\n            },\r\n            \"dataSourceId\": \"00000000-0000-0000-0000-000000000000\",\r\n            \"executeFlowWhenUpdated\": false,\r\n            \"pseudoDataSource\": false,\r\n            \"truncateTextColumns\": false,\r\n            \"truncateRows\": false,\r\n            \"onlyLoadNewVersions\": false,\r\n            \"recentVersionCutoffMs\": 0,\r\n            \"versionWindow\": {\r\n                \"type\": \"NEW\"\r\n            }\r\n        }\r\n    ],\r\n    \"engineProperties\": {\r\n        \"kettle.mode\": \"STRICT\"\r\n    },\r\n    \"gui\": {\r\n        \"version\": \"1.0\",\r\n        \"canvases\": {\r\n            \"default\": {\r\n                \"canvasSettings\": {\r\n                    \"coarserGrid\": true,\r\n                    \"backgroundVariant\": \"Lines\"\r\n                },\r\n                \"elements\": [\r\n                    {\r\n                        \"type\": \"Tile\",\r\n                        \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n                        \"x\": 123,\r\n                        \"y\": 123,\r\n                        \"color\": 3238043,\r\n                        \"colorSource\": null,\r\n                        \"sampleJson\": null\r\n                    },\r\n                    {\r\n                        \"type\": \"Tile\",\r\n                        \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n                        \"x\": 123,\r\n                        \"y\": 123,\r\n                        \"color\": null,\r\n                        \"colorSource\": null,\r\n                        \"sampleJson\": null\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    \"inputs\": [],\r\n    \"outputs\": [],\r\n    \"useLegacyTriggerBehavior\": false,\r\n    \"passwordProtected\": false,\r\n    \"abandoned\": false,\r\n    \"neverAbandon\": false,\r\n    \"settings\": {\r\n        \"zoneId\": \"UTC\"\r\n    },\r\n    \"triggerSettings\": {\r\n        \"triggers\": [\r\n            {\r\n                \"title\": \"<string>\",\r\n                \"triggerEvents\": [\r\n                    {\r\n                        \"datasetId\": \"00000000-0000-0000-0000-000000000000\",\r\n                        \"triggerOnDataChanged\": false,\r\n                        \"type\": \"DATASET_UPDATED\"\r\n                    }\r\n                ],\r\n                \"triggerConditions\": [],\r\n                \"triggerId\": 1\r\n            }\r\n        ],\r\n        \"zoneId\": \"UTC\",\r\n        \"locale\": \"en_US\"\r\n    },\r\n    \"paused\": false,\r\n    \"enabled\": true,\r\n    \"restricted\": false,\r\n    \"container\": false,\r\n    \"databaseType\": \"MAGIC\",\r\n    \"triggeredByInput\": false,\r\n    \"draft\": false,\r\n    \"editable\": true,\r\n    \"magic\": true,\r\n    \"subsetProcessing\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dataprocessing/v1/dataflows",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dataprocessing",
								"v1",
								"dataflows"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update DataFlow",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (parseInt(pm.request.url.variables.get('id')) !== JSON.parse(pm.request.body.raw).id) {\r",
									"    throw new Error('The URL parameter and body property for \"id\" don\\'t match. Adjust them to match each other and try again.')\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1234,\r\n    \"name\": \"<string>\",\r\n    \"dapDataFlowId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"responsibleUserId\": 123456,\r\n    \"runState\": \"ENABLED\",\r\n    \"gui\": {\r\n        \"version\": \"1.0\",\r\n        \"canvases\": {\r\n            \"default\": {\r\n                \"canvasSettings\": {\r\n                    \"coarserGrid\": true,\r\n                    \"backgroundVariant\": \"Lines\"\r\n                },\r\n                \"elements\": [\r\n                    {\r\n                        \"type\": \"Tile\",\r\n                        \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n                        \"x\": 123,\r\n                        \"y\": 123,\r\n                        \"color\": 3238043,\r\n                        \"colorSource\": null,\r\n                        \"sampleJson\": null\r\n                    },\r\n                    {\r\n                        \"type\": \"Tile\",\r\n                        \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n                        \"x\": 123,\r\n                        \"y\": 123,\r\n                        \"color\": null,\r\n                        \"colorSource\": null,\r\n                        \"sampleJson\": null\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    \"actions\": [\r\n        {\r\n            \"type\": \"LoadFromVault\",\r\n            \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n            \"name\": \"<string>\",\r\n            \"settings\": {},\r\n            \"gui\": {\r\n                \"x\": 123,\r\n                \"y\": 123,\r\n                \"color\": 3238043,\r\n                \"colorSource\": null,\r\n                \"sampleJson\": null\r\n            },\r\n            \"dataSourceId\": \"00000000-0000-0000-0000-000000000000\",\r\n            \"executeFlowWhenUpdated\": false,\r\n            \"pseudoDataSource\": false,\r\n            \"truncateTextColumns\": false,\r\n            \"truncateRows\": false,\r\n            \"onlyLoadNewVersions\": true,\r\n            \"recentVersionCutoffMs\": 0,\r\n            \"versionWindow\": {\r\n                \"type\": \"NEW\"\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"ExpressionEvaluator\",\r\n            \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n            \"name\": \"<string>\",\r\n            \"dependsOn\": [\r\n                \"00000000-0000-0000-0000-000000000000\"\r\n            ],\r\n            \"settings\": {},\r\n            \"gui\": {\r\n                \"x\": 123,\r\n                \"y\": 123,\r\n                \"color\": null,\r\n                \"colorSource\": null,\r\n                \"sampleJson\": null\r\n            },\r\n            \"expressions\": [\r\n                {\r\n                    \"expression\": \"<sql>\",\r\n                    \"fieldName\": \"<string>\",\r\n                    \"settings\": {}\r\n                }\r\n            ],\r\n            \"columnSettings\": {\r\n                \"<field1>\": {}\r\n            }\r\n        }\r\n    ],\r\n    \"engineProperties\": {\r\n        \"kettle.mode\": \"STRICT\"\r\n    },\r\n    \"inputs\": [\r\n        {\r\n            \"dataSourceId\": \"00000000-0000-0000-0000-000000000000\",\r\n            \"executeFlowWhenUpdated\": false,\r\n            \"dataSourceName\": \"<string>\",\r\n            \"onlyLoadNewVersions\": false,\r\n            \"recentVersionCutoffMs\": 0\r\n        }\r\n    ],\r\n    \"outputs\": [\r\n        {\r\n            \"onboardFlowId\": null,\r\n            \"dataSourceId\": \"00000000-0000-0000-0000-000000000000\",\r\n            \"dataSourceName\": \"<string>\",\r\n            \"versionChainType\": \"UPSERT\"\r\n        }\r\n    ],\r\n    \"hydrationState\": \"DEHYDRATED\",\r\n    \"useLegacyTriggerBehavior\": false,\r\n    \"passwordProtected\": false,\r\n    \"deleted\": false,\r\n    \"abandoned\": false,\r\n    \"neverAbandon\": false,\r\n    \"settings\": {},\r\n    \"triggerSettings\": {\r\n        \"triggers\": [\r\n            {\r\n                \"title\": \"<string>\",\r\n                \"triggerEvents\": [\r\n                    {\r\n                        \"datasetId\": \"00000000-0000-0000-0000-000000000000\",\r\n                        \"triggerOnDataChanged\": false,\r\n                        \"type\": \"DATASET_UPDATED\"\r\n                    }\r\n                ],\r\n                \"triggerConditions\": [],\r\n                \"triggerId\": 1\r\n            }\r\n        ],\r\n        \"zoneId\": \"UTC\",\r\n        \"locale\": \"en_US\"\r\n    },\r\n    \"paused\": false,\r\n    \"enabled\": true,\r\n    \"draft\": false,\r\n    \"triggeredByInput\": false,\r\n    \"onboardFlowVersion\": {\r\n        \"id\": 12345,\r\n        \"timeStamp\": 1742241147000,\r\n        \"authorId\": 123456,\r\n        \"description\": \"<string>\",\r\n        \"numInputs\": 1,\r\n        \"numOutputs\": 1,\r\n        \"executionCount\": 1,\r\n        \"executionSuccessCount\": 1,\r\n        \"versionNumber\": 1\r\n    },\r\n    \"numInputs\": 1,\r\n    \"numOutputs\": 1,\r\n    \"magic\": true,\r\n    \"restricted\": false,\r\n    \"subsetProcessing\": true,\r\n    \"container\": false,\r\n    \"databaseType\": \"MAGIC\",\r\n    \"editable\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dataprocessing/v1/dataflows/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dataprocessing",
								"v1",
								"dataflows",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "DataFlow ID"
								}
							]
						},
						"description": "Use the [Get DataFlow](https://opsanglepoint.postman.co/workspace/Team-Workspace~43b45cca-8793-4594-81ab-7afb7e2e8a3d/request/19448389-140d0652-e74d-49ff-a9c0-eb33542b11e9?ctx=documentation) request first, use its response as the body of the request. All fields must be included, if you aren't modifying them just leave them as their original value from the GET request."
					},
					"response": []
				},
				{
					"name": "Update DataFlow Owner",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"responsibleUserId\": 1234\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/dataprocessing/v1/dataflows/:id/patch",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dataprocessing",
								"v1",
								"dataflows",
								":id",
								"patch"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "DataFlow ID"
								}
							]
						},
						"description": "Use the [Get DataFlow](https://opsanglepoint.postman.co/workspace/Team-Workspace~43b45cca-8793-4594-81ab-7afb7e2e8a3d/request/19448389-140d0652-e74d-49ff-a9c0-eb33542b11e9?ctx=documentation) request first, use its response as the body of the request. All fields must be included, if you aren't modifying them just leave them as their original value from the GET request."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"responsibleUserId\": 1813188617\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/dataprocessing/v1/dataflows/:id/patch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"dataprocessing",
										"v1",
										"dataflows",
										":id",
										"patch"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "DataFlow ID"
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 123,\n    \"name\": \"<string>\",\n    \"dapDataFlowId\": \"00000000-0000-0000-0000-000000000000\",\n    \"responsibleUserId\": 1234,\n    \"runState\": \"ENABLED\",\n    \"created\": 1735689600000,\n    \"modified\": 1735689600000,\n    \"inputs\": [\n        {\n            \"dataSourceId\": \"00000000-0000-0000-0000-000000000000\",\n            \"dataSourceName\": \"<string>\",\n            \"onlyLoadNewVersions\": false\n        }\n    ],\n    \"outputs\": [\n        {\n            \"onboardFlowId\": null,\n            \"dataSourceId\": \"00000000-0000-0000-0000-000000000000\",\n            \"dataSourceName\": \"<string>\",\n            \"versionChainType\": \"REPLACE\"\n        }\n    ],\n    \"executionCount\": 0,\n    \"executionSuccessCount\": 0,\n    \"hydrationState\": \"DEHYDRATED\",\n    \"tags\": [\n        \"<string>\"\n    ],\n    \"useLegacyTriggerBehavior\": false,\n    \"passwordProtected\": false,\n    \"deleted\": false,\n    \"abandoned\": false,\n    \"neverAbandon\": false,\n    \"paused\": false,\n    \"enabled\": true,\n    \"onboardFlowVersion\": {\n        \"id\": 123,\n        \"timeStamp\": 1735689600000,\n        \"authorId\": 1234,\n        \"numInputs\": 1,\n        \"numOutputs\": 1,\n        \"executionCount\": 0,\n        \"executionSuccessCount\": 0,\n        \"versionNumber\": 8\n    },\n    \"databaseType\": \"ETL\",\n    \"editable\": false,\n    \"draft\": false,\n    \"triggeredByInput\": false,\n    \"numInputs\": 1,\n    \"numOutputs\": 1,\n    \"magic\": false,\n    \"restricted\": false,\n    \"subsetProcessing\": false,\n    \"container\": false\n}"
						}
					]
				}
			],
			"description": "[Transform Data Official Documentation](https://domo-support.domo.com/s/topic/0TO5w000000ZamzGAC/transform-data-in-domo?language=en_US)"
		},
		{
			"name": "DataSets and Streams",
			"item": [
				{
					"name": "AI Readiness/Data Dictionary",
					"item": [
						{
							"name": "Get Data Dictionary",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/ai/readiness/v1/data-dictionary/dataset/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ai",
										"readiness",
										"v1",
										"data-dictionary",
										"dataset",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "DataSet UUID"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Data Dictionary",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"datasetId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"name\": \"<string>\",\r\n    \"description\": \"<string>\",\r\n    \"unitOfAnalysis\": \"\",\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"Column 1\",\r\n            \"description\": \"<string>\",\r\n            \"synonyms\": [],\r\n            \"subType\": {\r\n                \"type\": null,\r\n                \"defaultAggregation\": null\r\n            },\r\n            \"agentEnabled\": true,\r\n            \"beastmodeId\": null\r\n        },\r\n        {\r\n            \"name\": \"Column 2\",\r\n            \"description\": \"<string>\",\r\n            \"synonyms\": [],\r\n            \"subType\": {\r\n                \"type\": null,\r\n                \"defaultAggregation\": null\r\n            },\r\n            \"agentEnabled\": true,\r\n            \"beastmodeId\": null\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ai/readiness/v1/data-dictionary/dataset/:datasetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ai",
										"readiness",
										"v1",
										"data-dictionary",
										"dataset",
										":datasetId"
									],
									"variable": [
										{
											"key": "datasetId",
											"value": "",
											"description": "DataSet UUID"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Data Dictionary",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"datasetId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"name\": \"<string>\",\r\n    \"description\": \"<string>\",\r\n    \"columns\": [\r\n        {\r\n            \"columnId\": \"00000000-0000-0000-0000-000000000000\",\r\n            \"name\": \"Column 1\",\r\n            \"description\": \"<string>\",\r\n            \"synonyms\": [],\r\n            \"subType\": {\r\n                \"type\": null,\r\n                \"defaultAggregation\": null\r\n            },\r\n            \"agentEnabled\": true\r\n        },\r\n        {\r\n            //columnId can be excluded to create/add\r\n            \"name\": \"Column 2\",\r\n            \"description\": \"<string>\",\r\n            \"synonyms\": [],\r\n            \"subType\": {\r\n                \"type\": null,\r\n                \"defaultAggregation\": null\r\n            },\r\n            \"agentEnabled\": true\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/ai/readiness/v1/data-dictionary/dataset/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ai",
										"readiness",
										"v1",
										"data-dictionary",
										"dataset",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "DataSet UUID"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "[AI Readiness Official Documentation](https://domo-support.domo.com/s/article/000005561?language=en_US)"
				},
				{
					"name": "Data Repair",
					"item": [
						{
							"name": "list Data Versions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/data/v3/datasources/:datasetId/dataversions/details?limit=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"datasources",
										":datasetId",
										"dataversions",
										"details"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										}
									],
									"variable": [
										{
											"key": "datasetId",
											"value": "",
											"description": "DataSet UUID"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Data Version",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/data/v2/datasources/:datasetId/dataversions/:versionId?excludeAppendedData=true&rowLimit=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data",
										"v2",
										"datasources",
										":datasetId",
										"dataversions",
										":versionId"
									],
									"query": [
										{
											"key": "excludeAppendedData",
											"value": "true",
											"description": "Whether to return all data appended to the DataSet up to this version, or just the data from this version."
										},
										{
											"key": "rowLimit",
											"value": "10"
										}
									],
									"variable": [
										{
											"key": "datasetId",
											"value": ""
										},
										{
											"key": "versionId",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Insert Data Version",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "file",
									"file": {
										"src": ""
									}
								},
								"url": {
									"raw": "{{baseUrl}}/data/v3/datasources/:datasetId/dataversions?repairDataVersionId=10&repairAction=INSERT_AFTER",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"datasources",
										":datasetId",
										"dataversions"
									],
									"query": [
										{
											"key": "repairDataVersionId",
											"value": "10",
											"description": "Version ID"
										},
										{
											"key": "repairAction",
											"value": "INSERT_AFTER",
											"description": "INSERT_ON won't also remove the version it is replacing, you must then delete it."
										}
									],
									"variable": [
										{
											"key": "datasetId",
											"value": "",
											"description": "DataSet UUID"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Bulk Delete Data Versions",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    1,\r\n    2,\r\n    3,\r\n    4\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/data/v2/datasources/:datasetId/dataversions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data",
										"v2",
										"datasources",
										":datasetId",
										"dataversions"
									],
									"variable": [
										{
											"key": "datasetId",
											"value": "",
											"description": "DataSet UUID"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "Data Repair is a secret feature with no official documentation. It adds a tab to the DataSet web page that allows you to create, download, edit, and delete versions of data in a DataSet.\n\nAdd this to the end of a DataSet URL to enable the feature:\n\n`?_f=dataRepair`\n\nTo disable after you are done, add this to the end of the DataSet URL instead:\n\n`?-_f=dataRepair`\n\nWhen removing, you may have to wait a few minutes or clear your cache to get the Data Repair tab to disappear."
				},
				{
					"name": "PDP",
					"item": [
						{
							"name": "Column PDP",
							"item": [
								{
									"name": "Get Column PDP Policies",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/query/v2/data-control/:datasetId/policy-group",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												"v2",
												"data-control",
												":datasetId",
												"policy-group"
											],
											"variable": [
												{
													"key": "datasetId",
													"value": "",
													"description": "DataSet UUID"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Column PDP Policy Mapping",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/query/v2/data-control/:datasetId/column-policy-mapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												"v2",
												"data-control",
												":datasetId",
												"column-policy-mapping"
											],
											"variable": [
												{
													"key": "datasetId",
													"value": "",
													"description": "DataSet UUID"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Column PDP Policy",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"<string>\",\r\n    \"filterGroupId\": null,\r\n    \"dataSourceId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"type\": \"user\",\r\n    \"columnPolicies\": [\r\n        {\r\n            \"uuid\": \"00000000-0000-0000-0000-000000000000\",\r\n            \"values\": [\r\n                \"hash\",\r\n                \"md5\"\r\n            ],\r\n            \"dataSourcePermissions\": true,\r\n            \"policyOrder\": 0,\r\n            \"defaultPolicy\": true\r\n        },\r\n        {\r\n            \"uuid\": \"00000000-0000-0000-0000-000000000000\",\r\n            \"values\": [\r\n                \"visible\"\r\n            ],\r\n            \"dataSourcePermissions\": false,\r\n            \"groupIds\": [], //as integers\r\n            \"policyOrder\": 1,\r\n            \"defaultPolicy\": false\r\n        }\r\n    ],\r\n    \"isNew\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/query/v2/data-control/:datasetId/policy-group",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												"v2",
												"data-control",
												":datasetId",
												"policy-group"
											],
											"variable": [
												{
													"key": "datasetId",
													"value": "",
													"description": "DataSet UUID"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Column PDP Policy Mapping",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"if (parseInt(pm.request.url.variables.get('datasetId')) !== JSON.parse(pm.request.body.raw).dataSourceId) {\r",
													"    throw new Error('The URL parameter \"datasetId\" and body property \"dataSourceId\" don\\'t match. Adjust them to match each other and try again.')\r",
													"}"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": null,\r\n    \"filterGroupId\": 12345,\r\n    \"dataSourceId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"columnName\": \"<string>\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/query/v2/data-control/:datasetId/column-policy-mapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												"v2",
												"data-control",
												":datasetId",
												"column-policy-mapping"
											],
											"variable": [
												{
													"key": "datasetId",
													"value": "",
													"description": "DataSet UUID"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Column PDP Policy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"if (pm.request.url.variables.get('datasetId') !== JSON.parse(pm.request.body.raw).dataSourceId) {\r",
													"    throw new Error('The URL parameter \"datasetId\" and body property \"dataSourceId\" don\\'t match. Adjust them to match each other and try again.')\r",
													"}\r",
													"\r",
													"if (pm.request.url.variables.get('policyId') !== JSON.parse(pm.request.body.raw).filterGroupId) {\r",
													"    throw new Error('The URL parameter \"policyId\" and body property \"filterGroupId\" don\\'t match. Adjust them to match each other and try again.')\r",
													"}"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"<string>\",\r\n    \"filterGroupId\": 12345,\r\n    \"dataSourceId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"type\": \"user\",\r\n    \"columnPolicies\": [\r\n        {\r\n            \"uuid\": \"00000000-0000-0000-0000-000000000000\",\r\n            \"policyOrder\": 0,\r\n            \"values\": [\r\n                \"hash\",\r\n                \"md5\"\r\n            ],\r\n            \"dataSourcePermissions\": true,\r\n            \"policyId\": 6,\r\n            \"defaultPolicy\": true\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/query/v2/data-control/:datasetId/policy-group/:policyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												"v2",
												"data-control",
												":datasetId",
												"policy-group",
												":policyId"
											],
											"variable": [
												{
													"key": "datasetId",
													"value": "",
													"description": "DataSet UUID"
												},
												{
													"key": "policyId",
													"value": "",
													"description": "PDP Policy ID"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Column PDP Policy Mapping",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"if (pm.request.url.variables.get('datasetId') !== JSON.parse(pm.request.body.raw).dataSourceId) {\r",
													"    throw new Error('The URL parameter \"datasetId\" and body property \"dataSourceId\" don\\'t match. Adjust them to match each other and try again.')\r",
													"}\r",
													"\r",
													"if (pm.request.url.variables.get('columnPolicyMappingId') !== JSON.parse(pm.request.body.raw).id) {\r",
													"    throw new Error('The URL parameter \"columnPolicyMappingId\" and body property \"id\" don\\'t match. Adjust them to match each other and try again.')\r",
													"}"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": 1,\r\n    \"filterGroupId\": 12345,\r\n    \"policyName\": \"<string>\",\r\n    \"dataSourceId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"columnName\": \"<string>\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/query/v2/data-control/:datasetId/column-policy-mapping/:columnPdpPolicyMappingId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												"v2",
												"data-control",
												":datasetId",
												"column-policy-mapping",
												":columnPdpPolicyMappingId"
											],
											"variable": [
												{
													"key": "datasetId",
													"value": "",
													"description": "DataSet UUID"
												},
												{
													"key": "columnPdpPolicyMappingId",
													"value": "",
													"description": "Column PDP Policy Mapping ID"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Column PDP Policy",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/query/v2/data-control/:datasetId/policy-group/:policyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												"v2",
												"data-control",
												":datasetId",
												"policy-group",
												":policyId"
											],
											"variable": [
												{
													"key": "datasetId",
													"value": "",
													"description": "DataSet UUID"
												},
												{
													"key": "policyId",
													"value": "",
													"description": "Column PDP Policy ID"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Column PDP Policy Mapping",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/query/v2/data-control/:datasetId/column-policy-mapping/:columnPdpPolicyMappingId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												"v2",
												"data-control",
												":datasetId",
												"column-policy-mapping",
												":columnPdpPolicyMappingId"
											],
											"variable": [
												{
													"key": "datasetId",
													"value": "",
													"description": "DataSet UUID"
												},
												{
													"key": "columnPdpPolicyMappingId",
													"value": "",
													"description": "Column PDP Policy Mapping ID"
												}
											]
										}
									},
									"response": []
								}
							],
							"description": "[Column PDP Official Documentation](https://domo-support.domo.com/s/article/360042934614?language=en_US#column_policies)"
						},
						{
							"name": "Row PDP",
							"item": [
								{
									"name": "Get Row PDP Policies",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/query/v1/data-control/:datasetId/filter-groups?options=load_associations,include_open_policy,load_filters,sort",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												"v1",
												"data-control",
												":datasetId",
												"filter-groups"
											],
											"query": [
												{
													"key": "options",
													"value": "load_associations,include_open_policy,load_filters,sort",
													"description": "Properties to return. Known values: load_associations,include_open_policy,load_filters,sort"
												}
											],
											"variable": [
												{
													"key": "datasetId",
													"value": "",
													"description": "DataSet UUID"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Row PDP Policy",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"<string>\",\r\n    \"dataSourceId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"userIds\": [],\r\n    \"virtualUserIds\": [],\r\n    \"groupIds\": [],\r\n    \"dataSourcePermissions\": false,\r\n    \"parameters\": [\r\n        {\r\n            \"type\": \"DYNAMIC\",\r\n            \"name\": \"Column 1\",\r\n            \"values\": [\r\n                \"domo.policy.managed_employee_id\"\r\n            ],\r\n            \"operator\": \"EQUALS\",\r\n            \"ignoreCase\": false\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/query/v1/data-control/:datasetId/filter-groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												"v1",
												"data-control",
												":datasetId",
												"filter-groups"
											],
											"variable": [
												{
													"key": "datasetId",
													"value": "",
													"description": "DataSet UUID"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Row PDP Policy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"if (pm.request.url.variables.get('datasetId') !== JSON.parse(pm.request.body.raw).dataSourceId) {\r",
													"    throw new Error('The URL parameter \"datasetId\" and body property \"dataSourceId\" don\\'t match. Adjust them to match each other and try again.')\r",
													"}\r",
													"\r",
													"if (pm.request.url.variables.get('policyId') !== JSON.parse(pm.request.body.raw).filterGroupId) {\r",
													"    throw new Error('The URL parameter \"policyId\" and body property \"filterGroupId\" don\\'t match. Adjust them to match each other and try again.')\r",
													"}"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"<string>\",\r\n    \"filterGroupId\": 12345,\r\n    \"dataSourceId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"type\": \"user\",\r\n    \"policySetId\": 1234,\r\n    \"userIds\": [],\r\n    \"dataSourcePermissions\": false,\r\n    \"parameters\": [\r\n        {\r\n            \"name\": \"Column 1\",\r\n            \"operator\": \"EQUALS\",\r\n            \"type\": \"COLUMN\",\r\n            \"values\": [\r\n                \"<string>\"\r\n            ],\r\n            \"ignoreCase\": false\r\n        },\r\n        {\r\n            \"name\": \"Column 2\",\r\n            \"operator\": \"EQUALS\",\r\n            \"type\": \"COLUMN\",\r\n            \"values\": [\r\n                \"<string>\"\r\n            ],\r\n            \"ignoreCase\": false\r\n        }\r\n    ],\r\n    \"order\": 0\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/query/v1/data-control/:datasetId/filter-groups/:policyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												"v1",
												"data-control",
												":datasetId",
												"filter-groups",
												":policyId"
											],
											"variable": [
												{
													"key": "datasetId",
													"value": "",
													"description": "DataSet UUID"
												},
												{
													"key": "policyId",
													"value": "",
													"description": "Row PDP Policy ID"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Row PDP Policy",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/query/v1/data-control/:datasetId/filter-groups/:policyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"query",
												"v1",
												"data-control",
												":datasetId",
												"filter-groups",
												":policyId"
											],
											"variable": [
												{
													"key": "datasetId",
													"value": "",
													"description": "DataSet UUID"
												},
												{
													"key": "policyId",
													"value": "",
													"description": "Row PDP Policy ID"
												}
											]
										}
									},
									"response": []
								}
							],
							"description": "[Row PDP Official Documentation](https://domo-support.domo.com/s/article/360042934614?language=en_US#row_policies)"
						},
						{
							"name": "Get DataSet PDP Status",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/query/v2/data-control/:datasetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"query",
										"v2",
										"data-control",
										":datasetId"
									],
									"variable": [
										{
											"key": "datasetId",
											"value": "",
											"description": "DataSet UUID"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get DataSet PDP Impacted Resources",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/data/v3/datasources/:datasetId/impacted-resources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"datasources",
										":datasetId",
										"impacted-resources"
									],
									"variable": [
										{
											"key": "datasetId",
											"value": "",
											"description": "DataSet UUID"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Enable/Disable PDP on DataSet",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"enabled\": true,\r\n    \"secured\": false,\r\n    \"external\": false,\r\n    \"enabledColumn\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/query/v1/data-control/:datasetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"query",
										"v1",
										"data-control",
										":datasetId"
									],
									"variable": [
										{
											"key": "datasetId",
											"value": "",
											"description": "DataSet UUID"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "PDP stands for Personalized Data Permissions. PDP policies allow you to filter data in DataSets so that people and groups can only access data applicable to them when viewing Cards and DataFlows.\n\n[PDP Official Documentation](https://domo-support.domo.com/s/article/360042934614?language=en_US)"
				},
				{
					"name": "Uploads",
					"item": [
						{
							"name": "Create New Upload",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"action\": \"APPEND\",\r\n    \"message\": \"Uploading\",\r\n    \"appendId\": \"latest\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/data/v3/datasources/:datasetId/uploads",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"datasources",
										":datasetId",
										"uploads"
									],
									"variable": [
										{
											"key": "datasetId",
											"value": "",
											"description": "DataSet UUID"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload Data",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/csv",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "text,formatted,as,csv",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/data/v3/datasources/:datasetId/uploads/:uploadId/parts/:partNumber",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"datasources",
										":datasetId",
										"uploads",
										":uploadId",
										"parts",
										":partNumber"
									],
									"variable": [
										{
											"key": "datasetId",
											"value": "",
											"description": "DataSet UUID"
										},
										{
											"key": "uploadId",
											"value": "",
											"description": "Upload ID/Version ID"
										},
										{
											"key": "partNumber",
											"value": "",
											"description": "To upload in multiple parts, provide numbers starting at 1 and increasing by 1 for every part of the upload. To upload in one part, set to 1."
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Commit Upload",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n      \"index\": true,\r\n      \"appendId\": \"latest\",\r\n      \"message\": \"it worked\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/data/v3/datasources/:datasetId/uploads/:uploadId/commit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data",
										"v3",
										"datasources",
										":datasetId",
										"uploads",
										":uploadId",
										"commit"
									],
									"variable": [
										{
											"key": "datasetId",
											"value": "",
											"description": "DataSet UUID"
										},
										{
											"key": "uploadId",
											"value": "",
											"description": "Upload ID/Version ID"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Webforms",
					"item": [
						{
							"name": "Get Webform Data",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/data/v2/webforms/:datasetId/grid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data",
										"v2",
										"webforms",
										":datasetId",
										"grid"
									],
									"variable": [
										{
											"key": "datasetId",
											"value": "",
											"description": "DataSet UUID"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Webform Data",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"rows\": [\r\n        [\r\n            \"<string>\",\r\n            1234,\r\n            \"<date>\"\r\n        ],\r\n        [\r\n            \"<string>\",\r\n            1234,\r\n            \"<date>\"\r\n        ]\r\n    ],\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"Column 1\",\r\n            \"type\": \"STRING\"\r\n        },\r\n        {\r\n            \"name\": \"Column 2\",\r\n            \"type\": \"LONG\",\r\n            \"displayType\": \"NUMBER\"\r\n        },\r\n        {\r\n            \"name\": \"Column 3\",\r\n            \"type\": \"DATE\"\r\n        }\r\n    ],\r\n    \"name\": \"<dataset_name>\",\r\n    \"cloudId\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/data/v2/webforms/:streamId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"data",
										"v2",
										"webforms",
										":streamId"
									],
									"variable": [
										{
											"key": "streamId",
											"value": "",
											"description": "Stream ID"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "The Domo Webform connector is a unique connector in Domo, as you can add KPI cards powered by webforms directly to a page without having to open the Data Center or Appstore. If you want, you can also add webform DataSets from the Data Center or Appstore and then build cards afterward, just as you can with all of Domo's other connectors. \n\n[Webforms Official Documentation](https://domo-support.domo.com/s/article/360043436813?language=en_US)"
				},
				{
					"name": "list/Search DataSets",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"entities\": [\r\n        \"DATASET\"\r\n    ],\r\n    \"filters\": [\r\n        {\r\n            \"field\": \"name_sort\",\r\n            \"filterType\": \"wildcard\",\r\n            \"query\": \"*\"\r\n        }\r\n    ],\r\n    \"combineResults\": true,\r\n    \"query\": \"*\",\r\n    \"count\": 10000,\r\n    \"offset\": 0,\r\n    \"sort\": {\r\n        \"isRelevance\": false,\r\n        \"fieldSorts\": [\r\n            {\r\n                \"field\": \"create_date\",\r\n                \"sortOrder\": \"DESC\"\r\n            }\r\n        ]\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/data/ui/v3/datasources/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"ui",
								"v3",
								"datasources",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "list Tags",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/data/ui/v3/datasources/search/tags/all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"ui",
								"v3",
								"datasources",
								"search",
								"tags",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DataSets",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  \"00000000-0000-0000-0000-000000000000\"\r\n  ,\"00000000-0000-0000-0000-000000000000\"\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/data/v3/datasources/bulk?includePrivate=true&includeAllDetails=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v3",
								"datasources",
								"bulk"
							],
							"query": [
								{
									"key": "includePrivate",
									"value": "true"
								},
								{
									"key": "includeAllDetails",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DataSet",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/data/v3/datasources/:id?includeAllDetails=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v3",
								"datasources",
								":id"
							],
							"query": [
								{
									"key": "includeAllDetails",
									"value": "true"
								},
								{
									"key": "part",
									"value": "core,permission,status,pdp,rowcolcount,certification,functions",
									"description": "Comma separated list of extra information to return. For all information, use the includeAllDetails parameter. Possible values: core,permission,status,pdp,rowcolcount,certification,functions",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "DataSet UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Stream",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/data/v1/streams/:id?fields=all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v1",
								"streams",
								":id"
							],
							"query": [
								{
									"key": "fields",
									"value": "all"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Stream ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Stream Executions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/data/v1/streams/:id/executions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v1",
								"streams",
								":id",
								"executions"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Stream ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Stream Execution",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/data/v1/streams/:streamId/executions/:executionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v1",
								"streams",
								":streamId",
								"executions",
								":executionId"
							],
							"variable": [
								{
									"key": "streamId",
									"value": "",
									"description": "Stream ID"
								},
								{
									"key": "executionId",
									"value": "",
									"description": "Execution ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Saved Datacenter Filters",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/search/v1/saved?queryProfile=datacenter",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"v1",
								"saved"
							],
							"query": [
								{
									"key": "queryProfile",
									"value": "datacenter"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Impact",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/data/v1/impacts/DATA_SOURCE/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v1",
								"impacts",
								"DATA_SOURCE",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "DataSet UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Schema",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/query/v1/datasources/:id/schema/indexed?includeHidden=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query",
								"v1",
								"datasources",
								":id",
								"schema",
								"indexed"
							],
							"query": [
								{
									"key": "includeHidden",
									"value": "true"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "DataSet UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query DataSet",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"querySource\": \"data_table\",\r\n    \"useCache\": true,\r\n    \"query\": {\r\n        \"columns\": [\r\n            {\r\n                \"exprType\": \"COLUMN\",\r\n                \"column\": \"Column 1\"\r\n            },\r\n            {\r\n                \"exprType\": \"COLUMN\",\r\n                \"column\": \"Column 2\"\r\n            }\r\n        ],\r\n        \"limit\": {\r\n            \"limit\": 10000,\r\n            \"offset\": 0\r\n        },\r\n        \"orderByColumns\": [\r\n            {\r\n                \"expression\": {\r\n                    \"exprType\": \"COLUMN\",\r\n                    \"column\": \"Column 1\"\r\n                },\r\n                \"order\": \"ASCENDING\"\r\n            }\r\n        ],\r\n        \"groupByColumns\": [\r\n            {\r\n                \"exprType\": \"COLUMN\",\r\n                \"column\": \"Column 1\"\r\n            }\r\n        ],\r\n        \"where\": {\r\n            \"not\": false,\r\n            \"exprType\": \"IN\",\r\n            \"leftExpr\": {\r\n                \"exprType\": \"COLUMN\",\r\n                \"column\": \"Column 1\"\r\n            },\r\n            \"selectSet\": [\r\n                {\r\n                    \"exprType\": \"STRING_VALUE\",\r\n                    \"value\": \"<string>\"\r\n                }\r\n            ]\r\n        },\r\n        \"having\": null\r\n    },\r\n    \"context\": {\r\n        \"calendar\": \"StandardCalendar\",\r\n        \"features\": {\r\n            \"PerformTimeZoneConversion\": true,\r\n            \"AllowNullValues\": true,\r\n            \"TreatNumbersAsStrings\": true\r\n        }\r\n    },\r\n    // Used for Views Explorer, not the regular Data table\r\n    \"viewTemplate\": null,\r\n    \"tableAliases\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/query/v1/execute/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query",
								"v1",
								"execute",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "DataSet UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query Preview (Views Explorer)",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"querySource\": \"judoTable\",\r\n    \"schema\": {\r\n        \"name\": \"<string>\",\r\n        \"tables\": [\r\n            {\r\n                \"columns\": []\r\n            }\r\n        ],\r\n        \"viewTemplate\": {\r\n            \"version\": \"jsql\",\r\n            \"fromItemInfo\": {\r\n                \"mapping\": {\r\n                    \"columnInfo\": {}\r\n                },\r\n                \"where\": {\r\n                    \"columnInfo\": {}\r\n                },\r\n                \"having\": {\r\n                    \"columnInfo\": {}\r\n                },\r\n                \"calculated\": {\r\n                    \"columnInfo\": {}\r\n                },\r\n                \"remapped\": {\r\n                    \"columnInfo\": {}\r\n                }\r\n            },\r\n            \"select\": {\r\n                \"@type\": \"SELECT\",\r\n                \"selectBody\": {\r\n                    \"@type\": \"PLAIN_SELECT\",\r\n                    \"fromItem\": {\r\n                        \"@type\": \"TABLE\",\r\n                        \"name\": \"00000000-0000-0000-0000-000000000000\",\r\n                        \"alias\": {\r\n                            \"name\": \"base\"\r\n                        }\r\n                    },\r\n                    \"groupBy\": null,\r\n                    \"where\": {},\r\n                    \"joins\": [],\r\n                    \"orderByElements\": [],\r\n                    \"selectItems\": []\r\n                }\r\n            }\r\n        },\r\n        \"tableAliases\": {\r\n            \"<dataset_name>\": \"00000000-0000-0000-0000-000000000000\"\r\n        }\r\n    },\r\n    \"useCache\": true,\r\n    \"query\": {\r\n        \"columns\": [],\r\n        \"limit\": {\r\n            \"limit\": 10000,\r\n            \"offset\": 0\r\n        },\r\n        \"orderByColumns\": null,\r\n        \"groupByColumns\": null,\r\n        \"where\": null,\r\n        \"having\": null\r\n    },\r\n    \"context\": {\r\n        \"calendar\": \"StandardCalendar\",\r\n        \"features\": {\r\n            \"PerformTimeZoneConversion\": true,\r\n            \"AllowNullValues\": true,\r\n            \"TreatNumbersAsStrings\": true\r\n        }\r\n    },\r\n    \"viewTemplate\": {\r\n        \"version\": \"jsql\",\r\n        \"fromItemInfo\": {\r\n            \"mapping\": {\r\n                \"columnInfo\": {}\r\n            },\r\n            \"where\": {\r\n                \"columnInfo\": {}\r\n            },\r\n            \"having\": {\r\n                \"columnInfo\": {}\r\n            },\r\n            \"calculated\": {\r\n                \"columnInfo\": {}\r\n            },\r\n            \"remapped\": {\r\n                \"columnInfo\": {}\r\n            }\r\n        },\r\n        \"select\": {\r\n            \"@type\": \"SELECT\",\r\n            \"selectBody\": {\r\n                \"@type\": \"PLAIN_SELECT\",\r\n                \"fromItem\": {\r\n                    \"@type\": \"TABLE\",\r\n                    \"name\": \"00000000-0000-0000-0000-000000000000\",\r\n                    \"alias\": {\r\n                        \"name\": \"base\"\r\n                    }\r\n                },\r\n                \"groupBy\": null,\r\n                \"where\": {},\r\n                \"joins\": [],\r\n                \"orderByElements\": [],\r\n                \"selectItems\": []\r\n            }\r\n        }\r\n    },\r\n    \"tableAliases\": {\r\n        \"<dataset_name>\": \"00000000-0000-0000-0000-000000000000\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/query/v1/views/query-preview",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query",
								"v1",
								"views",
								"query-preview"
							]
						}
					},
					"response": []
				},
				{
					"name": "Run Stream/DataSet",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/data/v1/streams/:id/executions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v1",
								"streams",
								":id",
								"executions"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Stream ID"
								}
							]
						},
						"description": "Uses Stream ID in the URL, not DataSet ID. The Steam ID can be obtained from the [/api/data/v3/datasources](https://opsanglepoint.postman.co/workspace/Team-Workspace~43b45cca-8793-4594-81ab-7afb7e2e8a3d/request/19448389-22c2d0ba-25f7-42b3-bc53-387063563322?ctx=documentation) endpoint."
					},
					"response": []
				},
				{
					"name": "Defrost (Unvault) DataSet",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/data/ui/v3/datasources/:id/defrost",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"ui",
								"v3",
								"datasources",
								":id",
								"defrost"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "DataSet UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Share DataSet",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"permissions\": [\r\n        {\r\n            \"type\": \"GROUP\",\r\n            \"id\": \"1234\",\r\n            \"accessLevel\": \"CAN_SHARE\"\r\n        }\r\n    ],\r\n    \"sendEmail\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/data/v3/datasources/:id/share",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v3",
								"datasources",
								":id",
								"share"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "DataSet UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Stream and DataSet",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"updateMethod\": \"REPLACE\",\r\n    \"transport\": {\r\n        \"type\": \"CONNECTOR\",\r\n\t\t\"description\": \"com.domo.connector.json.customparsing\",\r\n\t\t\"version\": \"4\"\r\n    },\r\n    \"dataProvider\": {\r\n        \"id\": 1234,\r\n        \"key\": \"json5\"\r\n    },\r\n    \"account\": {\r\n        \"id\": 1234\r\n    },\r\n    \"accounts\": [],\r\n    \"accountTemplate\": null,\r\n    \"dataSource\": {\r\n        \"name\": \"<string>\",\r\n        \"description\": \"<string>\"\r\n    },\r\n    \"scheduleExpression\": null,\r\n    \"scheduleStartDate\": null,\r\n    \"advancedScheduleJson\": \"{\\\"type\\\":\\\"MANUAL\\\",\\\"timezone\\\":\\\"UTC\\\"}\",\r\n    \"scheduleRetryExpression\": \"15 minutes\",\r\n    \"scheduleRetryCount\": 3,\r\n    \"scheduleState\": \"MANUAL\",\r\n    \"scheduleAssertion\": false,\r\n    \"inactiveScheduleCode\": null,\r\n    \"configuration\": [\r\n        {\r\n            \"category\": \"METADATA\",\r\n            \"name\": \"retry.retryNumber\",\r\n            \"type\": \"string\",\r\n            \"value\": \"0\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/data/v1/streams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v1",
								"streams"
							]
						},
						"description": "If formatting a response from [Get Stream](https://opsanglepoint.postman.co/workspace/Team-Workspace~43b45cca-8793-4594-81ab-7afb7e2e8a3d/request/19448389-81bac62b-4145-42b0-8c5f-f602995f2ce6?action=share&source=copy-link&creator=19448389)\n\n- Remove id\n    \n- dataProvider should be reduced to id and key\n    \n- account should be reduced to id\n    \n- dataSource should be reduced to name and description\n    \n- Remove schemaDefinition, lastExecution, lastSuccessfulExecution, currentExecution, currentExecutionState, createdAt, createdBy, modifiedAt, modifiedBy"
					},
					"response": []
				},
				{
					"name": "Append to Webhook DataSet",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"value": "",
									"type": "file"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/iot/v1/webhook/data/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"iot",
								"v1",
								"webhook",
								"data",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Wrangle (Edit Schema Tags, Descriptions, and Order)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"Column 1\",\r\n            \"id\": \"Column 1\",\r\n            \"type\": \"LONG\",\r\n            \"visible\": true,\r\n            \"order\": 0,\r\n            \"referenceDataSourceId\": \"00000000-0000-0000-0000-000000000000\",\r\n            \"invalid\": false,\r\n            \"newName\": \"Column 1\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/query/v1/datasources/:id/wrangle",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query",
								"v1",
								"datasources",
								":id",
								"wrangle"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "DataSet GUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Stream",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (pm.request.url.variables.get('id') != JSON.parse(pm.request.body.raw).id) {\r",
									"    throw new Error('The URL parameter and body property for \"id\" don\\'t match. Adjust them to match each other and try again.')\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1234,\r\n    \"valid\": true,\r\n    \"updateMethod\": \"REPLACE\",\r\n    \"dataProvider\": {\r\n        \"id\": 1234,\r\n        \"key\": \"json5\"\r\n    },\r\n    \"account\": {\r\n        \"id\": 123\r\n    },\r\n    \"accounts\": [],\r\n    \"accountTemplate\": null,\r\n    \"dataSource\": {\r\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n        \"name\": \"<string>\",\r\n        \"description\": \"<string>\"\r\n    },\r\n    \"schemaDefinition\": {\r\n        \"columns\": [\r\n            {\r\n                \"type\": \"STRING\",\r\n                \"name\": \"Column 1\",\r\n                \"id\": \"Column 1\",\r\n                \"visible\": true,\r\n                \"metadata\": {\r\n                    \"colLabel\": \"Column 1\",\r\n                    \"colFormat\": \"\",\r\n                    \"isEncrypted\": false\r\n                }\r\n            }\r\n        ]\r\n    },\r\n    \"scheduleExpression\": \"0 28 23 * * ?\",\r\n    \"scheduleStartDate\": null,\r\n    \"advancedScheduleJson\": \"{\\\"type\\\":\\\"DAY\\\",\\\"at\\\":\\\"11:28 PM\\\",\\\"timezone\\\":\\\"UTC\\\"}\",\r\n    \"scheduleRetryExpression\": null,\r\n    \"scheduleRetryCount\": 0,\r\n    \"scheduleState\": \"ACTIVE\",\r\n    \"scheduleAssertion\": false,\r\n    \"inactiveScheduleCode\": null,\r\n    \"configuration\": [\r\n        {\r\n            \"category\": \"METADATA\",\r\n            \"name\": \"report\",\r\n            \"type\": \"string\",\r\n            \"value\": \"BalanceSheet\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/data/v1/streams/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v1",
								"streams",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Stream ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update DataSet Owner",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"responsibleUserId\": \"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/data/v2/datasources/:id/responsibleUsers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v2",
								"datasources",
								":id",
								"responsibleUsers"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "DataSet UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sync Cloud Amplifier DataSet",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/query/v1/byos/accounts/:cloudId/polling/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query",
								"v1",
								"byos",
								"accounts",
								":cloudId",
								"polling",
								"refresh"
							],
							"variable": [
								{
									"key": "cloudId",
									"value": "",
									"description": "Cloud UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete DataSet",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/data/v3/datasources/:id?deleteMethod=soft",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v3",
								"datasources",
								":id"
							],
							"query": [
								{
									"key": "deleteMethod",
									"value": "soft"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "DataSet UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Check",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"DATA_SOURCE\",\r\n    \"ids\": [\r\n        \"00000000-0000-0000-0000-000000000000\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/data/v1/ui/bulk/delete/check",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v1",
								"ui",
								"bulk",
								"delete",
								"check"
							]
						}
					},
					"response": []
				}
			],
			"description": "[Adding a DataSet Using a Connector Official Documentation](https://domo-support.domo.com/s/article/360042926274?language=en_US)\n\n[Manage Data in Domo Official Documentation](https://domo-support.domo.com/s/topic/0TO5w000000Zan2GAC/manage-data-in-domo?language=en_US)"
		},
		{
			"name": "Elevation",
			"item": [
				{
					"name": "Authenticate with OTP",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"timeBasedOneTimePassword\": \"000000\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/identity/v1/authentication/elevations/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"identity",
								"v1",
								"authentication",
								"elevations",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"timeBasedOneTimePassword\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/identity/v1/authentication/elevations/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"v1",
										"authentication",
										"elevations",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "Files",
			"item": [
				{
					"name": "Get Revision",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/data/v1/data-files/:fileId/revisions/:revisionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v1",
								"data-files",
								":fileId",
								"revisions",
								":revisionId"
							],
							"query": [
								{
									"key": "fileName",
									"value": "",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "fileId",
									"value": "",
									"description": "File ID"
								},
								{
									"key": "revisionId",
									"value": "-1",
									"description": "Revision ID. Use -1 for most recent revision"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Revision Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/data/v1/data-files/:fileId/revisions/:revisionId/details",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v1",
								"data-files",
								":fileId",
								"revisions",
								":revisionId",
								"details"
							],
							"variable": [
								{
									"key": "fileId",
									"value": "",
									"description": "File ID"
								},
								{
									"key": "revisionId",
									"value": "-1",
									"description": "Revision ID. Use -1 for most recent revision"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get File Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/data/v1/data-files/:id/details?expand=revisions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v1",
								"data-files",
								":id",
								"details"
							],
							"query": [
								{
									"key": "expand",
									"value": "revisions"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "File ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create File",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "file",
							"file": {
								"src": ""
							}
						},
						"url": {
							"raw": "{{baseUrl}}/data/v1/data-files?name=&public=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v1",
								"data-files"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"description": "File Name with Extension"
								},
								{
									"key": "public",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create File Card",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"document\",\r\n    \"description\": \"<string>\",\r\n    \"metadata\": {\r\n        \"title\": \"<string>\",\r\n        \"documentId\": \"123:123\",\r\n        \"usingSampleData\": \"\",\r\n        \"kpiType\": \"document\",\r\n        \"description\": \"<string>\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v1/cards?pageId=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"cards"
							],
							"query": [
								{
									"key": "pageId",
									"value": "",
									"description": "Page ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update File",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "file",
							"file": {
								"src": ""
							}
						},
						"url": {
							"raw": "{{baseUrl}}/data/v1/data-files/:id?public=true&description=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"data",
								"v1",
								"data-files",
								":id"
							],
							"query": [
								{
									"key": "public",
									"value": "true"
								},
								{
									"key": "description",
									"value": ""
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "File ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update File Card",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"metadata\": {\r\n        \"documentId\": \"123:123\",\r\n        \"revisionId\": \"123\",\r\n        \"title\": \"<string>\",\r\n        \"kpiType\": \"document\",\r\n        \"usingSampleData\": \"\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v1/cards/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"cards",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Card ID"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Files are how files uploaded to a Doc card (and probably other things) are managed. Since they are just a backend management feature, there is no associated documentation in the Knowledge Base and they cannot be directly accessed via the user interface."
		},
		{
			"name": "FileSets",
			"item": [
				{
					"name": "list/Search FileSets",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fieldSort\": [\r\n        {\r\n            \"field\": \"updated\",\r\n            \"order\": \"DESC\"\r\n        }\r\n    ],\r\n    \"filters\": [\r\n        {\r\n            \"field\": \"name\",\r\n            \"value\": [\r\n                \"\"\r\n            ],\r\n            \"not\": false,\r\n            \"operator\": \"LIKE\"\r\n        }\r\n    ],\r\n    \"dateFilters\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/files/v1/filesets/search?limit=50&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files",
								"v1",
								"filesets",
								"search"
							],
							"query": [
								{
									"key": "limit",
									"value": "50"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"fieldSort\": [\r\n        {\r\n            \"field\": \"updated\",\r\n            \"order\": \"DESC\"\r\n        }\r\n    ],\r\n    \"filters\": [\r\n        {\r\n            \"field\": \"name\",\r\n            \"value\": [\r\n                \"\"\r\n            ],\r\n            \"not\": false,\r\n            \"operator\": \"LIKE\"\r\n        }\r\n    ],\r\n    \"dateFilters\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/v1/filesets/search?limit=50&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"v1",
										"filesets",
										"search"
									],
									"query": [
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"fileSets\": [\n        {\n            \"id\": \"00000000-0000-0000-0000-000000000000\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"aiEnabled\": false,\n            \"indexStatus\": null,\n            \"batchType\": \"INCREMENTAL\",\n            \"connector\": \"DOMO\",\n            \"created\": \"2025-01-01T12:00:00Z\",\n            \"createdBy\": 1234,\n            \"updated\": \"2025-01-01T12:00:00Z\",\n            \"updatedBy\": 1234,\n            \"owner\": \"1234\",\n            \"accountId\": 0,\n            \"connectorContext\": null,\n            \"permission\": \"OWNER\",\n            \"size\": null\n        },\n        {\n            \"id\": \"00000000-0000-0000-0000-000000000000\",\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"aiEnabled\": true,\n            \"indexStatus\": null,\n            \"batchType\": \"INCREMENTAL\",\n            \"connector\": \"DOMO\",\n            \"created\": \"2025-01-01T12:00:00Z\",\n            \"createdBy\": 1234,\n            \"updated\": \"2025-01-01T12:00:00Z\",\n            \"updatedBy\": 1234,\n            \"owner\": \"1234\",\n            \"accountId\": 0,\n            \"connectorContext\": null,\n            \"permission\": \"OWNER\",\n            \"size\": null\n        }\n    ],\n    \"pageContext\": {\n        \"count\": 2,\n        \"totalCount\": 2,\n        \"offset\": 0\n    }\n}"
						}
					]
				},
				{
					"name": "Get/Search Files",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fieldSort\": [\r\n        {\r\n            \"field\": \"created\",\r\n            \"order\": \"DESC\"\r\n        }\r\n    ],\r\n    \"filters\": [],\r\n    \"dateFilters\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/files/v1/filesets/:filesetId/files/search?directoryPath=&immediateChildren=true&limit=50",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files",
								"v1",
								"filesets",
								":filesetId",
								"files",
								"search"
							],
							"query": [
								{
									"key": "directoryPath",
									"value": ""
								},
								{
									"key": "immediateChildren",
									"value": "true"
								},
								{
									"key": "limit",
									"value": "50"
								},
								{
									"key": "next",
									"value": "",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "filesetId",
									"value": "",
									"description": "FileSet UUID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"fieldSort\": [\r\n        {\r\n            \"field\": \"created\",\r\n            \"order\": \"DESC\"\r\n        }\r\n    ],\r\n    \"filters\": [],\r\n    \"dateFilters\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/v1/filesets/:filesetId/files/search?directoryPath=&immediateChildren=true&limit=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"v1",
										"filesets",
										":filesetId",
										"files",
										"search"
									],
									"query": [
										{
											"key": "directoryPath",
											"value": ""
										},
										{
											"key": "immediateChildren",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "next",
											"value": null,
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "filesetId",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "FileSet UUID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\r\n    \"files\": [\r\n        {\r\n            \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n            \"path\": \"<string>\",\r\n            \"name\": \"<string>\",\r\n            \"fileType\": \"TEXT\",\r\n            \"contentType\": \"text/csv\",\r\n            \"size\": 123,\r\n            \"hash\": \"d2461398b3346c5c9eb59fa9aaa5a91938f358f37ef7b734c96bf477a2b1e6bb\",\r\n            \"hashAlgorithm\": \"SHA_256_HEX\",\r\n            \"downloadUrl\": \"https://instance.domo.com/api/files/v1/filesets/00000000-0000-0000-0000-000000000000/files/00000000-0000-0000-0000-000000000000/download\",\r\n            \"created\": \"2025-01-01T12:00:00Z\",\r\n            \"createdBy\": 123,\r\n            \"connectorKey\": null,\r\n            \"indexStatus\": \"QUEUED\",\r\n            \"indexReason\": null\r\n        },\r\n        {\r\n            \"id\": \"11111111-1111-1111-1111-111111111111\",\r\n            \"path\": \"<string>\",\r\n            \"name\": \"<string>\",\r\n            \"fileType\": \"TEXT\",\r\n            \"contentType\": \"text/csv\",\r\n            \"size\": 234,\r\n            \"hash\": \"aa92e77676dfeb3254018bf08c1836255f9f3d5db26697741db77b36960d64db\",\r\n            \"hashAlgorithm\": \"SHA_256_HEX\",\r\n            \"downloadUrl\": \"https://instance.domo.com/api/files/v1/filesets/00000000-0000-0000-0000-000000000000/files/11111111-1111-1111-1111-111111111111/download\",\r\n            \"created\": \"2025-01-01T12:00:00Z\",\r\n            \"createdBy\": 123,\r\n            \"connectorKey\": null,\r\n            \"indexStatus\": \"QUEUED\",\r\n            \"indexReason\": null\r\n        }\r\n    ],\r\n    \"pageContext\": {\r\n        \"next\": \"eyJpZCI6ImM0NTkzNjA0LTc2NGEtNGIxNy05MzRhLTQ0N2RiYTRhNjRhZSIsInBhdGgiOiJwcm92aWRlcnMuY3N2IiwibmFtZSI6InByb3ZpZGVycy5jc3YiLCJzaXplIjoxNjEyLCJjcmVhdGVkIjoiMjAyNS0wNC0yMVQxNDowMzo1MS42NDM5MjZaIn0=\"\r\n    }\r\n}"
						}
					]
				},
				{
					"name": "Search Files with AI",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"query\": \"\",\r\n    \"directoryPath\": \"\",\r\n    \"topK\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/files/v1/filesets/:id/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files",
								"v1",
								"filesets",
								":id",
								"query"
							],
							"variable": [
								{
									"key": "id",
									"value": "9ca56feb-7bac-47f1-8ea9-558fc21e8bae",
									"description": "FileSet UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get FileSet",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/files/v1/filesets/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files",
								"v1",
								"filesets",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "FileSet UUID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/files/v1/filesets/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"v1",
										"filesets",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "00000000-0000-0000-0000-000000000000"
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"00000000-0000-0000-0000-000000000000\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"aiEnabled\": true,\n    \"indexStatus\": null,\n    \"batchType\": \"INCREMENTAL\",\n    \"connector\": \"DOMO\",\n    \"created\": \"2025-01-01T12:00:00Z\",\n    \"createdBy\": 1234,\n    \"updated\": \"2025-01-01T12:00:00Z\",\n    \"updatedBy\": 1234,\n    \"owner\": \"1234\",\n    \"accountId\": 0,\n    \"connectorContext\": null,\n    \"permission\": \"OWNER\",\n    \"size\": null\n}"
						}
					]
				},
				{
					"name": "Get FileSet Access",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/files/v1/filesets/:id/access",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files",
								"v1",
								"filesets",
								":id",
								"access"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "FileSet UUID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/files/v1/filesets/:id/access",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"v1",
										"filesets",
										":id",
										"access"
									],
									"variable": [
										{
											"key": "id",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "FileSet UUID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"fileSetId\": \"00000000-0000-0000-0000-000000000000\",\n    \"fileSetAccess\": [\n        {\n            \"entityId\": 2345,\n            \"entityType\": \"USER\",\n            \"permission\": \"OWNER\"\n        },\n        {\n            \"entityId\": 1234,\n            \"entityType\": \"USER\",\n            \"permission\": \"EDIT\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get FileSet Stats",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/files/v1/filesets/:id/stats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files",
								"v1",
								"filesets",
								":id",
								"stats"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "FileSet UUID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/files/v1/filesets/:id/stats",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"v1",
										"filesets",
										":id",
										"stats"
									],
									"variable": [
										{
											"key": "id",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "FileSet UUID"
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"imageFileTypeCount\": 0,\n    \"audioFileTypeCount\": 0,\n    \"videoFileTypeCount\": 0,\n    \"textFileTypeCount\": 4,\n    \"documentFileTypeCount\": 0,\n    \"otherFileTypeCount\": 0,\n    \"notIndexedCount\": 0,\n    \"indexQueuedCount\": 4,\n    \"indexInProgressCount\": 0,\n    \"indexCompleteCount\": 0,\n    \"indexFailedCount\": 0,\n    \"indexSkippedCount\": 0\n}"
						}
					]
				},
				{
					"name": "Download File",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/files/v1/filesets/:filesetId/files/:fileId/download",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files",
								"v1",
								"filesets",
								":filesetId",
								"files",
								":fileId",
								"download"
							],
							"variable": [
								{
									"key": "filesetId",
									"value": "",
									"description": "FileSet UUID"
								},
								{
									"key": "fileId",
									"value": "",
									"description": "File UUID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/files/v1/filesets/:filesetId/files/:fileId/download",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"v1",
										"filesets",
										":filesetId",
										"files",
										":fileId",
										"download"
									],
									"variable": [
										{
											"key": "filesetId",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "FileSet UUID"
										},
										{
											"key": "fileId",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "File UUID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Create FileSet",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"<string>\",\r\n    \"description\": \"<string>\",\r\n    \"aiEnabled\": false,\r\n    \"batchType\": \"INCREMENTAL\",\r\n    \"connector\": \"DOMO\",\r\n    \"accountId\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/files/v1/filesets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files",
								"v1",
								"filesets"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"<string>\",\r\n    \"description\": \"<string>\",\r\n    \"aiEnabled\": false,\r\n    \"batchType\": \"INCREMENTAL\",\r\n    \"connector\": \"DOMO\",\r\n    \"accountId\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/v1/filesets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"v1",
										"filesets"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"name\": \"<string>\",\r\n    \"description\": \"<string>\",\r\n    \"aiEnabled\": false,\r\n    \"indexStatus\": null,\r\n    \"batchType\": \"INCREMENTAL\",\r\n    \"connector\": \"DOMO\",\r\n    \"created\": \"2025-01-01T12:00:00Z\",\r\n    \"createdBy\": 1234,\r\n    \"updated\": \"2025-01-01T12:00:00Z\",\r\n    \"updatedBy\": 1234,\r\n    \"owner\": \"1234\",\r\n    \"accountId\": 0,\r\n    \"connectorContext\": null,\r\n    \"permission\": \"OWNER\",\r\n    \"size\": null\r\n}"
						}
					]
				},
				{
					"name": "Create Folder",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"directoryPath\": \"<string>\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/files/v1/filesets/:filesetId/files",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files",
								"v1",
								"filesets",
								":filesetId",
								"files"
							],
							"variable": [
								{
									"key": "filesetId",
									"value": "",
									"description": "FileSet UUID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"directoryPath\": \"<string>\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/v1/filesets/:filesetId/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"v1",
										"filesets",
										":filesetId",
										"files"
									],
									"variable": [
										{
											"key": "filesetId",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "FileSet UUID"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"path\": \"<string>\",\r\n    \"name\": \"<string>\",\r\n    \"size\": null,\r\n    \"created\": \"2025-01-01T12:00:00Z\",\r\n    \"createdBy\": 1234,\r\n    \"fileType\": \"DIRECTORY\"\r\n}"
						}
					]
				},
				{
					"name": "Update FileSet",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"<string>\",\r\n    \"description\": \"<string>\",\r\n    \"aiEnabled\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/files/v1/filesets/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files",
								"v1",
								"filesets",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "FileSet UUID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"<string>\",\r\n    \"description\": \"<string>\",\r\n    \"aiEnabled\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/v1/filesets/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"v1",
										"filesets",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "FileSet UUID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"00000000-0000-0000-0000-000000000000\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"aiEnabled\": false,\n    \"indexStatus\": null,\n    \"batchType\": \"INCREMENTAL\",\n    \"connector\": \"DOMO\",\n    \"created\": \"2025-01-01T12:00:00Z\",\n    \"createdBy\": 1234,\n    \"updated\": \"2025-01-01T12:00:00Z\",\n    \"updatedBy\": 1234,\n    \"owner\": \"1234\",\n    \"accountId\": 0,\n    \"connectorContext\": null,\n    \"permission\": \"OWNER\",\n    \"size\": null\n}"
						}
					]
				},
				{
					"name": "Update FileSet Access",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fileSetAccess\": [\r\n        {\r\n            \"entityId\": 1234,\r\n            \"entityType\": \"USER\",\r\n            \"permission\": \"READ\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/files/v1/filesets/:id/access",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files",
								"v1",
								"filesets",
								":id",
								"access"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "FileSet UUID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"fileSetAccess\": [\r\n        {\r\n            \"entityId\": 1234,\r\n            \"entityType\": \"USER\",\r\n            \"permission\": \"READ\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/v1/filesets/:id/access",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"v1",
										"filesets",
										":id",
										"access"
									],
									"variable": [
										{
											"key": "id",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "FileSet UUID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"fileSetId\": \"00000000-0000-0000-0000-000000000000\",\n    \"fileSetAccess\": [\n        {\n            \"entityId\": 2345,\n            \"entityType\": \"USER\",\n            \"permission\": \"OWNER\"\n        },\n        {\n            \"entityId\": 1234,\n            \"entityType\": \"USER\",\n            \"permission\": \"READ\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Update FileSet Owner",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 1234\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/files/v1/filesets/:id/ownership",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files",
								"v1",
								"filesets",
								":id",
								"ownership"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "FileSet UUID"
								}
							]
						},
						"description": "Oddly, this will return a normal fileSetAccess array with both the old and new owners inside."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"userId\": 1234\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/files/v1/filesets/:id/ownership",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"v1",
										"filesets",
										":id",
										"ownership"
									],
									"variable": [
										{
											"key": "id",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "FileSet UUID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\r\n    \"fileSetId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"fileSetAccess\": [\r\n        {\r\n            \"entityId\": 1234,\r\n            \"entityType\": \"USER\",\r\n            \"permission\": \"OWNER\"\r\n        },\r\n        {\r\n            \"entityId\": 2345,\r\n            \"entityType\": \"USER\",\r\n            \"permission\": \"OWNER\"\r\n        }\r\n    ]\r\n}"
						}
					]
				},
				{
					"name": "Delete FileSet",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/files/v1/filesets/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files",
								"v1",
								"filesets",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "FileSet UUID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/files/v1/filesets/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"files",
										"v1",
										"filesets",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "FileSet UUID"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				}
			],
			"description": "[FileSets Official Documentation](https://domo-support.domo.com/s/article/000005849?language=en_US)"
		},
		{
			"name": "Forms",
			"item": [
				{
					"name": "list Forms",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"count\": 50,\r\n    \"offset\": 0,\r\n    \"filters\": [],\r\n    \"useEntities\": true,\r\n    \"combineResults\": true,\r\n    \"facetValueLimit\": 1000,\r\n    \"entityList\": [\r\n        [\r\n            \"form\"\r\n        ]\r\n    ],\r\n    \"sort\": {\r\n        \"isRelevance\": true,\r\n        \"fieldSorts\": [\r\n            {\r\n                \"field\": \"lastModified\",\r\n                \"sortOrder\": \"DESC\"\r\n            }\r\n        ]\r\n    },\r\n    \"query\": \"*\",\r\n    \"hideSearchObjects\": false,\r\n    \"state\": \"facet\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/search/v1/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"v1",
								"query"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Form",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/forms/v1/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"forms",
								"v1",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Form UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Instance",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"formId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"fieldConfiguration\": {\r\n        \"00000000-0000-0000-0000-000000000000\": {\r\n            \"options\": {\r\n                \"type\": \"DATASET\",\r\n                \"customMapping\": null,\r\n                \"datasetMapping\": {\r\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n                    \"column\": \"Column 1\"\r\n                }\r\n            },\r\n            \"value\": {\r\n                \"type\": \"DATASET\"\r\n            }\r\n        }\r\n    },\r\n    \"submitConfiguration\": {\r\n        \"type\": \"DATASET\",\r\n        \"name\": \"<string>\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/forms/v1/instances",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"forms",
								"v1",
								"instances"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Submission",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (pm.request.url.variables.get('id') !== pm.request.body.raw.id) {\r",
									"    throw new Error('The URL parameter and body property for \"id\" don\\'t match. Adjust them to match each other and try again.')\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n        \"label\": \"<string>\",\r\n        \"optional\": false,\r\n        \"fieldType\": \"SINGLE_CHOICE\",\r\n        \"dataType\": \"text\",\r\n        \"acceptsInput\": true,\r\n        \"acceptsOutput\": true,\r\n        \"options\": {\r\n            \"values\": []\r\n        },\r\n        \"alias\": \"<string>\",\r\n        \"isList\": true,\r\n        \"useExternalValues\": true,\r\n        \"displayAsDropdown\": true,\r\n        \"value\": \"<string>\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/forms/v1/instances/:id/submission",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"forms",
								"v1",
								"instances",
								":id",
								"submission"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Form Instance UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Instance",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"formInstanceId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"formId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"fieldConfiguration\": {\r\n        \"00000000-0000-0000-0000-000000000000\": {\r\n            \"options\": {\r\n                \"type\": \"DATASET\",\r\n                \"customMapping\": null,\r\n                \"datasetMapping\": {\r\n                    \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n                    \"column\": \"Column 1\"\r\n                }\r\n            },\r\n            \"value\": {\r\n                \"type\": \"DATASET\"\r\n            }\r\n        }\r\n    },\r\n    \"submitConfiguration\": {\r\n        \"type\": \"DATASET\",\r\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n        \"name\": \"<dataset_name>\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/forms/v1/instances/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"forms",
								"v1",
								"instances",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Form Instance UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Form Fields",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"00000000-0000-0000-0000-000000000000\": {\r\n        \"options\": {\r\n            \"type\": \"DATASET\",\r\n            \"customMapping\": null,\r\n            \"datasetMapping\": {\r\n                \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n                \"column\": \"Column 1\"\r\n            }\r\n        },\r\n        \"value\": {\r\n            \"type\": \"DATASET\"\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/forms/v1/:id/hydration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"forms",
								"v1",
								":id",
								"hydration"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Form UUID"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "[Forms Official Documentation](https://domo-support.domo.com/s/article/000005171?language=en_US)"
		},
		{
			"name": "Functions (Beast Modes and Variables)",
			"item": [
				{
					"name": "list Functions",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json;charset=utf-8",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"*\",\r\n    \"filters\": [\r\n        {\r\n            \"field\": \"dataset\",\r\n            \"idList\": [\r\n                \"00000000-0000-0000-0000-000000000000\"\r\n            ]\r\n        },\r\n        {\r\n            \"field\": \"notvariable\"\r\n        }\r\n    ],\r\n    \"sort\": {\r\n        \"field\": \"name\",\r\n        \"ascending\": true\r\n    },\r\n    \"limit\": 5000,\r\n    \"offset\": 0\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/query/v1/functions/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query",
								"v1",
								"functions",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Function",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/query/v1/functions/template/:id?hidden=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query",
								"v1",
								"functions",
								"template",
								":id"
							],
							"query": [
								{
									"key": "hidden",
									"value": "true"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Function ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Cards Function is Used On",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v2/cards/formulausage?datasourceId=&formulaId=calculation_00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v2",
								"cards",
								"formulausage"
							],
							"query": [
								{
									"key": "datasourceId",
									"value": "",
									"description": "DataSet UUID"
								},
								{
									"key": "formulaId",
									"value": "calculation_00000000-0000-0000-0000-000000000000",
									"description": "calculation_UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Function",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Test\",\r\n    \"owner\": 466826668,\r\n    \"locked\": false,\r\n    \"global\": false,\r\n    \"expression\": \"'test'\",\r\n    \"checkSum\": null,\r\n    \"links\": [\r\n        {\r\n            \"resource\": {\r\n                \"type\": \"DATA_SOURCE\",\r\n                \"id\": \"6ecd2cbb-db04-4cdc-b418-f8d705624cc6\"\r\n            },\r\n            \"visible\": true,\r\n            \"active\": false,\r\n            \"valid\": \"INCOMPATIBLE_LINK\"\r\n        }\r\n    ],\r\n    \"aggregated\": false,\r\n    \"analytic\": false,\r\n    \"nonAggregatedColumns\": [],\r\n    \"dataType\": \"STRING\",\r\n    \"status\": \"VALID\",\r\n    \"cacheWindow\": \"non_dynamic\",\r\n    \"columnPositions\": [],\r\n    \"functions\": [],\r\n    \"functionTemplateDependencies\": [],\r\n    \"archived\": false,\r\n    \"hidden\": false,\r\n    \"variable\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/query/v1/functions/template?strict=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query",
								"v1",
								"functions",
								"template"
							],
							"query": [
								{
									"key": "strict",
									"value": "false"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Bulk Create Functions",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"create\": [\r\n        {\r\n            \"name\": \"<string>\",\r\n            \"owner\": 123456,\r\n            \"locked\": false,\r\n            \"global\": false,\r\n            \"expression\": \"<sql>\",\r\n            \"checkSum\": \"<string>\",\r\n            \"links\": [\r\n                {\r\n                    \"resource\": {\r\n                        \"type\": \"CARD\",\r\n                        \"id\": \"<card_id>\"\r\n                    },\r\n                    \"visible\": false,\r\n                    \"active\": true,\r\n                    \"valid\": \"VALID\"\r\n                },\r\n                {\r\n                    \"resource\": {\r\n                        \"type\": \"DATA_SOURCE\",\r\n                        \"id\": \"<dataset_id>\"\r\n                    },\r\n                    \"visible\": true,\r\n                    \"active\": false,\r\n                    \"valid\": \"INCOMPATIBLE_LINK\"\r\n                }\r\n            ],\r\n            \"aggregated\": false,\r\n            \"analytic\": false,\r\n            \"nonAggregatedColumns\": [],\r\n            \"dataType\": \"STRING\",\r\n            \"status\": \"VALID\",\r\n            \"cacheWindow\": \"non_dynamic\",\r\n            \"columnPositions\": [\r\n                {\r\n                    \"columnName\": \"`Column 1`\",\r\n                    \"columnPosition\": 14\r\n                }\r\n            ],\r\n            \"functions\": [],\r\n            \"functionTemplateDependencies\": [],\r\n            \"archived\": false,\r\n            \"hidden\": false,\r\n            \"variable\": false\r\n        }\r\n    ],\r\n    \"links\": {},\r\n    \"strict\": false,\r\n    \"replaceLinks\": true,\r\n    \"copyDependencies\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/query/v1/functions/bulk/template",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query",
								"v1",
								"functions",
								"bulk",
								"template"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Function",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (parseInt(pm.request.url.variables.get('id')) !== JSON.parse(pm.request.body.raw).id) {\r",
									"    throw new Error('The URL parameter and body property for \"id\" don\\'t match. Adjust them to match each other and try again.')\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"expression\": \"<sql>\",\r\n    \"id\": 1234,\r\n    \"name\": \"<string>\",\r\n    \"status\": \"VALID\",\r\n    \"persistedOnDataSource\": true,\r\n    \"archived\": false,\r\n    \"certification\": {\r\n        \"state\": \"NOT_CERTIFIED\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/query/v1/functions/template/:id?strict=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query",
								"v1",
								"functions",
								"template",
								":id"
							],
							"query": [
								{
									"key": "strict",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Function ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Bulk Update Functions",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"update\": [\r\n        {\r\n            \"id\": 1234,\r\n            \"locked\": true\r\n        },\r\n        {\r\n            \"id\": 2345,\r\n            \"locked\": true\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/query/v1/functions/bulk/template",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query",
								"v1",
								"functions",
								"bulk",
								"template"
							]
						}
					},
					"response": []
				},
				{
					"name": "Lock Function",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"locked\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/query/v1/functions/template/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query",
								"v1",
								"functions",
								"template",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Function ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Function",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/query/v1/functions/template/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query",
								"v1",
								"functions",
								"template",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Function ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Bulk Delete Functions",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"delete\": [\r\n        1234,\r\n        2345\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/query/v1/functions/bulk/template",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"query",
								"v1",
								"functions",
								"bulk",
								"template"
							]
						}
					},
					"response": []
				}
			],
			"description": "[Beast Modes Official Documentation](https://domo-support.domo.com/s/topic/0TO5w000000ZanAGAS/beast-mode?language=en_US)\n\n[Variables Official Documentation](https://domo-support.domo.com/s/article/7903767835031?language=en_US)"
		},
		{
			"name": "Groups",
			"item": [
				{
					"name": "list Groups",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v2/groups/grouplist?ascending=true&limit=100&offset=0&sort=name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v2",
								"groups",
								"grouplist"
							],
							"query": [
								{
									"key": "ascending",
									"value": "true"
								},
								{
									"key": "limit",
									"value": "100"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "sort",
									"value": "name"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Groups",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    \"1234\",\r\n    \"2345\"\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v2/groups/get?includeActive=true&includeUsers=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v2",
								"groups",
								"get"
							],
							"query": [
								{
									"key": "includeActive",
									"value": "true"
								},
								{
									"key": "includeUsers",
									"value": "false"
								}
							]
						},
						"description": "Add groups you want to request as an array in the body"
					},
					"response": []
				},
				{
					"name": "Get Group",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v2/groups/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v2",
								"groups",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Group ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Permissions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v2/groups/:id/permissions?includeUsers=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v2",
								"groups",
								":id",
								"permissions"
							],
							"query": [
								{
									"key": "checkOwnership",
									"value": "true",
									"disabled": true
								},
								{
									"key": "includeUsers",
									"value": "true"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Group ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Avatar",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/avatar/GROUP/:id?size=100&defaultBackground=555555&defaultForeground=EEEEEE",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"avatar",
								"GROUP",
								":id"
							],
							"query": [
								{
									"key": "size",
									"value": "100"
								},
								{
									"key": "defaultBackground",
									"value": "555555"
								},
								{
									"key": "defaultForeground",
									"value": "EEEEEE"
								},
								{
									"key": "defaultText",
									"value": "",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Group ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Group",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"<string>\",\r\n    \"type\": \"dynamic\",\r\n    \"description\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v2/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v2",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add or Remove Owners",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"groupId\": 123456,\r\n        \"addOwners\": [\r\n            {\r\n                \"type\": \"GROUP\", //USER or GROUP\r\n                \"id\": \"123456\"\r\n            }\r\n        ],\r\n        \"removeOwners\": [\r\n            {\r\n                \"type\": \"USER\", //USER or GROUP\r\n                \"id\": \"123456\"\r\n            }\r\n        ]\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v2/groups/access",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v2",
								"groups",
								"access"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Member to Group",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"groupId\": 252073910,\r\n        \"addMembers\": [\r\n            {\r\n                \"type\": \"USER\",\r\n                \"id\": \"901072511\"\r\n            }\r\n        ]\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v2/groups/access",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v2",
								"groups",
								"access"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Dynamic Rules",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"groupId\": 123456,\r\n        \"dynamicDefinition\": {\r\n            \"expression\": {\r\n                \"operator\": \"OR\",\r\n                \"expressions\": [\r\n                    {\r\n                        \"operator\": \"OR\",\r\n                        \"operands\": [],\r\n                        \"expressions\": [\r\n                            {\r\n                                \"operator\": \"OR\",\r\n                                \"operands\": [\r\n                                    {\r\n                                        \"key\": \"DEPARTMENT\",\r\n                                        \"value\": \"<string>\"\r\n                                    },\r\n                                    {\r\n                                        \"key\": \"DEPARTMENT\",\r\n                                        \"value\": \"<string>\"\r\n                                    }\r\n                                ],\r\n                                \"expressions\": []\r\n                            },\r\n                            {\r\n                                \"operator\": \"OR\",\r\n                                \"operands\": [\r\n                                    {\r\n                                        \"key\": \"EMPLOYEE_ID\",\r\n                                        \"value\": \"10\"\r\n                                    }\r\n                                ],\r\n                                \"expressions\": []\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"operator\": \"OR\",\r\n                        \"operands\": [],\r\n                        \"expressions\": [\r\n                            {\r\n                                \"operator\": \"OR\",\r\n                                \"operands\": [\r\n                                    {\r\n                                        \"key\": \"LOCATION\",\r\n                                        \"value\": \"<string>\"\r\n                                    }\r\n                                ],\r\n                                \"expressions\": []\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v2/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v2",
								"groups"
							]
						}
					},
					"response": []
				}
			],
			"description": "[Groups Official Documentation](https://domo-support.domo.com/s/article/360042934294?language=en_US)"
		},
		{
			"name": "Left Navigation",
			"item": [
				{
					"name": "Get Pins",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/nav/v1/pins",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nav",
								"v1",
								"pins"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nav/v1/pins",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nav",
										"v1",
										"pins"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"userId\": 1234,\n        \"order\": 0,\n        \"icon\": \"database\",\n        \"iconColor\": \"#FFFFFFB3\",\n        \"iconBackgroundColor\": \"#FFFFFF00\",\n        \"label\": \"DataSets\",\n        \"action\": {\n            \"type\": \"feature\",\n            \"id\": \"data_etl_datasources\",\n            \"newTab\": false\n        }\n    },\n    {\n        \"id\": 2,\n        \"userId\": 1234,\n        \"order\": 1,\n        \"icon\": \"dataflow\",\n        \"iconColor\": \"#FFFFFFB3\",\n        \"iconBackgroundColor\": \"#FFFFFF00\",\n        \"label\": \"DataFlows\",\n        \"action\": {\n            \"type\": \"feature\",\n            \"id\": \"data_etl_dataflows\",\n            \"newTab\": false\n        }\n    }\n]"
						}
					]
				},
				{
					"name": "Create Pin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"action\": {\r\n        \"id\": \"automate_workflow\",\r\n        \"type\": \"feature\",\r\n        \"newTab\": false\r\n    },\r\n    \"icon\": \"workflow\",\r\n    \"iconColor\": \"#FFFFFFB3\",\r\n    \"iconBackgroundColor\": \"#FFFFFF00\",\r\n    \"label\": \"<string>\",\r\n    \"userId\": 1234\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/nav/v1/pins/append",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nav",
								"v1",
								"pins",
								"append"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"action\": {\r\n        \"id\": \"automate_workflow\",\r\n        \"type\": \"feature\",\r\n        \"newTab\": false\r\n    },\r\n    \"icon\": \"workflow\",\r\n    \"iconColor\": \"#FFFFFFB3\",\r\n    \"iconBackgroundColor\": \"#FFFFFF00\",\r\n    \"label\": \"<string>\",\r\n    \"userId\": 1234\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/nav/v1/pins/append",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nav",
										"v1",
										"pins",
										"append"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "[\r\n    {\r\n        \"id\": 1,\r\n        \"userId\": 1234,\r\n        \"order\": 0,\r\n        \"icon\": \"database\",\r\n        \"iconColor\": \"#FFFFFFB3\",\r\n        \"iconBackgroundColor\": \"#FFFFFF00\",\r\n        \"label\": \"DataSets\",\r\n        \"action\": {\r\n            \"type\": \"feature\",\r\n            \"id\": \"data_etl_datasources\",\r\n            \"newTab\": false\r\n        }\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"userId\": 1234,\r\n        \"order\": 1,\r\n        \"icon\": \"dataflow\",\r\n        \"iconColor\": \"#FFFFFFB3\",\r\n        \"iconBackgroundColor\": \"#FFFFFF00\",\r\n        \"label\": \"DataFlows\",\r\n        \"action\": {\r\n            \"type\": \"feature\",\r\n            \"id\": \"data_etl_dataflows\",\r\n            \"newTab\": false\r\n        }\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"userId\": 1234,\r\n        \"order\": 2,\r\n        \"icon\": \"workflow\",\r\n        \"iconColor\": \"#FFFFFFB3\",\r\n        \"iconBackgroundColor\": \"#FFFFFF00\",\r\n        \"label\": \"<string>\",\r\n        \"action\": {\r\n            \"id\": \"automate_workflow\",\r\n            \"type\": \"feature\",\r\n            \"newTab\": false\r\n        }\r\n    }\r\n]"
						}
					]
				},
				{
					"name": "Update Pins",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": 1,\r\n        \"userId\": 1234,\r\n        \"order\": 0,\r\n        \"icon\": \"database\",\r\n        \"iconColor\": \"#FFFFFFB3\",\r\n        \"iconBackgroundColor\": \"#FFFFFF00\",\r\n        \"label\": \"DataSets\",\r\n        \"action\": {\r\n            \"type\": \"feature\",\r\n            \"id\": \"data_etl_datasources\",\r\n            \"newTab\": false\r\n        }\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"userId\": 1234,\r\n        \"order\": 1,\r\n        \"icon\": \"dataflow\",\r\n        \"iconColor\": \"#FFFFFFB3\",\r\n        \"iconBackgroundColor\": \"#FFFFFF00\",\r\n        \"label\": \"DataFlows\",\r\n        \"action\": {\r\n            \"type\": \"feature\",\r\n            \"id\": \"data_etl_dataflows\",\r\n            \"newTab\": false\r\n        }\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/nav/v1/pins/append",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nav",
								"v1",
								"pins",
								"append"
							]
						},
						"description": "The order of pins is determined by their position in the array, not by the order property. Domo UI ncludes the order property in the request, but it doesn't affect the order and can be obmitted.  \n  \nTo reorder, send all pins reordered as desired in the array. The order property will be returned updated to match the order of the array."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\": 1,\r\n        \"userId\": 1234,\r\n        \"order\": 0,\r\n        \"icon\": \"database\",\r\n        \"iconColor\": \"#FFFFFFB3\",\r\n        \"iconBackgroundColor\": \"#FFFFFF00\",\r\n        \"label\": \"DataSets\",\r\n        \"action\": {\r\n            \"type\": \"feature\",\r\n            \"id\": \"data_etl_datasources\",\r\n            \"newTab\": false\r\n        }\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"userId\": 1234,\r\n        \"order\": 1,\r\n        \"icon\": \"dataflow\",\r\n        \"iconColor\": \"#FFFFFFB3\",\r\n        \"iconBackgroundColor\": \"#FFFFFF00\",\r\n        \"label\": \"DataFlows\",\r\n        \"action\": {\r\n            \"type\": \"feature\",\r\n            \"id\": \"data_etl_dataflows\",\r\n            \"newTab\": false\r\n        }\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/nav/v1/pins/append",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nav",
										"v1",
										"pins",
										"append"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"userId\": 1234,\n        \"order\": 0,\n        \"icon\": \"database\",\n        \"iconColor\": \"#FFFFFFB3\",\n        \"iconBackgroundColor\": \"#FFFFFF00\",\n        \"label\": \"DataSets\",\n        \"action\": {\n            \"type\": \"feature\",\n            \"id\": \"data_etl_datasources\",\n            \"newTab\": false\n        }\n    },\n    {\n        \"id\": 2,\n        \"userId\": 1234,\n        \"order\": 1,\n        \"icon\": \"dataflow\",\n        \"iconColor\": \"#FFFFFFB3\",\n        \"iconBackgroundColor\": \"#FFFFFF00\",\n        \"label\": \"DataFlows\",\n        \"action\": {\n            \"type\": \"feature\",\n            \"id\": \"data_etl_dataflows\",\n            \"newTab\": false\n        }\n    }\n]"
						}
					]
				}
			]
		},
		{
			"name": "Objectives (Goals)",
			"item": [
				{
					"name": "list Objectives",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/social/v1/objectives/search?filterKeyResults=false&periodId=2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v1",
								"objectives",
								"search"
							],
							"query": [
								{
									"key": "filterKeyResults",
									"value": "false"
								},
								{
									"key": "periodId",
									"value": "2"
								},
								{
									"key": "query",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "list Personal Objectives",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/social/v2/objectives/profile?filterKeyResults=false&includeSampleGoal=false&periodId=1&type=PERSONAL",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v2",
								"objectives",
								"profile"
							],
							"query": [
								{
									"key": "filterKeyResults",
									"value": "false"
								},
								{
									"key": "includeSampleGoal",
									"value": "false"
								},
								{
									"key": "ownerId",
									"value": "",
									"disabled": true
								},
								{
									"key": "periodId",
									"value": "1"
								},
								{
									"key": "type",
									"value": "PERSONAL"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "list Team Objectives",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/social/v2/objectives/teams-profile?filterKeyResults=false&periodId=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v2",
								"objectives",
								"teams-profile"
							],
							"query": [
								{
									"key": "filterKeyResults",
									"value": "false"
								},
								{
									"key": "ownerId",
									"value": "",
									"disabled": true
								},
								{
									"key": "periodId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "list Events",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/social/v1/objectives/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v1",
								"objectives",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "list Tags",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/social/v1/objectives/tags?all=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v1",
								"objectives",
								"tags"
							],
							"query": [
								{
									"key": "all",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "list Categories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/social/v1/objectives/tags/categories?all=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v1",
								"objectives",
								"tags",
								"categories"
							],
							"query": [
								{
									"key": "all",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "list Objectives to Update",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/social/v1/objectives/needs-update?filterKeyResults=false&periodId=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v1",
								"objectives",
								"needs-update"
							],
							"query": [
								{
									"key": "filterKeyResults",
									"value": "false"
								},
								{
									"key": "periodId",
									"value": "1"
								},
								{
									"key": "userId",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "list Objective Drafts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/social/v2/objectives/draft?filterKeyResults=false&periodId=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v2",
								"objectives",
								"draft"
							],
							"query": [
								{
									"key": "filterKeyResults",
									"value": "false"
								},
								{
									"key": "periodId",
									"value": "1"
								},
								{
									"key": "userId",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Company Objectives Report",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/social/v2/objectives/report?filterKeyResults=false&periodId=1&type=COMPANY",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v2",
								"objectives",
								"report"
							],
							"query": [
								{
									"key": "filterKeyResults",
									"value": "false"
								},
								{
									"key": "periodId",
									"value": "1"
								},
								{
									"key": "type",
									"value": "COMPANY"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Key Result Chart",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/social/v1/objectives/key-results/:id/chart",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v1",
								"objectives",
								"key-results",
								":id",
								"chart"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Key Result ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Key Result Values",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/social/v1/objectives/key-results/:id/values",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v1",
								"objectives",
								"key-results",
								":id",
								"values"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Key Result ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Objective",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"<string>\",\r\n    \"description\": \"<string>\",\r\n    \"startsAt\": \"2025-01-01T12:00:00\",\r\n    \"expiresAt\": \"2025-01-01T12:00:00\",\r\n    \"status\": \"GOOD\",\r\n    \"ownerId\": null,\r\n    \"owners\": [\r\n        {\r\n            \"ownerId\": 12345,\r\n            \"ownerType\": \"USER\",\r\n            \"primary\": true\r\n        }\r\n    ],\r\n    \"assignees\": [],\r\n    \"periodId\": 2,\r\n    \"parentId\": null,\r\n    \"keyResults\": [\r\n        {\r\n            \"state\": \"OPEN\",\r\n            \"ownerId\": 12345,\r\n            \"ownerType\": \"USER\",\r\n            \"owners\": [\r\n                {\r\n                    \"ownerId\": 12345,\r\n                    \"ownerType\": \"USER\",\r\n                    \"primary\": true\r\n                }\r\n            ],\r\n            \"alertId\": 123,\r\n            \"resourceId\": \"12345\",\r\n            \"resourceType\": \"CARD\",\r\n            \"name\": \"<string>\",\r\n            \"description\": \"<string>\",\r\n            \"dataAchievementScore\": 0.0,\r\n            \"measurement\": \"\",\r\n            \"startValue\": 1,\r\n            \"currentValue\": 1,\r\n            \"targetValue\": 1,\r\n            \"status\": \"POOR\",\r\n            \"colorValue\": \"#F34847\",\r\n            \"operator\": \"GREATER_THAN_EQUALS_TO\",\r\n            \"likes\": [],\r\n            \"dislikes\": [],\r\n            \"relatedResources\": [],\r\n            \"tags\": [],\r\n            \"writeAccess\": true,\r\n            \"fixedWeight\": false,\r\n            \"targets\": [],\r\n            \"startsAt\": \"2025-01-01T12:00:00\",\r\n            \"expiresAt\": \"2025-01-01T12:00:00\",\r\n            \"curePeriod\": \"2025-01-01T12:00:00\",\r\n            \"draft\": false,\r\n            \"assigned\": false\r\n        }\r\n    ],\r\n    \"tags\": [],\r\n    \"writeAccess\": true,\r\n    \"type\": \"PERSONAL\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/social/v1/objectives",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v1",
								"objectives"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Key Result",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"keyResult\": {\r\n        \"state\": \"OPEN\",\r\n        \"ownerId\": 12345,\r\n        \"ownerType\": \"USER\",\r\n        \"owners\": [\r\n            {\r\n                \"ownerId\": 12345,\r\n                \"ownerType\": \"USER\",\r\n                \"primary\": true\r\n            }\r\n        ],\r\n        \"alertId\": 213,\r\n        \"resourceId\": \"12345\",\r\n        \"resourceType\": \"CARD\",\r\n        \"name\": \"<string>\",\r\n        \"description\": \"<string>\",\r\n        \"dataAchievementScore\": 0.0,\r\n        \"measurement\": \"\",\r\n        \"startValue\": 1,\r\n        \"currentValue\": 1,\r\n        \"targetValue\": 1,\r\n        \"status\": \"POOR\",\r\n        \"colorValue\": \"#F34847\",\r\n        \"operator\": \"GREATER_THAN_EQUALS_TO\",\r\n        \"likes\": [],\r\n        \"dislikes\": [],\r\n        \"relatedResources\": [],\r\n        \"tags\": [],\r\n        \"writeAccess\": true,\r\n        \"fixedWeight\": false,\r\n        \"targets\": [],\r\n        \"startsAt\": \"2025-01-01T12:00:00\",\r\n        \"expiresAt\": \"2025-01-01T12:00:00\",\r\n        \"curePeriod\": \"2025-01-01T12:00:00\",\r\n        \"draft\": false,\r\n        \"assigned\": false\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/social/v1/objectives/key-results",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v1",
								"objectives",
								"key-results"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Tag",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"<string>\",\r\n    \"category\": {\r\n        \"id\": 1,\r\n        \"name\": \"<string>\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/social/v1/objectives/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v1",
								"objectives",
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Category",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"<string>\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/social/v1/objectives/tags/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v1",
								"objectives",
								"tags",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Objective",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (parseInt(pm.request.url.variables.get('id')) !== JSON.parse(pm.request.body.raw).id) {\r",
									"    throw new Error('The URL parameter and body property for \"id\" don\\'t match. Adjust them to match each other and try again.')\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 123,\r\n    \"name\": \"<string>\",\r\n    \"type\": \"PERSONAL\",\r\n    \"description\": \"<string>\",\r\n    \"startsAt\": \"2025-01-01T12:00:00\",\r\n    \"expiresAt\": \"2025-01-01T12:00:00\",\r\n    \"status\": \"NOT_STARTED\",\r\n    \"ownerId\": 12345,\r\n    \"ownerType\": \"USER\",\r\n    \"owners\": [\r\n        {\r\n            \"ownerId\": 12345,\r\n            \"ownerType\": \"USER\",\r\n            \"primary\": true\r\n        }\r\n    ],\r\n    \"assignees\": [],\r\n    \"periodId\": 2,\r\n    \"periodIds\": [\r\n        2\r\n    ],\r\n    \"state\": \"OPEN\",\r\n    \"parentIds\": [],\r\n    \"parents\": [],\r\n    \"keyResults\": [],\r\n    \"childCount\": 0,\r\n    \"autoScore\": 0,\r\n    \"overrideAchievementScore\": 1,\r\n    \"colorValue\": \"#B3B3B3\",\r\n    \"useAutoScore\": false,\r\n    \"childIds\": [],\r\n    \"children\": [],\r\n    \"likes\": [],\r\n    \"dislikes\": [],\r\n    \"subscriptions\": [],\r\n    \"tags\": [],\r\n    \"writeAccess\": true,\r\n    \"company\": false,\r\n    \"draft\": false,\r\n    \"sample\": false,\r\n    \"assigned\": false,\r\n    \"assignee\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/social/v1/objectives/:id?periodId=2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v1",
								"objectives",
								":id"
							],
							"query": [
								{
									"key": "periodId",
									"value": "2"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Objective ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Key Result",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 5,\r\n    \"objectiveId\": 5,\r\n    \"state\": \"OPEN\",\r\n    \"ownerId\": 12345,\r\n    \"ownerType\": \"USER\",\r\n    \"owners\": [\r\n        {\r\n            \"ownerId\": 12345,\r\n            \"ownerType\": \"USER\",\r\n            \"primary\": true\r\n        }\r\n    ],\r\n    \"alertId\": null,\r\n    \"alert\": null,\r\n    \"resourceId\": null,\r\n    \"resourceType\": null,\r\n    \"name\": \"<string>\",\r\n    \"description\": \"\",\r\n    \"dataAchievementScore\": 0,\r\n    \"measurement\": \"t\",\r\n    \"startValue\": 0,\r\n    \"currentValue\": 0,\r\n    \"targetValue\": 2,\r\n    \"status\": \"POOR\",\r\n    \"colorValue\": \"#F34847\",\r\n    \"manualType\": \"VALUE\",\r\n    \"unitType\": \"NUMERICAL\",\r\n    \"operator\": \"EQUALS\",\r\n    \"likes\": [],\r\n    \"dislikes\": [],\r\n    \"relatedResources\": [],\r\n    \"tags\": [\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"<string>\",\r\n            \"category\": null\r\n        }\r\n    ],\r\n    \"writeAccess\": true,\r\n    \"fixedWeight\": false,\r\n    \"targets\": [],\r\n    \"startsAt\": \"2025-01-01T12:00:00\",\r\n    \"expiresAt\": \"2025-01-01T12:00:00\",\r\n    \"curePeriod\": \"2025-01-01T12:00:00\",\r\n    \"draft\": false,\r\n    \"assigned\": false,\r\n    \"targetUpperValue\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/social/v1/objectives/key-results/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v1",
								"objectives",
								"key-results",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Key Result ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Key Result Tags",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    1\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/social/v1/objectives/key-results/:id/tags?periodId=2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v1",
								"objectives",
								"key-results",
								":id",
								"tags"
							],
							"query": [
								{
									"key": "periodId",
									"value": "2"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Key Result ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Tag",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 2,\r\n    \"name\": \"<string>\",\r\n    \"category\": {\r\n        \"id\": 1,\r\n        \"name\": \"<string>\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/social/v1/objectives/tags/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v1",
								"objectives",
								"tags",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Tag ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Category",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (parseInt(pm.request.url.variables.get('id')) !== JSON.parse(pm.request.body.raw).id) {\r",
									"    throw new Error('The URL parameter and body property for \"id\" don\\'t match. Adjust them to match each other and try again.')\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"name\": \"<string>\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/social/v1/objectives/tags/categories/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v1",
								"objectives",
								"tags",
								"categories",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Objective",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "/social/v1/objectives/:id",
							"path": [
								"social",
								"v1",
								"objectives",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Objective ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Key Result",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/social/v1/objectives/key-results/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v1",
								"objectives",
								"key-results",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Key Result ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Tag",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/social/v1/objectives/tags/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v1",
								"objectives",
								"tags",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Tag ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Category",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/social/v1/objectives/tags/categories/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"social",
								"v1",
								"objectives",
								"tags",
								"categories",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "[Goals Official Documentation](https://domo-support.domo.com/s/topic/0TO5w000000ZanmGAC/goals-center?language=en_US)"
		},
		{
			"name": "Pages (Dashboards)",
			"item": [
				{
					"name": "Layouts",
					"item": [
						{
							"name": "Get Layout",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/content/v4/pages/layouts/:layoutId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content",
										"v4",
										"pages",
										"layouts",
										":layoutId"
									],
									"variable": [
										{
											"key": "layoutId",
											"value": "",
											"description": "Layout ID"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Writelock",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/content/v4/pages/layouts/:layoutId/writelock",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content",
										"v4",
										"pages",
										"layouts",
										":layoutId",
										"writelock"
									],
									"variable": [
										{
											"key": "layoutId",
											"value": "",
											"description": "Layout ID"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Layout",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"layoutId\": 123456,\r\n    \"pageUrn\": \"224746953\",\r\n    \"printFriendly\": true,\r\n    \"background\": null,\r\n    \"isDynamic\": true,\r\n    \"content\": [\r\n        {\r\n            \"id\": 1234,\r\n            \"contentKey\": 0,\r\n            \"compactInteractionDefault\": true,\r\n            \"formInstanceId\": \"<form_instance_uuid>\",\r\n            \"acceptFilters\": true,\r\n            \"style\": {\r\n                \"sourceId\": \"fo1\",\r\n                \"textColor\": \"dark\"\r\n            },\r\n            \"type\": \"FORM\"\r\n        }\r\n    ],\r\n    \"standard\": {\r\n        \"aspectRatio\": 1.67,\r\n        \"width\": 60,\r\n        \"frameMargin\": 4,\r\n        \"framePadding\": 8,\r\n        \"type\": \"STANDARD\",\r\n        \"template\": [\r\n            {\r\n                \"contentKey\": 2,\r\n                \"x\": 0,\r\n                \"y\": 0,\r\n                \"width\": 60,\r\n                \"height\": 5,\r\n                \"type\": \"FORM\",\r\n                \"virtual\": false,\r\n                \"virtualAppendix\": false,\r\n                \"children\": []\r\n            }\r\n        ]\r\n    },\r\n    \"compact\": {\r\n        \"aspectRatio\": 1,\r\n        \"width\": 12,\r\n        \"frameMargin\": 4,\r\n        \"framePadding\": 8,\r\n        \"type\": \"COMPACT\",\r\n        \"template\": [\r\n            {\r\n                \"contentKey\": 2,\r\n                \"x\": 0,\r\n                \"y\": 0,\r\n                \"width\": 12,\r\n                \"height\": 2,\r\n                \"type\": \"FORM\",\r\n                \"virtual\": false,\r\n                \"virtualAppendix\": false,\r\n                \"children\": []\r\n            }\r\n        ]\r\n    },\r\n    \"hasPageBreaks\": false,\r\n    \"style\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/content/v4/pages/layouts/:layoutId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content",
										"v4",
										"pages",
										"layouts",
										":layoutId"
									],
									"variable": [
										{
											"key": "layoutId",
											"value": "",
											"description": "Layout ID"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Writelock",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/content/v4/pages/layouts/:id/writelock",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content",
										"v4",
										"pages",
										"layouts",
										":id",
										"writelock"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "Layout ID"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Filter Views",
					"item": [
						{
							"name": "list Filter Views",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/content/v3/pages/:pageId/analyzer/named",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content",
										"v3",
										"pages",
										":pageId",
										"analyzer",
										"named"
									],
									"variable": [
										{
											"key": "pageId",
											"value": "",
											"description": "Page ID"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Filter View",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"analyzerId\": 123456,\r\n    \"name\": \"<string>\",\r\n    \"type\": \"NAMED\",\r\n    \"scope\": \"PAGE\",\r\n    \"ownerId\": \"466826668\",\r\n    \"isDefault\": true,\r\n    \"order\": null,\r\n    \"filters\": [\r\n        {\r\n            \"column\": \"Column 1\",\r\n            \"operand\": \"IN\",\r\n            \"values\": [\r\n                \"<string>\"\r\n            ],\r\n            \"dataType\": \"string\",\r\n            \"filterType\": \"LEGACY\",\r\n            \"affectedCardUrns\": [],\r\n            \"key\": \"Column 1\"\r\n        }\r\n    ],\r\n    \"graphBy\": null,\r\n    \"functionOverrides\": {},\r\n    \"segmentIds\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/content/v3/pages/:pageId/analyzer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content",
										"v3",
										"pages",
										":pageId",
										"analyzer"
									],
									"variable": [
										{
											"key": "pageId",
											"value": "",
											"description": "Page ID"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Filter View",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/content/v3/pages/analyzer/:filterViewId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content",
										"v3",
										"pages",
										"analyzer",
										":filterViewId"
									],
									"variable": [
										{
											"key": "filterViewId",
											"value": "",
											"description": "Filter View ID"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "[Filter Views Official Documentation](https://domo-support.domo.com/s/article/360042923914?language=en_US)"
				},
				{
					"name": "list Pages Admin Summary",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"includePageTitleClause\": true,\r\n    \"orderBy\": \"createdTime\",\r\n    \"pageTitleSearchText\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v1/pages/adminsummary?limit=15&skip=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"pages",
								"adminsummary"
							],
							"query": [
								{
									"key": "limit",
									"value": "15"
								},
								{
									"key": "skip",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "list Access",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/share/accesslist/page/:id?expandUsers=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"share",
								"accesslist",
								"page",
								":id"
							],
							"query": [
								{
									"key": "filter",
									"value": "",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "",
									"disabled": true
								},
								{
									"key": "expandUsers",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Page ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Page",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v3/stacks/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v3",
								"stacks",
								":id"
							],
							"query": [
								{
									"key": "stackLoadContextId",
									"value": "1799789482",
									"disabled": true
								},
								{
									"key": "includeV4PageLayouts",
									"value": "true",
									"disabled": true
								},
								{
									"key": "stackLoadContext",
									"value": "Page",
									"disabled": true
								},
								{
									"key": "stackLoadTrigger",
									"value": "page-view",
									"disabled": true
								},
								{
									"key": "parts",
									"value": "metadata,datasources,library,drillPathURNs,owners,certification,dateInfo,subscriptions,slicers,metadataOverrides",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Page ID. Append \"/cards\" to return all Cards on Page."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Navigation Page Order (Individual User)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v2/pages/navigation?includeStartPage=true&elevateSharedPage=true&includeHidden=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v2",
								"pages",
								"navigation"
							],
							"query": [
								{
									"key": "includeStartPage",
									"value": "true"
								},
								{
									"key": "elevateSharedPage",
									"value": "true"
								},
								{
									"key": "includeHidden",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Share Access",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resources\": [\r\n        {\r\n            \"type\": \"page\",\r\n            \"id\": \"121730951\"\r\n        }\r\n    ],\r\n    \"recipients\": [\r\n        {\r\n            \"type\": \"\", //user or group. Must be lowercase.\r\n            \"id\": \"1074337521\"\r\n        }\r\n    ],\r\n    \"message\": \"I thought you might find this interesting.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v1/share?sendEmail=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"share"
							],
							"query": [
								{
									"key": "sendEmail",
									"value": "false"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Move Pages",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"parentPageId\": 1602735973, //remove to make top level page\r\n    \"pageIds\": [\r\n        1337839338\r\n    ],\r\n    \"pagePermission\": \"ORIGINAL\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v1/pages/bulk/move",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"pages",
								"bulk",
								"move"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reorder Pages (Individual User)",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"pageOrderMap\": {\r\n    //Use object key 0 for top level pages. Use a page ID as the key to order its subpages\r\n        \"0\": \"<page_id>, <page_id>\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v1/pages/pageorder",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"pages",
								"pageorder"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Page",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"<string>\",\r\n    \"locked\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v1/pages/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"pages",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Page ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Access",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/share/bulk/page/:type/:id?resourceIds=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"share",
								"bulk",
								"page",
								":type",
								":id"
							],
							"query": [
								{
									"key": "resourceIds",
									"value": "",
									"description": "Comma separated list of Page IDs"
								}
							],
							"variable": [
								{
									"key": "type",
									"value": "user",
									"description": "user or group"
								},
								{
									"key": "id",
									"value": "",
									"description": "User or Group ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Page",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/pages/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"pages",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Page ID"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "[Dashboards Official Documentation](https://domo-support.domo.com/s/article/360043428553?language=en_US)"
		},
		{
			"name": "Publications (Slideshows)",
			"item": [
				{
					"name": "list Publications",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/reports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"reports"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/content/v1/reports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content",
										"v1",
										"reports"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"domain": "",
									"path": ""
								}
							],
							"body": "[\r\n    {\r\n        \"id\": 1234,\r\n        \"ownerId\": 1234,\r\n        \"title\": \"<string>\",\r\n        \"created\": 1735689600000,\r\n        \"updated\": 1735689600000,\r\n        \"subject\": null,\r\n        \"properties\": {\r\n            \"isShared\": true,\r\n            \"tokenId\": null,\r\n            \"isAccessCodeRequired\": false,\r\n            \"accessCode\": null\r\n        },\r\n        \"cardIds\": [\r\n            1234,\r\n            2345\r\n        ],\r\n        \"schedule\": null\r\n    }\r\n]"
						}
					]
				},
				{
					"name": "Create Publication",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"<string>\",\r\n    \"type\": \"slideshow\",\r\n    \"properties\": {\r\n        \"isShared\": false,\r\n        \"tokenId\": null,\r\n        \"isAccessCodeRequired\": false,\r\n        \"accessCode\": null\r\n    },\r\n    \"cardIds\": [\r\n        \"1234\",\r\n        \"2345\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v1/reports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"reports"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"<string>\",\r\n    \"type\": \"slideshow\",\r\n    \"properties\": {},\r\n    \"cardIds\": [\r\n        \"1234\",\r\n        \"2345\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/content/v1/reports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content",
										"v1",
										"reports"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\": 1234,\r\n    \"ownerId\": 1234,\r\n    \"title\": \"<string>\",\r\n    \"created\": null,\r\n    \"updated\": null,\r\n    \"subject\": null,\r\n    \"properties\": {\r\n        \"isShared\": false,\r\n        \"tokenId\": null,\r\n        \"isAccessCodeRequired\": false,\r\n        \"accessCode\": null\r\n    },\r\n    \"cardIds\": [\r\n        1234,\r\n        2345\r\n    ],\r\n    \"schedule\": null\r\n}"
						}
					]
				},
				{
					"name": "Update Publication",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (pm.request.url.variables.get('id') != JSON.parse(pm.request.body.raw).id) {\r",
									"    throw new Error('The URL parameter and body property for \"id\" don\\'t match. Adjust them to match each other and try again.')\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1234,\r\n    \"ownerId\": 1234,\r\n    \"title\": \"<string>\",\r\n    \"created\": null,\r\n    \"updated\": null,\r\n    \"subject\": null,\r\n    \"schedule\": null,\r\n    \"properties\": {\r\n        \"isShared\": false,\r\n        \"tokenId\": null,\r\n        \"isAccessCodeRequired\": false,\r\n        \"accessCode\": null\r\n    },\r\n    \"cardIds\": [\r\n        1234,\r\n        \"2345\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v1/reports/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"reports",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Publication ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 1234,\r\n    \"ownerId\": 1234,\r\n    \"title\": \"<string>\",\r\n    \"created\": null,\r\n    \"updated\": null,\r\n    \"subject\": null,\r\n    \"schedule\": null,\r\n    \"properties\": {\r\n        \"isShared\": false,\r\n        \"tokenId\": null,\r\n        \"isAccessCodeRequired\": false,\r\n        \"accessCode\": null\r\n    },\r\n    \"cardIds\": [\r\n        1234,\r\n        \"2345\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/content/v1/reports/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content",
										"v1",
										"reports",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1234"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"id\": 1234,\r\n    \"ownerId\": 1234,\r\n    \"title\": \"<string>\",\r\n    \"created\": 1735689600000,\r\n    \"updated\": 1735689600000,\r\n    \"subject\": null,\r\n    \"properties\": {\r\n        \"isShared\": false,\r\n        \"tokenId\": null,\r\n        \"isAccessCodeRequired\": false,\r\n        \"accessCode\": null\r\n    },\r\n    \"cardIds\": [\r\n        1234,\r\n        2345\r\n    ],\r\n    \"schedule\": null\r\n}"
						}
					]
				},
				{
					"name": "Delete Publication",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/reports/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"reports",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/content/v1/reports/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content",
										"v1",
										"reports",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1234"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				}
			],
			"description": "[Slideshow Publications Official Documentation](https://domo-support.domo.com/s/topic/0TO5w000000Zao7GAC/slideshow-publications?language=en_US)"
		},
		{
			"name": "Roles",
			"item": [
				{
					"name": "list Roles",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/authorization/v1/roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authorization",
								"v1",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "list Grants",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/authorization/v1/authorities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authorization",
								"v1",
								"authorities"
							]
						}
					},
					"response": []
				},
				{
					"name": "list Users with a Certain Grant",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/typeahead?authorities=content.card.edit&limit=10&type=userByName&type=userByEmail",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"typeahead"
							],
							"query": [
								{
									"key": "authorities",
									"value": "content.card.edit",
									"description": "Grant"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "type",
									"value": "userByName"
								},
								{
									"key": "type",
									"value": "userByEmail"
								},
								{
									"key": "filter",
									"value": "",
									"disabled": true
								},
								{
									"key": "fields",
									"value": "USER_TRIAL_DETAILS",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Role",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/authorization/v1/roles/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authorization",
								"v1",
								"roles",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Role ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Role Grants",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/authorization/v1/roles/:id/authorities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authorization",
								"v1",
								"roles",
								":id",
								"authorities"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Role ID"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "[Roles Official Documentation](https://domo-support.domo.com/s/topic/0TO5w000000ZapEGAS/roles?language=en_US)"
		},
		{
			"name": "Sandbox",
			"item": [
				{
					"name": "list Repositories",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"query\": {\r\n        \"offset\": 0,\r\n        \"limit\": 50,\r\n        \"fieldSearchMap\": {},\r\n        \"sort\": \"started\",\r\n        \"order\": \"desc\",\r\n        \"filters\": {\r\n            \"userId\": null\r\n        },\r\n        \"dateFilters\": {}\r\n    },\r\n    \"shared\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/version/v1/repositories/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"version",
								"v1",
								"repositories",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "list Promotion History",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"offset\": 0,\r\n    \"limit\": 500,\r\n    \"filters\": {\r\n        \"repositoryName\": [\r\n            \"Sandbox Testing Link\"\r\n        ],\r\n        \"commitName\": [],\r\n        \"status\": [],\r\n        \"userId\": []\r\n    },\r\n    \"fieldSearchMap\": {},\r\n    \"sort\": \"completed\",\r\n    \"order\": \"desc\",\r\n    \"searchDistinct\": false,\r\n    \"dateFilters\": {}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/version/v1/promotions/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"version",
								"v1",
								"promotions",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "list Commit History",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"offset\": 0,\r\n    \"limit\": 500,\r\n    \"filters\": {\r\n        \"repositoryName\": [],\r\n        \"commitName\": [],\r\n        \"status\": []\r\n    },\r\n    \"fieldSearchMap\": {},\r\n    \"sort\": \"completed\",\r\n    \"order\": \"desc\",\r\n    \"searchDistinct\": false,\r\n    \"dateFilters\": {}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/version/v1/commitRequests/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"version",
								"v1",
								"commitRequests",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "list Instances",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/version/v1/authorizations?limit=250",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"version",
								"v1",
								"authorizations"
							],
							"query": [
								{
									"key": "limit",
									"value": "250"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Repository",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/version/v1/repositories/:repositoryId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"version",
								"v1",
								"repositories",
								":repositoryId"
							],
							"variable": [
								{
									"key": "repositoryId",
									"value": "",
									"description": "Repository UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Repository Commits",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/version/v1/repositories/:repositoryId/commits",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"version",
								"v1",
								"repositories",
								":repositoryId",
								"commits"
							],
							"variable": [
								{
									"key": "repositoryId",
									"value": "",
									"description": "Repository UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Sandbox Settings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/version/v1/settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"version",
								"v1",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Promote and Link",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"commitId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"mapping\": [\r\n        {\r\n            \"mappingId\": \"00000000-0000-0000-0000-000000000000\",\r\n            \"deployObjectId\": \"00000000-0000-0000-0000-000000000000\",\r\n            \"repositoryObjectId\": \"00000000-0000-0000-0000-000000000000\",\r\n            \"contentType\": \"DATASET\",\r\n            \"link\": false\r\n        }\r\n    ],\r\n    \"pusherEventId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"approvalId\": \"\",\r\n    \"seedingRepoName\": \"<string>\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/version/v1/repositories/:repositoryId/deployments/:deploymentId/promoteAndSeed",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"version",
								"v1",
								"repositories",
								":repositoryId",
								"deployments",
								":deploymentId",
								"promoteAndSeed"
							],
							"variable": [
								{
									"key": "repositoryId",
									"value": "",
									"description": "Respository UUID"
								},
								{
									"key": "deploymentId",
									"value": "",
									"description": "Deployment UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Commit",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"summary\": \"<string>\",\r\n    \"hidden\": false,\r\n    \"pusherEventId\": \"00000000-0000-0000-0000-000000000000\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/version/v1/repositories/:repositoryId/commitRequests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"version",
								"v1",
								"repositories",
								":repositoryId",
								"commitRequests"
							],
							"variable": [
								{
									"key": "repositoryId",
									"value": "",
									"description": "Repository UUID"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "[Sandbox Official Documentation](https://domo-support.domo.com/s/topic/0TO5w000000ZmNmGAK/domo-sandbox?language=en_US)"
		},
		{
			"name": "Scheduled Reports",
			"item": [
				{
					"name": "list Scheduled Reports",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/reportschedules?filter=USER&isAscending=true&orderBy=title",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"reportschedules"
							],
							"query": [
								{
									"key": "filter",
									"value": "USER",
									"description": "USER, RECIPIENT, or OWNER"
								},
								{
									"key": "isAscending",
									"value": "true"
								},
								{
									"key": "orderBy",
									"value": "title"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Scheduled Report",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/reportschedules/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"reportschedules",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Scheduled Report ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Scheduled Report History",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/reportschedules/:id/history?limit=100&skip=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"reportschedules",
								":id",
								"history"
							],
							"query": [
								{
									"key": "limit",
									"value": "100"
								},
								{
									"key": "skip",
									"value": "0"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Scheduled Report ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Card View",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v2/views/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v2",
								"views",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Card View ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Scheduled Report History",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"includeTypeClause\": false,\r\n    \"isAutomated\": false,\r\n    \"includeTitleClause\": false,\r\n    \"includeStatusClause\": true,\r\n    \"includeScheduleIdClause\": true,\r\n    \"scheduleId\": \"120\",\r\n    \"status\": \"success\" //success or failure\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v1/reportschedules/history/search?limit=30&skip=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"reportschedules",
								"history",
								"search"
							],
							"query": [
								{
									"key": "limit",
									"value": "30"
								},
								{
									"key": "skip",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Send Scheduled Report",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"type\": \"USER\",\r\n        \"value\": \"123456\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v1/reportschedules/:id/sendnow",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"reportschedules",
								":id",
								"sendnow"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Scheduled Report ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Card View (For Scheduled Report)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"<string>\",\r\n    \"resourceType\": \"CARD\",\r\n    \"resourceId\": 123456,\r\n    \"type\": \"VIEW\",\r\n    \"purpose\": \"REPORT\",\r\n    \"filterGroupIds\": [],\r\n    \"filters\": [],\r\n    \"functionOverrides\": {},\r\n    \"chartState\": {\r\n        \"chartType\": \"badge_basic_table\",\r\n        \"overrides\": {\r\n            \"hide_series\": \"none\",\r\n            \"series_filter\": \"none\",\r\n            \"row_filter\": \"none\",\r\n            \"range_filter_y\": \"none\",\r\n            \"range_filter_x\": \"none\",\r\n            \"range_filter_cat_x\": \"none\",\r\n            \"range_filter_time\": \"none\",\r\n            \"collapsed_filters\": \"none\",\r\n            \"column_sort\": \"[{\\\"column\\\":\\\"Date\\\",\\\"sort\\\":\\\"asc\\\"}]\"\r\n        }\r\n    },\r\n    \"overrideDateRange\": true,\r\n    \"overrideSlicers\": true,\r\n    \"segmentIds\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v2/views",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v2",
								"views"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Scheduled Report",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"subject\": \"<string>\",\r\n    \"attachmentInclude\": true,\r\n    \"schedule\": {\r\n        \"frequency\": \"WEEKLY\",\r\n        \"enabled\": true,\r\n        \"daysToRun\": \"1\",\r\n        \"hourOfDay\": \"11\",\r\n        \"minOfHour\": \"11\",\r\n        \"expirationDate\": 123456789000,\r\n        \"startDate\": 123456789000,\r\n        \"additionalRecipients\": [\r\n            {\r\n                \"type\": \"USER\",\r\n                \"value\": \"123456\",\r\n                \"email\": \"test@email.com\"\r\n            }\r\n        ]\r\n    },\r\n    \"viewId\": 123456\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v1/reportschedules",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"reportschedules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Scheduled Report",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 123,\r\n    \"title\": \"<string>\",\r\n    \"ownerId\": 123456,\r\n    \"owner\": false,\r\n    \"schedule\": {\r\n        \"frequency\": \"WEEKLY\",\r\n        \"ownerId\": 123456,\r\n        \"daysToRun\": \"1\",\r\n        \"hourOfDay\": 11,\r\n        \"minOfHour\": 11,\r\n        \"expirationDate\": 1234567890000,\r\n        \"timezone\": \"America/New_York\",\r\n        \"additionalRecipients\": [\r\n            {\r\n                \"type\": \"USER\",\r\n                \"value\": \"123456\"\r\n            }\r\n        ],\r\n        \"nextRunDate\": 1234567890000,\r\n        \"startDate\": 1234567890000,\r\n        \"unsubscribedRecipients\": [],\r\n        \"enabled\": true,\r\n        \"embedReport\": false\r\n    },\r\n    \"subject\": \"<string>\",\r\n    \"viewId\": 123456,\r\n    \"active\": true,\r\n    \"attachmentInclude\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v1/reportschedules/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"reportschedules",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Scheduled Report ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Card View (For Scheduled Report)",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 123456,\r\n    \"name\": \"<string>\",\r\n    \"type\": \"VIEW\",\r\n    \"resourceType\": \"CARD\",\r\n    \"resourcePrefix\": null,\r\n    \"resourceId\": 123456,\r\n    \"locked\": false,\r\n    \"active\": true,\r\n    \"ownerId\": 123456,\r\n    \"description\": null,\r\n    \"filters\": [\r\n        {\r\n            \"column\": \"Column 1\",\r\n            \"operand\": \"IN\",\r\n            \"values\": [\r\n                \"Lost\"\r\n            ],\r\n            \"dataType\": \"string\",\r\n            \"filterType\": \"LEGACY\",\r\n            \"affectedCardUrns\": [],\r\n            \"label\": \"<string>\",\r\n            \"dataSourceId\": \"00000000-0000-0000-0000-000000000000\",\r\n            \"sourceCardURN\": \"\"\r\n        }\r\n    ],\r\n    \"created\": 1234567890000,\r\n    \"modified\": 1234567890000,\r\n    \"filterGroupIds\": [],\r\n    \"chartStates\": [],\r\n    \"chartType\": \"badge_basic_table\",\r\n    \"chartOverrides\": [\r\n        {\r\n            \"key\": \"row_filter\",\r\n            \"value\": \"none\"\r\n        }\r\n    ],\r\n    \"rowFilterOverride\": \"none\",\r\n    \"filterGroups\": [],\r\n    \"purpose\": \"REPORT\",\r\n    \"dateRangeFilter\": null,\r\n    \"overrideDateRange\": true,\r\n    \"backgroundId\": null,\r\n    \"fitToFrame\": false,\r\n    \"darkMode\": false,\r\n    \"segmentIds\": [],\r\n    \"functionOverrides\": {},\r\n    \"dataControlFilters\": [],\r\n    \"overrideSlicers\": true,\r\n    \"chartState\": {\r\n        \"chartType\": \"badge_basic_table\",\r\n        \"overrides\": {\r\n            \"hide_series\": \"none\",\r\n            \"series_filter\": \"none\",\r\n            \"row_filter\": \"none\",\r\n            \"range_filter_y\": \"none\",\r\n            \"range_filter_x\": \"none\",\r\n            \"range_filter_cat_x\": \"none\",\r\n            \"range_filter_time\": \"none\",\r\n            \"collapsed_filters\": \"none\",\r\n            \"column_sort\": \"[{\\\"column\\\":\\\"Column 1\\\",\\\"sort\\\":\\\"asc\\\"}]\"\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v2/views/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v2",
								"views",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Card View ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Enable/Disable Scheduled Report",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "false",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v1/reportschedules/:id/enabled",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"reportschedules",
								":id",
								"enabled"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Scheduled Report ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Scheduled Report",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/reportschedules/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"reportschedules",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Scheduled Report ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Unsubscribe (Resubscribe Signed In User)",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/reportschedules/:id/unsubscribe/recipient",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"reportschedules",
								":id",
								"unsubscribe",
								"recipient"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Scheduled Report ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Unsubscribe (Signed In User)",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/reportschedules/:id/unsubscribe",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"reportschedules",
								":id",
								"unsubscribe"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Scheduled Report ID"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "[Scheduled Reports Official Documentation](https://domo-support.domo.com/s/article/360043437773?language=en_US)"
		},
		{
			"name": "Toolkit",
			"item": [
				{
					"name": "list Applications",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/executor/v1/applications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"executor",
								"v1",
								"applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Jobs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/executor/v2/applications/:applicationId/jobs?limit=100&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"executor",
								"v2",
								"applications",
								":applicationId",
								"jobs"
							],
							"query": [
								{
									"key": "limit",
									"value": "100"
								},
								{
									"key": "offset",
									"value": "0"
								}
							],
							"variable": [
								{
									"key": "applicationId",
									"value": "",
									"description": "Application UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Job",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/executor/v1/applications/:applicationId/jobs/:jobId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"executor",
								"v1",
								"applications",
								":applicationId",
								"jobs",
								":jobId"
							],
							"variable": [
								{
									"key": "applicationId",
									"value": "",
									"description": "Application UUID"
								},
								{
									"key": "jobId",
									"value": "",
									"description": "Job UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Run Job",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/executor/v1/applications/:applicationId/jobs/:jobId/executions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"executor",
								"v1",
								"applications",
								":applicationId",
								"jobs",
								":jobId",
								"executions"
							],
							"variable": [
								{
									"key": "applicationId",
									"value": "",
									"description": "Application UUID"
								},
								{
									"key": "jobId",
									"value": "",
									"description": "Job UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Share/Unshare Job",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ownerUserId\": 123456,\r\n    \"grantUserIds\": [],\r\n    \"revokeUserIds\": [],\r\n    \"grantGroupIds\": [\r\n        123456\r\n    ],\r\n    \"revokeGroupIds\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/executor/v1/applications/:applicationId/jobs/:jobId/share",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"executor",
								"v1",
								"applications",
								":applicationId",
								"jobs",
								":jobId",
								"share"
							],
							"variable": [
								{
									"key": "applicationId",
									"value": "",
									"description": "Application UUID"
								},
								{
									"key": "jobId",
									"value": "",
									"description": "Job UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Trigger",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"eventEntity\": \"00000000-0000-0000-0000-000000000000\", //DataSet UUID\r\n    \"eventType\": \"datasetUpdated\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/executor/v1/applications/:appId/jobs/:jobId/triggers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"executor",
								"v1",
								"applications",
								":appId",
								"jobs",
								":jobId",
								"triggers"
							],
							"variable": [
								{
									"key": "appId",
									"value": "",
									"description": "Application UUID"
								},
								{
									"key": "jobId",
									"value": "",
									"description": "Job UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Job",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"jobId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"applicationId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"customerId\": \"<string>\",\r\n    \"jobName\": \"<string>\",\r\n    \"jobDescription\": \"<string>\",\r\n    \"userId\": 123456,\r\n    \"executionTimeout\": 1440,\r\n    \"jobStatus\": \"idle\",\r\n    \"executionPayload\": {},\r\n    \"executionResponse\": {},\r\n    \"accounts\": [\r\n        123\r\n    ],\r\n    \"executionClass\": \"com.domo.executor.dataset.DataSetSharingApplication\",\r\n    \"created\": 1735689600000,\r\n    \"updated\": 1735689600000,\r\n    \"triggers\": [],\r\n    \"compressPayload\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/executor/v1/applications/:appId/jobs/:jobId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"executor",
								"v1",
								"applications",
								":appId",
								"jobs",
								":jobId"
							],
							"variable": [
								{
									"key": "appId",
									"value": "",
									"description": "Application UUID"
								},
								{
									"key": "jobId",
									"value": "",
									"description": "Job UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Job",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/executor/v1/applications/:appId/jobs/:jobId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"executor",
								"v1",
								"applications",
								":appId",
								"jobs",
								":jobId"
							],
							"variable": [
								{
									"key": "appId",
									"value": "",
									"description": "Application UUID"
								},
								{
									"key": "jobId",
									"value": "",
									"description": "Job UUID"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "[Toolkit Official Documentation](https://domo-support.domo.com/s/topic/0TO5w000000ZlStGAK/toolkit?language=en_US)"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Search Users",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cacheBuster\": 1700000000000,\r\n    \"showCount\": true,\r\n    \"count\": false,\r\n    \"includeDeleted\": true,\r\n    \"onlyDeleted\": false,\r\n    \"includeSupport\": true,\r\n    \"offset\": 0,\r\n    \"limit\": 100,\r\n    \"sort\": {\r\n        \"field\": \"displayName\",\r\n        \"order\": \"ASC\"\r\n    },\r\n    \"filters\": [\r\n        {\r\n            \"field\": \"reportsTo\",\r\n            \"values\": [\r\n                \"123456\"\r\n            ],\r\n            \"operator\": \"EQ\",\r\n            \"filterType\": \"value\"\r\n        }\r\n    ],\r\n    \"ids\": [],\r\n    \"attributes\": [\r\n        \"id\",\r\n        \"displayName\",\r\n        \"department\",\r\n        \"userName\",\r\n        \"emailAddress\",\r\n        \"phoneNumber\",\r\n        \"deskPhoneNumber\",\r\n        \"title\",\r\n        \"timeZone\",\r\n        \"hireDate\",\r\n        \"modified\",\r\n        \"created\",\r\n        \"alternateEmail\",\r\n        \"employeeLocation\",\r\n        \"employeeNumber\",\r\n        \"employeeId\",\r\n        \"locale\",\r\n        \"roleId\",\r\n        \"reportsTo\",\r\n        \"isAnonymous\",\r\n        \"isSystemUser\",\r\n        \"isPending\",\r\n        \"isActive\",\r\n        \"invitorUserId\",\r\n        \"lastActivity\"\r\n    ],\r\n    \"parts\":[\"DETAILED\",\"GROUPS\",\"ROLE\",\"MINIMAL\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/identity/v1/users/search?explain=false&cacheBuster=1700000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"identity",
								"v1",
								"users",
								"search"
							],
							"query": [
								{
									"key": "explain",
									"value": "false"
								},
								{
									"key": "cacheBuster",
									"value": "1700000000000",
									"description": "Epoch timestamp in miliseconds"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "list Users (identity/v1)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/identity/v1/users/?limit=100&offset=0&attributes=id,\ndisplayName,\ndepartment,\nuserName,\nemailAddress,\nphoneNumber,\ndeskPhoneNumber,\ntitle,\ntimeZone,\nhireDate,\nmodified,\ncreated,\nalternateEmail,\nemployeeLocation,\nemployeeNumber,\nemployeeId,\nlocale,\nroleId,\nreportsTo,\nisAnonymous,\nisSystemUser,\nisPending,\nisActive,\ninvitorUserId,\nlastActivity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"identity",
								"v1",
								"users",
								""
							],
							"query": [
								{
									"key": "limit",
									"value": "100"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "attributes",
									"value": "id,\ndisplayName,\ndepartment,\nuserName,\nemailAddress,\nphoneNumber,\ndeskPhoneNumber,\ntitle,\ntimeZone,\nhireDate,\nmodified,\ncreated,\nalternateEmail,\nemployeeLocation,\nemployeeNumber,\nemployeeId,\nlocale,\nroleId,\nreportsTo,\nisAnonymous,\nisSystemUser,\nisPending,\nisActive,\ninvitorUserId,\nlastActivity",
									"description": "Comma separated list of user attributes to return. Returned by default: id, displayName, userName, emailAddress, roleId."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/identity/v1/users/?limit=100&offset=0&attributes=id,\ndisplayName,\ndepartment,\nuserName,\nemailAddress,\nphoneNumber,\ndeskPhoneNumber,\ntitle,\ntimeZone,\nhireDate,\nmodified,\ncreated,\nalternateEmail,\nemployeeLocation,\nemployeeNumber,\nemployeeId,\nlocale,\nroleId,\nreportsTo,\nisAnonymous,\nisSystemUser,\nisPending,\nisActive,\ninvitorUserId,\nlastActivity",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity",
										"v1",
										"users",
										""
									],
									"query": [
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "attributes",
											"value": "id,\ndisplayName,\ndepartment,\nuserName,\nemailAddress,\nphoneNumber,\ndeskPhoneNumber,\ntitle,\ntimeZone,\nhireDate,\nmodified,\ncreated,\nalternateEmail,\nemployeeLocation,\nemployeeNumber,\nemployeeId,\nlocale,\nroleId,\nreportsTo,\nisAnonymous,\nisSystemUser,\nisPending,\nisActive,\ninvitorUserId,\nlastActivity"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"users\": [\n        {\n            \"attributes\": [\n                {\n                    \"key\": \"id\",\n                    \"values\": [\n                        1234\n                    ]\n                },\n                {\n                    \"key\": \"displayName\",\n                    \"values\": [\n                        \"<string>\"\n                    ]\n                },\n                {\n                    \"key\": \"department\",\n                    \"values\": [\n                        \"<string>\"\n                    ]\n                },\n                {\n                    \"key\": \"userName\",\n                    \"values\": [\n                        \"<string>\"\n                    ]\n                },\n                {\n                    \"key\": \"emailAddress\",\n                    \"values\": [\n                        \"email@domain.tld\"\n                    ]\n                },\n                {\n                    \"key\": \"phoneNumber\",\n                    \"values\": [\n                        \"000-000-0000\"\n                    ]\n                },\n                {\n                    \"key\": \"deskPhoneNumber\",\n                    \"values\": [\n                        \"000-000-0000\"\n                    ]\n                },\n                {\n                    \"key\": \"title\",\n                    \"values\": [\n                        \"<string>\"\n                    ]\n                },\n                {\n                    \"key\": \"timeZone\",\n                    \"values\": [\n                        \"UTC\"\n                    ]\n                },\n                {\n                    \"key\": \"hireDate\",\n                    \"values\": [\n                        1735689600000\n                    ]\n                },\n                {\n                    \"key\": \"modified\",\n                    \"values\": [\n                        1735689600000\n                    ]\n                },\n                {\n                    \"key\": \"created\",\n                    \"values\": [\n                        1735689600000\n                    ]\n                },\n                {\n                    \"key\": \"alternateEmail\",\n                    \"values\": [\n                        \"email@domain.tld\"\n                    ]\n                },\n                {\n                    \"key\": \"employeeLocation\",\n                    \"values\": [\n                        \"<string>\"\n                    ]\n                },\n                {\n                    \"key\": \"employeeNumber\",\n                    \"values\": [\n                        \"<string>\"\n                    ]\n                },\n                {\n                    \"key\": \"employeeId\",\n                    \"values\": [\n                        \"<string>\"\n                    ]\n                },\n                {\n                    \"key\": \"roleId\",\n                    \"values\": [\n                        1234\n                    ]\n                },\n                {\n                    \"key\": \"reportsTo\",\n                    \"values\": [\n                        \"<string>\"\n                    ]\n                },\n                {\n                    \"key\": \"isAnonymous\",\n                    \"values\": [\n                        false\n                    ]\n                },\n                {\n                    \"key\": \"isSystemUser\",\n                    \"values\": [\n                        false\n                    ]\n                },\n                {\n                    \"key\": \"isPending\",\n                    \"values\": [\n                        false\n                    ]\n                },\n                {\n                    \"key\": \"isActive\",\n                    \"values\": [\n                        true\n                    ]\n                },\n                {\n                    \"key\": \"lastActivity\",\n                    \"values\": [\n                        1735689600000\n                    ],\n                    \"source\": \"domo\"\n                }\n            ],\n            \"id\": 1234,\n            \"displayName\": \"<string>\",\n            \"roleId\": 1234,\n            \"emailAddress\": \"email@domain.tld\",\n            \"userName\": \"<string>\"\n        },\n        {\n            \"attributes\": [\n                {\n                    \"key\": \"id\",\n                    \"values\": [\n                        2345\n                    ]\n                },\n                {\n                    \"key\": \"displayName\",\n                    \"values\": [\n                        \"<string>\"\n                    ]\n                },\n                {\n                    \"key\": \"department\",\n                    \"values\": [\n                        \"<string>\"\n                    ]\n                },\n                {\n                    \"key\": \"userName\",\n                    \"values\": [\n                        \"<string>\"\n                    ]\n                },\n                {\n                    \"key\": \"emailAddress\",\n                    \"values\": [\n                        \"email@domain.tld\"\n                    ]\n                },\n                {\n                    \"key\": \"phoneNumber\",\n                    \"values\": [\n                        \"000-000-0000\"\n                    ]\n                },\n                {\n                    \"key\": \"deskPhoneNumber\",\n                    \"values\": [\n                        \"000-000-0000\"\n                    ]\n                },\n                {\n                    \"key\": \"title\",\n                    \"values\": [\n                        \"<string>\"\n                    ]\n                },\n                {\n                    \"key\": \"timeZone\",\n                    \"values\": [\n                        \"UTC\"\n                    ]\n                },\n                {\n                    \"key\": \"hireDate\",\n                    \"values\": [\n                        1735689600000\n                    ]\n                },\n                {\n                    \"key\": \"modified\",\n                    \"values\": [\n                        1735689600000\n                    ]\n                },\n                {\n                    \"key\": \"created\",\n                    \"values\": [\n                        1735689600000\n                    ]\n                },\n                {\n                    \"key\": \"alternateEmail\",\n                    \"values\": [\n                        \"email@domain.tld\"\n                    ]\n                },\n                {\n                    \"key\": \"employeeLocation\",\n                    \"values\": [\n                        \"<string>\"\n                    ]\n                },\n                {\n                    \"key\": \"employeeNumber\",\n                    \"values\": [\n                        \"<string>\"\n                    ]\n                },\n                {\n                    \"key\": \"employeeId\",\n                    \"values\": [\n                        \"<string>\"\n                    ]\n                },\n                {\n                    \"key\": \"roleId\",\n                    \"values\": [\n                        1234\n                    ]\n                },\n                {\n                    \"key\": \"reportsTo\",\n                    \"values\": [\n                        \"<string>\"\n                    ]\n                },\n                {\n                    \"key\": \"isAnonymous\",\n                    \"values\": [\n                        false\n                    ]\n                },\n                {\n                    \"key\": \"isSystemUser\",\n                    \"values\": [\n                        false\n                    ]\n                },\n                {\n                    \"key\": \"isPending\",\n                    \"values\": [\n                        false\n                    ]\n                },\n                {\n                    \"key\": \"isActive\",\n                    \"values\": [\n                        true\n                    ]\n                },\n                {\n                    \"key\": \"lastActivity\",\n                    \"values\": [\n                        1735689600000\n                    ],\n                    \"source\": \"domo\"\n                }\n            ],\n            \"id\": 2345,\n            \"displayName\": \"<string>\",\n            \"roleId\": 1234,\n            \"emailAddress\": \"email@domain.tld\",\n            \"userName\": \"<string>\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "list Users (content/v3)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v3/users/?limit=100&offset=0&active=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v3",
								"users",
								""
							],
							"query": [
								{
									"key": "limit",
									"value": "100"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "active",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/content/v3/users/?limit=100&offset=0&active=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content",
										"v3",
										"users",
										""
									],
									"query": [
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "active",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1234,\n        \"invitorUserId\": 2345,\n        \"displayName\": \"<string>\",\n        \"role\": \"<string>\",\n        \"roleId\": 1,\n        \"detail\": {\n            \"email\": \"email@domain.tld\"\n        }\n    },\n    {\n        \"id\": 2345,\n        \"invitorUserId\": 3456,\n        \"displayName\": \"<string>\",\n        \"role\": \"<string>\",\n        \"roleId\": 1,\n        \"detail\": {\n            \"email\": \"email@domain.tld\"\n        }\n    }\n]"
						}
					]
				},
				{
					"name": "Get Users",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{instanceUrl}}/users/index?cvUserIds=1234,2345",
							"host": [
								"{{instanceUrl}}"
							],
							"path": [
								"users",
								"index"
							],
							"query": [
								{
									"key": "cvUserIds",
									"value": "1234,2345",
									"description": "Comma separated list of User IDs."
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{instanceUrl}}/users/index?cvUserIds=1234,2345",
									"host": [
										"{{instanceUrl}}"
									],
									"path": [
										"users",
										"index"
									],
									"query": [
										{
											"key": "cvUserIds",
											"value": "1234,2345",
											"description": "Comma separated list of User IDs."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"userId\": 1234,\n        \"domoUserId\": 1234,\n        \"cvUserId\": \"1234\",\n        \"userName\": \"email@domain.tld\",\n        \"userModified\": 1735689600000,\n        \"displayName\": \"<string>\",\n        \"emailAddress\": \"email@domain.tld\",\n        \"groupId\": null,\n        \"groupName\": null,\n        \"phoneNumber\": \"000-000-0000\",\n        \"userTitle\": \"<string>\",\n        \"userImageOriginal\": null,\n        \"userImage600\": null,\n        \"userImageFull\": null,\n        \"userImageThumb\": null,\n        \"userImageMicro\": null,\n        \"profileImage\": \"4244ca1c-1220-4f1f-8253-8ad0074f4b0e\",\n        \"userTimeZone\": null,\n        \"userLocale\": null,\n        \"customerId\": 1234,\n        \"customerName\": \"domo\",\n        \"password\": null,\n        \"userRole\": null,\n        \"userRoleId\": null,\n        \"userRights\": null,\n        \"systemUser\": false,\n        \"anonymous\": false,\n        \"userPending\": false,\n        \"userHomePageId\": null,\n        \"profileComplete\": 0,\n        \"kpiCreatedList\": null,\n        \"groupCreatedList\": null,\n        \"userFavoriteList\": null,\n        \"userCreated\": 1735689600000,\n        \"userActive\": true\n    },\n    {\n        \"userId\": 234,\n        \"domoUserId\": 234,\n        \"cvUserId\": \"234\",\n        \"userName\": \"email@domain.tld\",\n        \"userModified\": 1735689600000,\n        \"displayName\": \"<string>\",\n        \"emailAddress\": \"email@domain.tld\",\n        \"groupId\": null,\n        \"groupName\": null,\n        \"phoneNumber\": \"000-000-0000\",\n        \"userTitle\": \"<string>\",\n        \"userImageOriginal\": null,\n        \"userImage600\": null,\n        \"userImageFull\": null,\n        \"userImageThumb\": null,\n        \"userImageMicro\": null,\n        \"profileImage\": \"4244ca1c-1220-4f1f-8253-8ad0074f4b0e\",\n        \"userTimeZone\": null,\n        \"userLocale\": null,\n        \"customerId\": 1234,\n        \"customerName\": \"domo\",\n        \"password\": null,\n        \"userRole\": null,\n        \"userRoleId\": null,\n        \"userRights\": null,\n        \"systemUser\": false,\n        \"anonymous\": false,\n        \"userPending\": false,\n        \"userHomePageId\": null,\n        \"profileComplete\": 0,\n        \"kpiCreatedList\": null,\n        \"groupCreatedList\": null,\n        \"userFavoriteList\": null,\n        \"userCreated\": 1735689600000,\n        \"userActive\": true\n    }\n]"
						}
					]
				},
				{
					"name": "Get User (identity/v1)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/identity/v1/users/:id?attributes=id,\ndisplayName,\ndepartment,\nuserName,\nemailAddress,\nphoneNumber,\ndeskPhoneNumber,\ntitle,\ntimeZone,\nhireDate,\nmodified,\ncreated,\nalternateEmail,\nemployeeLocation,\nemployeeNumber,\nemployeeId,\nlocale,\nroleId,\nreportsTo,\nisAnonymous,\nisSystemUser,\nisPending,\nisActive,\ninvitorUserId,\nlastActivity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"identity",
								"v1",
								"users",
								":id"
							],
							"query": [
								{
									"key": "attributes",
									"value": "id,\ndisplayName,\ndepartment,\nuserName,\nemailAddress,\nphoneNumber,\ndeskPhoneNumber,\ntitle,\ntimeZone,\nhireDate,\nmodified,\ncreated,\nalternateEmail,\nemployeeLocation,\nemployeeNumber,\nemployeeId,\nlocale,\nroleId,\nreportsTo,\nisAnonymous,\nisSystemUser,\nisPending,\nisActive,\ninvitorUserId,\nlastActivity",
									"description": "Comma separated list of user attributes to return. Returned by default: id, displayName, userName, emailAddress, roleId."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User (content/v2)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v2/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v2",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "User ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/content/v2/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content",
										"v2",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1234",
											"description": "User ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1234,\n    \"invitorUserId\": 2345,\n    \"displayName\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"emailAddress\": \"<string>\",\n    \"accepted\": true,\n    \"userType\": \"USER\",\n    \"timeZone\": \"UTC\",\n    \"modified\": 1735689600000,\n    \"created\": 1735689600000,\n    \"role\": \"<string>\",\n    \"rights\": 1,\n    \"active\": false,\n    \"systemUser\": false,\n    \"anonymous\": false,\n    \"pending\": false\n}"
						}
					]
				},
				{
					"name": "Get User (content/v3)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v3/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v3",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "User ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Locations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v2/users/attributeTypeahead/EMPLOYEELOCATION?limit=1000&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v2",
								"users",
								"attributeTypeahead",
								"EMPLOYEELOCATION"
							],
							"query": [
								{
									"key": "limit",
									"value": "1000"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "search",
									"value": "",
									"description": "Starts with search value",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Two Factor Enabled",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v2/users/:id/state?keys=twoFactorEnabled",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v2",
								"users",
								":id",
								"state"
							],
							"query": [
								{
									"key": "keys",
									"value": "twoFactorEnabled"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "me",
									"description": "User ID. Use \"me\" for signed in user/token owner."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"displayName\": \"<string>\",\r\n    \"roleId\": 123456,\r\n    \"detail\": {\r\n        \"email\": \"test@email.com\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v3/users?sendInvite=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v3",
								"users"
							],
							"query": [
								{
									"key": "sendInvite",
									"value": "false"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"attributes\": [\r\n        {\r\n            \"key\": \"emailAddress\",\r\n            \"values\": [\r\n                \"test@email.com\"\r\n            ]\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/identity/v1/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"identity",
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "User ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Bulk Update Users",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"transactionId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"users\": [\r\n        {\r\n            \"id\": \"123456\",\r\n            \"displayName\": \"<string>\",\r\n            \"emailAddress\": \"test@email.com\",\r\n            \"title\": \"<string>\",\r\n            \"phoneNumber\": \"1234567890\",\r\n            \"employeeLocation\": \"<string>\",\r\n            \"timeZone\": \"UTC\",\r\n            \"employeeNumber\": \"123\",\r\n            \"employeeId\": \"123\",\r\n            \"department\": \"<string>\",\r\n            \"hireDate\": 1700000000,\r\n            \"reportsTo\": \"123456\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v2/users/bulk",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v2",
								"users",
								"bulk"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Profile Pictures",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"isOpen\": false,\r\n    \"transactionId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"entityIds\": [\r\n        \"123456\"\r\n    ],\r\n    \"entityType\": \"USER\",\r\n    \"base64Image\": \"data:image/jpeg;base64,<base64>\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/content/v1/avatar/bulk",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"avatar",
								"bulk"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Landing Page",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/content/v1/landings/target/:type/entity/PAGE/id/:pageId/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content",
								"v1",
								"landings",
								"target",
								":type",
								"entity",
								"PAGE",
								"id",
								":pageId",
								":userId"
							],
							"variable": [
								{
									"key": "type",
									"value": "DESKTOP",
									"description": "DESKTOP or MOBILE"
								},
								{
									"key": "pageId",
									"value": "",
									"description": "Page ID"
								},
								{
									"key": "userId",
									"value": "",
									"description": "User ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/identity/v1/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"identity",
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "User ID"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "[User and Group Management Official Documentation](https://domo-support.domo.com/s/topic/0TO5w000000ZapJGAS/user-and-group-management?language=en_US)"
		},
		{
			"name": "Workflows",
			"item": [
				{
					"name": "Search Workflows",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"query\": \"*\",\r\n    \"entityList\": [\r\n        [\r\n            \"workflow_model\"\r\n        ]\r\n    ],\r\n    \"count\": 1000,\r\n    \"offset\": 0,\r\n    \"sort\": {\r\n        \"fieldSorts\": [\r\n            {\r\n                \"field\": \"last_modified\",\r\n                \"sortOrder\": \"DESC\"\r\n            }\r\n        ],\r\n        \"isRelevance\": false\r\n    },\r\n    \"filters\": [],\r\n    \"useEntities\": true,\r\n    \"combineResults\": true,\r\n    \"facetValueLimit\": 1000,\r\n    \"hideSearchObjects\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/search/v1/query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"v1",
								"query"
							]
						}
					},
					"response": []
				},
				{
					"name": "list Workflows",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/workflow/v1/models",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflow",
								"v1",
								"models"
							],
							"query": [
								{
									"key": "limit",
									"value": "100",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/workflow/v1/models",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"workflow",
										"v1",
										"models"
									],
									"query": [
										{
											"key": "limit",
											"value": "100",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"owner\": \"1234\",\n        \"createdBy\": \"1234\",\n        \"createdOn\": \"2025-01-01T12:00:00Z\",\n        \"updatedBy\": \"854985851\",\n        \"updatedOn\": \"2025-01-01T12:00:00Z\",\n        \"lastVersionUpdatedOn\": \"2025-01-01T12:00:00Z\",\n        \"lastVersionUpdatedBy\": \"854985851\",\n        \"userPermissions\": []\n    },\n    {\n        \"id\": \"11111111-1111-1111-1111-111111111111\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"owner\": \"1234\",\n        \"createdBy\": \"1234\",\n        \"createdOn\": \"2025-01-01T12:00:00Z\",\n        \"updatedBy\": \"1234\",\n        \"updatedOn\": \"2025-01-01T12:00:00Z\",\n        \"lastVersionUpdatedOn\": \"2025-01-01T12:00:00Z\",\n        \"lastVersionUpdatedBy\": \"1234\",\n        \"userPermissions\": []\n    }\n]"
						}
					]
				},
				{
					"name": "list Executions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json;charset=utf-8",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/workflow/v2/executions?modelId=&triggerTypes=ALERT,API,APP_STUDIO,CUSTOM_APP,MANUAL,TIMER,WORKFLOW&version=1.0.0&status=COMPLETED,IN_PROGRESS,CANCELLED,FAILED",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflow",
								"v2",
								"executions"
							],
							"query": [
								{
									"key": "modelId",
									"value": "",
									"description": "Workflow UUID"
								},
								{
									"key": "triggerTypes",
									"value": "ALERT,API,APP_STUDIO,CUSTOM_APP,MANUAL,TIMER,WORKFLOW",
									"description": "ALERT,API,APP_STUDIO,CUSTOM_APP,MANUAL,TIMER,WORKFLOW"
								},
								{
									"key": "version",
									"value": "1.0.0"
								},
								{
									"key": "status",
									"value": "COMPLETED,IN_PROGRESS,CANCELLED,FAILED",
									"description": "COMPLETED,IN_PROGRESS,CANCELLED,FAILED"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Workflow",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/workflow/v1/models/:id?parts=users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflow",
								"v1",
								"models",
								":id"
							],
							"query": [
								{
									"key": "parts",
									"value": "users"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Workflow UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Permissions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/workflow/v1/models/:id/permissions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflow",
								"v1",
								"models",
								":id",
								"permissions"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Workflow UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Locks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/workflow/v1/models/:id/locks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflow",
								"v1",
								"models",
								":id",
								"locks"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Workflow UUID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Start Workflow",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"messageName\": \"<string>\",\r\n    \"version\": \"1.0.0\",\r\n    \"modelId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"data\": {\r\n        \"Variable 1\": \"<value>\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/workflow/v1/instances/message",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflow",
								"v1",
								"instances",
								"message"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Workflow",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"name\": \"<string>\",\r\n    \"description\": \"<string>\",\r\n    \"activeVersions\": 0,\r\n    \"numberOfVersions\": 1,\r\n    \"totalTimesRun\": 0,\r\n    \"createdBy\": \"123456\",\r\n    \"createdOn\": \"Wed Oct 11 2023 13:35:17 GMT-0600 (Mountain Daylight Time)\",\r\n    \"owner\": \"123456\",\r\n    \"userPermissions\": [\r\n        {\r\n            \"id\": \"123456\",\r\n            \"roleId\": 1,\r\n            \"permissions\": [\r\n                \"ADMIN\",\r\n                \"SHARE\",\r\n                \"DELETE\",\r\n                \"WRITE\",\r\n                \"READ\",\r\n                \"EXPORT\",\r\n                \"EXECUTE\",\r\n                \"READ_CONTENT\",\r\n                \"UPDATE_CONTENT\"\r\n            ]\r\n        }\r\n    ],\r\n    \"userName\": \"<string>\",\r\n    \"updatedOn\": \"Wed Oct 11 2023 13:57:30 GMT-0600 (Mountain Daylight Time)\",\r\n    \"lockInfo\": [\r\n        {\r\n            \"version\": \"1.0.0\",\r\n            \"lockedOn\": null,\r\n            \"lockedBy\": null,\r\n            \"success\": null\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/workflow/v1/models/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflow",
								"v1",
								"models",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "",
									"description": "Workflow UUID"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "[Workflows Official Documentation](https://domo-support.domo.com/s/topic/0TO5w000000ZkAMGA0/workflows?language=en_US)"
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{X-DOMO-Developer-Token}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "X-DOMO-Developer-Token",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"let instance = pm.globals.get('instance') || pm.environment.get('instance') || pm.collectionVariables.get('instance') || null;",
					"if (instance === null) {",
					"    throw new Error('You need to set the variable \"instance\" with the name of your Domo instance (e.g., \"example\" for https://example.domo.com). This variable can be set in globals, an environment, or on the collection.')",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "instanceUrl",
			"value": "https://{{instance}}.domo.com"
		},
		{
			"key": "baseUrl",
			"value": "{{instanceUrl}}/api"
		}
	]
}
